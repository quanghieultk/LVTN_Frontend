{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\LVTN\\\\cuisine-net\\\\src\\\\pages\\\\friend\\\\ListFriend.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport { history } from '../../helpers/history';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { userService } from '../../services/user.service';\nimport Card from '@material-ui/core/Card';\nimport Grid from \"@material-ui/core/Grid\";\nimport CardContent from '@material-ui/core/CardContent';\nimport MessageIcon from '@material-ui/icons/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    padding: '0!important'\n  },\n  inline: {\n    display: 'inline'\n  },\n  nonePadding: {\n    padding: \"0!important\"\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  iconMessage: {\n    textAlign: 'center',\n    paddingTop: '35px'\n  },\n  '@global': {// '.MuiAvatar-root': {\n    //     width: '70px',\n    //     height: '70px'\n    // }\n  }\n}));\nexport default function ListFriend(props) {\n  _s();\n\n  const classes = useStyles();\n  const [listFollwers, setListFollwers] = useState();\n  const [listFollwings, setListFollwings] = useState();\n  useEffect(() => {\n    userService.getFollwer(props.userId).then(res => {\n      setListFollwers(res.data.data.friendList[0].followers);\n    }).catch(err => [console.log(err)]);\n    userService.getFollwing(props.userId).then(res => {\n      setListFollwings(res.data.data.friendList[0].following);\n    }).catch(err => [console.log(err)]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Followers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      children: listFollwers ? listFollwers.map(ele => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                className: classes.nonePadding,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  onClick: () => {\n                    console.log('sdfsd');\n                    history.push({\n                      pathname: \"/profile/\" + ele.user._id\n                    });\n                    history.go();\n                  },\n                  src: ele.user.photo,\n                  name: \"Zoe\",\n                  size: \"lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 8,\n                className: classes.nonePadding,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  className: classes.title,\n                  component: \"h6\",\n                  children: ele.user.firstname + ele.user.lastname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.pos,\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: ele.user.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  component: \"p\",\n                  children: \"99 ng\\u01B0\\u1EDDi theo d\\xF5i\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                className: classes.iconMessage,\n                children: /*#__PURE__*/_jsxDEV(MessageIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 32\n        }, this); // <ListItem alignItems=\"flex-start\">\n        //     <ListItemAvatar>\n        //         <Avatar className={classes.avatarImg}  alt=\"Remy Sharp\" src={ele.user.photo} />\n        //     </ListItemAvatar>\n        //     <ListItemText\n        //         primary={ele.user.firstname}\n        //         secondary={\n        //             <React.Fragment>\n        //                 <Typography\n        //                     component=\"span\"\n        //                     variant=\"body2\"\n        //                     className={classes.inline}\n        //                     color=\"textPrimary\"\n        //                 >\n        //                     {ele.user.address}\n        //                 </Typography>\n        //             </React.Fragment>\n        //         }\n        //     />\n        // </ListItem>\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Followings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      children: listFollwings ? listFollwings.map(ele => {\n        var _ele$user, _ele$user2, _ele$user3, _ele$user4;\n\n        return /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => {\n            history.push({\n              pathname: \"/profile/\" + ele.user._id\n            });\n            history.go();\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                className: classes.nonePadding,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: (_ele$user = ele.user) === null || _ele$user === void 0 ? void 0 : _ele$user.photo,\n                  name: \"Zoe\",\n                  size: \"lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 8,\n                className: classes.nonePadding,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  className: classes.title,\n                  component: \"h6\",\n                  children: ((_ele$user2 = ele.user) === null || _ele$user2 === void 0 ? void 0 : _ele$user2.firstname) + ((_ele$user3 = ele.user) === null || _ele$user3 === void 0 ? void 0 : _ele$user3.lastname)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.pos,\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: (_ele$user4 = ele.user) === null || _ele$user4 === void 0 ? void 0 : _ele$user4.address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  component: \"p\",\n                  children: \"99 ng\\u01B0\\u1EDDi theo d\\xF5i\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 2,\n                className: classes.iconMessage,\n                children: /*#__PURE__*/_jsxDEV(MessageIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 32\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListFriend, \"XxJqPpWGfs5xHS/6QSWCckXnNJg=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListFriend;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListFriend\");","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/pages/friend/ListFriend.js"],"names":["React","useEffect","useState","makeStyles","List","history","Avatar","Typography","userService","Card","Grid","CardContent","MessageIcon","useStyles","theme","root","width","backgroundColor","palette","background","paper","padding","inline","display","nonePadding","title","fontSize","fontWeight","iconMessage","textAlign","paddingTop","ListFriend","props","classes","listFollwers","setListFollwers","listFollwings","setListFollwings","getFollwer","userId","then","res","data","friendList","followers","catch","err","console","log","getFollwing","following","map","ele","push","pathname","user","_id","go","photo","firstname","lastname","pos","address"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport { history } from '../../helpers/history';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { userService } from '../../services/user.service';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: '0!important'\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    nonePadding: {\r\n        padding: \"0!important\"\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold'\r\n    },\r\n    iconMessage: {\r\n        textAlign: 'center',\r\n        paddingTop: '35px'\r\n    },\r\n    '@global': {\r\n        // '.MuiAvatar-root': {\r\n        //     width: '70px',\r\n        //     height: '70px'\r\n        // }\r\n    }\r\n}));\r\n\r\nexport default function ListFriend(props) {\r\n    const classes = useStyles();\r\n    const [listFollwers, setListFollwers] = useState();\r\n    const [listFollwings, setListFollwings] = useState();\r\n    useEffect(() => {\r\n        userService.getFollwer(props.userId).then(res => {\r\n            setListFollwers(res.data.data.friendList[0].followers);\r\n        }).catch(err => [\r\n            console.log(err)\r\n        ])\r\n        userService.getFollwing(props.userId).then(res => {\r\n            setListFollwings(res.data.data.friendList[0].following);\r\n        }).catch(err => [\r\n            console.log(err)\r\n        ])\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <Typography>Followers</Typography>\r\n            <List className={classes.root}>\r\n                {\r\n                    listFollwers ? listFollwers.map((ele) => {\r\n                        return <Card\r\n                        >\r\n                            <CardContent>\r\n                                <Grid container>\r\n                                    <Grid item xs={2} className={classes.nonePadding}>\r\n                                        <Avatar\r\n                                            onClick={\r\n                                                () => {\r\n                                                    console.log('sdfsd')\r\n                                                    history.push({\r\n                                                        pathname: \"/profile/\" + ele.user._id,\r\n                                                    });\r\n                                                    history.go();\r\n                                                }\r\n                                            }\r\n                                            src={ele.user.photo} name={\"Zoe\"} size=\"lg\" />\r\n                                    </Grid>\r\n                                    <Grid item xs={8} className={classes.nonePadding}>\r\n                                        <Typography variant=\"h6\" className={classes.title} component=\"h6\">\r\n                                            {ele.user.firstname + ele.user.lastname}\r\n                                        </Typography>\r\n                                        <Typography className={classes.pos} variant=\"body2\" color=\"textSecondary\">\r\n                                            {ele.user.address}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            99 người theo dõi\r\n                                    </Typography>\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={2} className={classes.iconMessage} >\r\n                                        <MessageIcon ></MessageIcon>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                        // <ListItem alignItems=\"flex-start\">\r\n                        //     <ListItemAvatar>\r\n                        //         <Avatar className={classes.avatarImg}  alt=\"Remy Sharp\" src={ele.user.photo} />\r\n                        //     </ListItemAvatar>\r\n                        //     <ListItemText\r\n                        //         primary={ele.user.firstname}\r\n                        //         secondary={\r\n                        //             <React.Fragment>\r\n                        //                 <Typography\r\n                        //                     component=\"span\"\r\n                        //                     variant=\"body2\"\r\n                        //                     className={classes.inline}\r\n                        //                     color=\"textPrimary\"\r\n                        //                 >\r\n                        //                     {ele.user.address}\r\n                        //                 </Typography>\r\n                        //             </React.Fragment>\r\n                        //         }\r\n                        //     />\r\n                        // </ListItem>\r\n                    }) : null\r\n                }\r\n            </List>\r\n            <Typography>Followings</Typography>\r\n            <List className={classes.root}>\r\n                {\r\n                    listFollwings ? listFollwings.map((ele) => {\r\n                        return <Card\r\n                            onClick={\r\n                                () => {\r\n                                    history.push({\r\n                                        pathname: \"/profile/\" + ele.user._id,\r\n                                    });\r\n                                    history.go();\r\n                                }\r\n                            }>\r\n                            <CardContent>\r\n                                <Grid container>\r\n                                    <Grid item xs={2} className={classes.nonePadding}>\r\n                                        <Avatar src={ele.user?.photo} name={\"Zoe\"} size=\"lg\" />\r\n                                    </Grid>\r\n                                    <Grid item xs={8} className={classes.nonePadding}>\r\n                                        <Typography variant=\"h6\" className={classes.title} component=\"h6\">\r\n                                            {ele.user?.firstname + ele.user?.lastname}\r\n                                        </Typography>\r\n                                        <Typography className={classes.pos} variant=\"body2\" color=\"textSecondary\">\r\n                                            {ele.user?.address}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            99 người theo dõi\r\n                                    </Typography>\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={2} className={classes.iconMessage} >\r\n                                        <MessageIcon ></MessageIcon>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    }) : null\r\n                }\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}