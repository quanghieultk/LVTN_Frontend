{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\LVTN\\\\cuisine-net\\\\src\\\\components\\\\coverImage\\\\CoverImageRestaurant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport { Avatar, Paper } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport { useDispatch } from 'react-redux';\nimport { Modal, Upload } from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport getBase64 from './../../utils/getBase64';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  large: {\n    width: \"100%\",\n    height: \"100%\",\n    margin: \"auto\"\n  },\n  root: {\n    maxWidth: \"100%%\",\n    maxHeight: \"100%%\",\n    height: \"100%\",\n    boxShadow: 'none'\n  },\n  input: {\n    display: 'none'\n  },\n  '@global': {\n    '#coverRestaurant': {\n      height: \"300px\"\n    }\n  },\n  '@global': {\n    '.MuiAvatar-circle': {\n      border: \"1px solid\"\n    }\n  }\n}));\nconst SmallAvatar = withStyles(theme => ({\n  root: {\n    width: 35,\n    height: 35,\n    border: `2px solid ${theme.palette.background.paper}`\n  }\n}))(Avatar);\nexport function CoverImageRestaurant(props) {\n  _s();\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('false');\n  const [fileList, setFileList] = useState([]);\n  const [data, setData] = useState(); // const idUser = props.idUser;\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const dispatch = useDispatch(); // const data = useSelector(state => state.authentication.user.data);\n\n  const [isVisibleChangeAvatarModal, setIsVisibleChangeAvatarModal] = useState(false);\n  const [isVisibleChangeBackgroundModal, setIsVisibleChangeBackgroundModal] = useState(false);\n\n  const handleOk = async () => {\n    const form = new FormData();\n\n    for (const file of fileList) {\n      let fileData = await getBase64(file.originFileObj);\n      let blod = new Blob([fileData], {\n        type: 'image/png'\n      });\n      form.append('photo', blod, file.name);\n    } // userService.changeProfilePicture(form).then((res) => {\n    //     alert(\"da thay doi\");\n    //     dispatch(userActions.getInfoUser(idUser));\n    // }).catch(err => {\n    //     console.log(err)\n    // });\n\n\n    setIsVisibleChangeAvatarModal(false);\n  }; // const handleChangeBackground = async () => {\n  //     const form = new FormData();\n  //     for (const file of fileList) {\n  //         let fileData = await getBase64(file.originFileObj);\n  //         let blod = new Blob([fileData], { type: 'image/png' });\n  //         form.append('photo', blod, file.name);\n  //     }\n  //     userService.changeBackgroundPicture(form).then((res) => {\n  //         alert(\"da thay doi\");\n  //         dispatch(userActions.getInfoUser(idUser));\n  //     }).catch(err => {\n  //         console.log(err)\n  //     });\n  //     setIsVisibleChangeBackgroundModal(false);\n  // };\n\n\n  const handleCancel = () => {\n    setIsVisibleChangeAvatarModal(false);\n  };\n\n  const onChange = ({\n    fileList\n  }) => {\n    setFileList(fileList);\n  };\n\n  const onPreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n  }; // useEffect(() => {\n  //     userService.getInfoUser(idUser)\n  //     .then(items=>\n  //         {\n  //             setData(items.data.data);\n  //         })\n  //     let background = data ? data.user.background : null;\n  //     document.getElementById('backgroundImage').style.backgroundImage = `url(${background})`;\n  // },[])\n\n\n  useEffect(() => {\n    document.getElementById('coverRestaurant').style.backgroundImage = `url(https://www.incimages.com/uploaded_files/image/1920x1080/getty_509107562_2000133320009280346_351827.jpg)`;\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        height: \"90%\",\n        postion: \"relative\"\n      },\n      id: \"coverRestaurant\",\n      children:\n      /*#__PURE__*/\n      // idUser == JSON.parse(localStorage.getItem('user')).data.user._id ? \n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"upload picture\",\n          component: \"span\",\n          onClick: () => setIsVisibleChangeBackgroundModal(!isVisibleChangeBackgroundModal),\n          children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          title: \"C\\u1EADp nh\\u1EADt \\u1EA3nh b\\xECa\",\n          visible: isVisibleChangeBackgroundModal // onOk={handleChangeBackground}\n          ,\n          onCancel: () => setIsVisibleChangeBackgroundModal(false),\n          className: \"location_modal\",\n          children: /*#__PURE__*/_jsxDEV(ImgCrop, {\n            rotate: true,\n            modalOk: \"L\\u01B0u\",\n            children: /*#__PURE__*/_jsxDEV(Upload, {\n              listType: \"picture-card\",\n              fileList: fileList,\n              onPreview: onPreview,\n              onChange: onChange,\n              beforeUpload: file => {\n                return false;\n              },\n              maxCount: 1,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: 8\n                  },\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this) // : ''\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CoverImageRestaurant, \"WTpywdHN7YPGU/IwbPoDDOgS5qQ=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = CoverImageRestaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoverImageRestaurant\");","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/components/coverImage/CoverImageRestaurant.js"],"names":["React","useEffect","useState","makeStyles","withStyles","Card","Avatar","Paper","IconButton","PhotoCamera","useDispatch","Modal","Upload","ImgCrop","getBase64","PlusOutlined","useStyles","theme","large","width","height","margin","root","maxWidth","maxHeight","boxShadow","input","display","border","SmallAvatar","palette","background","paper","CoverImageRestaurant","props","classes","expanded","setExpanded","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","fileList","setFileList","data","setData","handleExpandClick","dispatch","isVisibleChangeAvatarModal","setIsVisibleChangeAvatarModal","isVisibleChangeBackgroundModal","setIsVisibleChangeBackgroundModal","handleOk","form","FormData","file","fileData","originFileObj","blod","Blob","type","append","name","handleCancel","onChange","onPreview","url","preview","substring","lastIndexOf","document","getElementById","style","backgroundImage","backgroundRepeat","backgroundSize","postion","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Avatar, Paper } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Modal, Upload } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport getBase64 from './../../utils/getBase64';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nconst useStyles = makeStyles((theme) => ({\r\n    large: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        margin: \"auto\",\r\n    },\r\n    root: {\r\n        maxWidth: \"100%%\",\r\n        maxHeight: \"100%%\",\r\n        height: \"100%\",\r\n        boxShadow: 'none',\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    '@global': {\r\n        '#coverRestaurant': {\r\n            height: \"300px\"\r\n        }\r\n    },\r\n    '@global': {\r\n        '.MuiAvatar-circle': {\r\n            border: \"1px solid\"\r\n        }\r\n    },\r\n}));\r\nconst SmallAvatar = withStyles((theme) => ({\r\n    root: {\r\n        width: 35,\r\n        height: 35,\r\n        border: `2px solid ${theme.palette.background.paper}`,\r\n    },\r\n}))(Avatar);\r\nexport function CoverImageRestaurant(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('false');\r\n    const [fileList, setFileList] = useState([]);\r\n    const [data, setData]=useState();\r\n    // const idUser = props.idUser;\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n    const dispatch = useDispatch();\r\n    // const data = useSelector(state => state.authentication.user.data);\r\n    const [isVisibleChangeAvatarModal, setIsVisibleChangeAvatarModal] = useState(false);\r\n    const [isVisibleChangeBackgroundModal, setIsVisibleChangeBackgroundModal] = useState(false);\r\n    const handleOk = async () => {\r\n        const form = new FormData();\r\n        for (const file of fileList) {\r\n            let fileData = await getBase64(file.originFileObj);\r\n            let blod = new Blob([fileData], { type: 'image/png' });\r\n            form.append('photo', blod, file.name);\r\n        }\r\n        // userService.changeProfilePicture(form).then((res) => {\r\n        //     alert(\"da thay doi\");\r\n        //     dispatch(userActions.getInfoUser(idUser));\r\n        // }).catch(err => {\r\n        //     console.log(err)\r\n        // });\r\n        setIsVisibleChangeAvatarModal(false);\r\n    };\r\n    // const handleChangeBackground = async () => {\r\n    //     const form = new FormData();\r\n    //     for (const file of fileList) {\r\n    //         let fileData = await getBase64(file.originFileObj);\r\n    //         let blod = new Blob([fileData], { type: 'image/png' });\r\n    //         form.append('photo', blod, file.name);\r\n    //     }\r\n    //     userService.changeBackgroundPicture(form).then((res) => {\r\n    //         alert(\"da thay doi\");\r\n    //         dispatch(userActions.getInfoUser(idUser));\r\n    //     }).catch(err => {\r\n    //         console.log(err)\r\n    //     });\r\n    //     setIsVisibleChangeBackgroundModal(false);\r\n    // };\r\n    const handleCancel = () => {\r\n        setIsVisibleChangeAvatarModal(false);\r\n    };\r\n    const onChange = ({ fileList }) => {\r\n        setFileList(fileList);\r\n    };\r\n    const onPreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewVisible(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\r\n    };\r\n    // useEffect(() => {\r\n    //     userService.getInfoUser(idUser)\r\n    //     .then(items=>\r\n    //         {\r\n    //             setData(items.data.data);\r\n    //         })\r\n    //     let background = data ? data.user.background : null;\r\n    //     document.getElementById('backgroundImage').style.backgroundImage = `url(${background})`;\r\n    // },[])\r\n    useEffect(()=>{\r\n        document.getElementById('coverRestaurant').style.backgroundImage = `url(https://www.incimages.com/uploaded_files/image/1920x1080/getty_509107562_2000133320009280346_351827.jpg)`;\r\n    })\r\n    return (\r\n        \r\n        <Card className={classes.root}>\r\n            {/* {console.log(data)} */}\r\n            <Paper style={{ backgroundRepeat: \"no-repeat\", backgroundSize: \"cover\", height: \"90%\", postion: \"relative\" }} id=\"coverRestaurant\" >\r\n                {\r\n                    // idUser == JSON.parse(localStorage.getItem('user')).data.user._id ? \r\n                    <div>\r\n                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" onClick={() => setIsVisibleChangeBackgroundModal(!isVisibleChangeBackgroundModal)}>\r\n                            <PhotoCamera />\r\n                        </IconButton>\r\n                        <Modal\r\n                            title=\"Cập nhật ảnh bìa\"\r\n                            visible={isVisibleChangeBackgroundModal}\r\n                            // onOk={handleChangeBackground}\r\n                            onCancel={() => setIsVisibleChangeBackgroundModal(false)}\r\n                            className=\"location_modal\"\r\n                        >\r\n                            <ImgCrop\r\n                                rotate\r\n                                modalOk=\"Lưu\"\r\n                            >\r\n                                <Upload\r\n                                    listType=\"picture-card\"\r\n                                    fileList={fileList}\r\n                                    onPreview={onPreview}\r\n                                    onChange={onChange}\r\n                                    beforeUpload={file => {\r\n                                        return false;\r\n                                    }}\r\n                                    maxCount={1}\r\n                                >\r\n                                    <div>\r\n                                        <PlusOutlined />\r\n                                        <div style={{ marginTop: 8 }}>Upload</div>\r\n                                    </div>\r\n                                </Upload>\r\n                            </ImgCrop>\r\n                        </Modal>\r\n                    </div> \r\n                    // : ''\r\n                }\r\n            </Paper>\r\n        </Card >\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}