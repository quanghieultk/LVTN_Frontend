{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\LVTN\\\\cuisine-net\\\\src\\\\components\\\\searchBox\\\\searchBox.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SearchBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPlacesChanged = () => {\n      if (this.props.onPlacesChanged) {\n        this.props.onPlacesChanged(this.searchBox.getPlaces());\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: \"input\",\n      ...this.props,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  componentDidMount() {\n    const {\n      mapsapi: {\n        places\n      }\n    } = this.props;\n    this.searchBox = new places.SearchBox(this.searchInput.current);\n    this.searchBox.addListener('places_changed', this.onPlacesChanged);\n  }\n\n  componentWillUnmount() {\n    const {\n      mapsapi: {\n        event\n      }\n    } = this.props;\n    event.clearInstanceListeners(this.searchBox);\n  }\n\n}\nSearchBox.propTypes = {\n  placeholder: React.PropTypes.string,\n  onPlacesChanged: React.PropTypes.func\n};","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/components/searchBox/searchBox.js"],"names":["React","ReactDOM","SearchBox","Component","onPlacesChanged","props","searchBox","getPlaces","render","componentDidMount","mapsapi","places","searchInput","current","addListener","componentWillUnmount","event","clearInstanceListeners","propTypes","placeholder","PropTypes","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAQrDC,eARqD,GAQnC,MAAM;AACtB,UAAI,KAAKC,KAAL,CAAWD,eAAf,EAAgC;AAC9B,aAAKC,KAAL,CAAWD,eAAX,CAA2B,KAAKE,SAAL,CAAeC,SAAf,EAA3B;AACD;AACF,KAZoD;AAAA;;AAKrDC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA,SAAuB,KAAKH,KAA5B;AAAmC,MAAA,IAAI,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAMDI,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AACFC,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEA,KAAKN,KAFX;AAIE,SAAKC,SAAL,GAAiB,IAAIK,MAAM,CAACT,SAAX,CAAqB,KAAKU,WAAL,CAAiBC,OAAtC,CAAjB;AACA,SAAKP,SAAL,CAAeQ,WAAf,CAA2B,gBAA3B,EAA6C,KAAKV,eAAlD;AACH;;AACDW,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AACFL,MAAAA,OAAO,EAAE;AAAEM,QAAAA;AAAF;AADP,QAEA,KAAKX,KAFX;AAIEW,IAAAA,KAAK,CAACC,sBAAN,CAA6B,KAAKX,SAAlC;AACH;;AA3BoD;AAAlCJ,S,CACZgB,S,GAAY;AACjBC,EAAAA,WAAW,EAAEnB,KAAK,CAACoB,SAAN,CAAgBC,MADZ;AAEjBjB,EAAAA,eAAe,EAAEJ,KAAK,CAACoB,SAAN,CAAgBE;AAFhB,C","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default class SearchBox extends React.Component {\r\n  static propTypes = {\r\n    placeholder: React.PropTypes.string,\r\n    onPlacesChanged: React.PropTypes.func\r\n  }\r\n  render() {\r\n    return <input ref=\"input\" {...this.props} type=\"text\"/>;\r\n  }\r\n  onPlacesChanged = () => {\r\n    if (this.props.onPlacesChanged) {\r\n      this.props.onPlacesChanged(this.searchBox.getPlaces());\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const {\r\n        mapsapi: { places },\r\n      } = this.props;\r\n  \r\n      this.searchBox = new places.SearchBox(this.searchInput.current);\r\n      this.searchBox.addListener('places_changed', this.onPlacesChanged);\r\n  }\r\n  componentWillUnmount() {\r\n    const {\r\n        mapsapi: { event },\r\n      } = this.props;\r\n  \r\n      event.clearInstanceListeners(this.searchBox);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}