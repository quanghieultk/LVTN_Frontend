{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\LVTN\\\\cuisine-net\\\\src\\\\pages\\\\message\\\\messagePage.js\";\n// import React, { useEffect, useState } from 'react';\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Grid from \"@material-ui/core/Grid\";\n// import { Header } from '../../components/header/Header';\n// import { Container, Divider } from '@material-ui/core';\n// import styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\n// import {\n//     MainContainer,\n//     ConversationHeader,\n//     Avatar,\n//     VoiceCallButton,\n//     VideoCallButton,\n//     ChatContainer,\n//     ExpansionPanel,\n//     TypingIndicator,\n//     MessageSeparator,\n//     Sidebar,\n//     Search,\n//     EllipsisButton,\n//     ConversationList,\n//     InfoButton,\n//     Conversation,\n//     MessageList,\n//     Message,\n//     MessageInput,\n// } from \"@chatscope/chat-ui-kit-react\";\n// const useStyles = makeStyles((theme) => ({\n//     formMessage: {\n//         height: \"750px\",\n//         position: \"relative\"\n//     },\n//     nonePadding: {\n//         padding: \"0!important\"\n//     }\n// }));\n// export function MessagePage() {\n//     const classes = useStyles();\n//     const [chatList, setChatList] = useState();\n//     const [chatUser, setChatUser] = useState();\n//     const [messageList, setMessageList] = useState();\n//     const [messageInputValue, setMessageInputValue] = useState(\"\");\n//     function onSubmitMessage(val) {\n//         console.log(val)\n//     }\n//     useEffect(() => {\n//     }, [])\n//     var avatarImg = \"https://chatscope.io/storybook/react/static/media/zoe.e31a4ff8.svg\";\n//     return (\n//         <Container>\n//             <Grid container spacing={3} >\n//                 <Grid item xs={12} className={classes.nonePadding}>\n//                     <Header></Header>\n//                 </Grid>\n//                 <Grid className={classes.formMessage} item xs={12} style={{ marginTop: \"80px\" }}>\n//                     <MainContainer responsive>\n//                         <Sidebar position=\"left\" scrollable={false}>\n//                             <Search placeholder=\"Search...\" />\n//                             <ConversationList>\n//                                 <Conversation name=\"Lilly\" lastSenderName=\"Lilly\" info=\"Yes i can do it for you\">\n//                                     <Avatar src={avatarImg} name=\"Lilly\" status=\"available\" />\n//                                 </Conversation>\n//                             </ConversationList>\n//                         </Sidebar>\n//                         <ChatContainer>\n//                             <ConversationHeader>\n//                                 <ConversationHeader.Back />\n//                                 <Avatar src={avatarImg} name=\"Zoe\" />\n//                                 <ConversationHeader.Content userName=\"Zoe\" info=\"Active 10 mins ago\" />\n//                                 <ConversationHeader.Actions>\n//                                     <VoiceCallButton />\n//                                     <VideoCallButton />\n//                                     <EllipsisButton orientation=\"vertical\" />\n//                                 </ConversationHeader.Actions>\n//                             </ConversationHeader>\n//                             <MessageList typingIndicator={<TypingIndicator content=\"Zoe is typing\" />}>\n//                                 <MessageSeparator content=\"Saturday, 30 November 2019\" />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Zoe\",\n//                                     direction: \"incoming\",\n//                                     position: \"single\"\n//                                 }}>\n//                                     <Avatar src={avatarImg} name=\"Zoe\" />\n//                                 </Message>\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Patrik\",\n//                                     direction: \"outgoing\",\n//                                     position: \"single\"\n//                                 }} avatarSpacer />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Zoe\",\n//                                     direction: \"incoming\",\n//                                     position: \"first\"\n//                                 }} avatarSpacer />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Zoe\",\n//                                     direction: \"incoming\",\n//                                     position: \"normal\"\n//                                 }} avatarSpacer />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Zoe\",\n//                                     direction: \"incoming\",\n//                                     position: \"normal\"\n//                                 }} avatarSpacer />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Zoe\",\n//                                     direction: \"incoming\",\n//                                     position: \"normal\"\n//                                 }} avatarSpacer />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Zoe\",\n//                                     direction: \"incoming\",\n//                                     position: \"normal\"\n//                                 }} avatarSpacer />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Zoe\",\n//                                     direction: \"incoming\",\n//                                     position: \"normal\"\n//                                 }} avatarSpacer />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Zoe\",\n//                                     direction: \"incoming\",\n//                                     position: \"normal\"\n//                                 }} avatarSpacer />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Zoe\",\n//                                     direction: \"incoming\",\n//                                     position: \"normal\"\n//                                 }} avatarSpacer />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Zoe\",\n//                                     direction: \"incoming\",\n//                                     position: \"normal\"\n//                                 }} avatarSpacer />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Zoe\",\n//                                     direction: \"incoming\",\n//                                     position: \"last\"\n//                                 }}>\n//                                     <Avatar src={avatarImg} name=\"Zoe\" />\n//                                 </Message>\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Patrik\",\n//                                     direction: \"outgoing\",\n//                                     position: \"first\"\n//                                 }} />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Patrik\",\n//                                     direction: \"outgoing\",\n//                                     position: \"normal\"\n//                                 }} />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Patrik\",\n//                                     direction: \"outgoing\",\n//                                     position: \"normal\"\n//                                 }} />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Patrik\",\n//                                     direction: \"outgoing\",\n//                                     position: \"last\"\n//                                 }} />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Zoe\",\n//                                     direction: \"incoming\",\n//                                     position: \"first\"\n//                                 }} avatarSpacer />\n//                                 <Message model={{\n//                                     message: \"Hello my friend\",\n//                                     sentTime: \"15 mins ago\",\n//                                     sender: \"Zoe\",\n//                                     direction: \"incoming\",\n//                                     position: \"last\"\n//                                 }}>\n//                                     <Avatar src={avatarImg} name=\"Zoe\" />\n//                                 </Message>\n//                             </MessageList>\n//                             <MessageInput placeholder=\"Type message here\" value={messageInputValue} onChange={val => setMessageInputValue(val)} onSend={(val) => onSubmitMessage(val)} />\n//                         </ChatContainer>\n//                         <Sidebar position=\"right\">\n//                             <ExpansionPanel open title=\"INFO\">\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                             </ExpansionPanel>\n//                             <ExpansionPanel title=\"LOCALIZATION\">\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                             </ExpansionPanel>\n//                             <ExpansionPanel title=\"MEDIA\">\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                             </ExpansionPanel>\n//                             <ExpansionPanel title=\"SURVEY\">\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                             </ExpansionPanel>\n//                             <ExpansionPanel title=\"OPTIONS\">\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                                 <p>Lorem ipsum</p>\n//                             </ExpansionPanel>\n//                         </Sidebar>\n//                     </MainContainer>\n//                 </Grid>\n//             </Grid>\n//         </Container >\n//     );\n// }\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MessengerSidePanel } from \"./MessengerSidePanel\";\nimport { MessengerContent } from \"./MessengerContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MessengerPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      document.title = \"Messages | social-network\";\n    };\n  }\n\n  render() {\n    const {\n      chat,\n      roomId\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"frame\",\n      children: [/*#__PURE__*/_jsxDEV(MessengerSidePanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), chat.currentRoom ? /*#__PURE__*/_jsxDEV(MessengerContent, {\n        content: chat[roomId]\n      }, roomId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  roomId: state.chat.roomId,\n  chat: state.chat\n});\n\nconst Messenger = connect(mapStateToProps)(MessengerPage);\nexport { Messenger as MessagePage };","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/pages/message/messagePage.js"],"names":["React","Component","connect","MessengerSidePanel","MessengerContent","MessengerPage","componentDidMount","document","title","render","chat","roomId","props","currentRoom","mapStateToProps","state","Messenger","MessagePage"],"mappingsgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SACpCK,iBADoC,GAChB,MAAM;AACxBC,MAAAA,QAAQ,CAACC,KAAT,GAAiB,2BAAjB;AACD,KAHmC;AAAA;;AAKpCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,KAAKC,KAA9B;AACA,wBACE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA,8BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,IAAI,CAACG,WAAL,gBACC,QAAC,gBAAD;AACE,QAAA,OAAO,EAAEH,IAAI,CAACC,MAAD;AADf,SAEOA,MAFP;AAAA;AAAA;AAAA;AAAA,cADD,GAKG,IAPN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAlBmC;;AAqBtC,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCJ,EAAAA,MAAM,EAAEI,KAAK,CAACL,IAAN,CAAWC,MADa;AAEhCD,EAAAA,IAAI,EAAEK,KAAK,CAACL;AAFoB,CAAL,CAA7B;;AAKA,MAAMM,SAAS,GAAGd,OAAO,CAACY,eAAD,CAAP,CAAyBT,aAAzB,CAAlB;AACA,SAAQW,SAAS,IAAIC,WAArB","sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\n// import Grid from \"@material-ui/core/Grid\";\r\n// import { Header } from '../../components/header/Header';\r\n// import { Container, Divider } from '@material-ui/core';\r\n// import styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\r\n// import {\r\n//     MainContainer,\r\n//     ConversationHeader,\r\n//     Avatar,\r\n//     VoiceCallButton,\r\n//     VideoCallButton,\r\n//     ChatContainer,\r\n//     ExpansionPanel,\r\n//     TypingIndicator,\r\n//     MessageSeparator,\r\n//     Sidebar,\r\n//     Search,\r\n//     EllipsisButton,\r\n//     ConversationList,\r\n//     InfoButton,\r\n//     Conversation,\r\n//     MessageList,\r\n//     Message,\r\n//     MessageInput,\r\n// } from \"@chatscope/chat-ui-kit-react\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     formMessage: {\r\n//         height: \"750px\",\r\n//         position: \"relative\"\r\n//     },\r\n//     nonePadding: {\r\n//         padding: \"0!important\"\r\n//     }\r\n// }));\r\n\r\n// export function MessagePage() {\r\n//     const classes = useStyles();\r\n//     const [chatList, setChatList] = useState();\r\n//     const [chatUser, setChatUser] = useState();\r\n//     const [messageList, setMessageList] = useState();\r\n//     const [messageInputValue, setMessageInputValue] = useState(\"\");\r\n//     function onSubmitMessage(val) {\r\n//         console.log(val)\r\n//     }\r\n//     useEffect(() => {\r\n\r\n//     }, [])\r\n//     var avatarImg = \"https://chatscope.io/storybook/react/static/media/zoe.e31a4ff8.svg\";\r\n//     return (\r\n//         <Container>\r\n//             <Grid container spacing={3} >\r\n//                 <Grid item xs={12} className={classes.nonePadding}>\r\n//                     <Header></Header>\r\n//                 </Grid>\r\n//                 <Grid className={classes.formMessage} item xs={12} style={{ marginTop: \"80px\" }}>\r\n//                     <MainContainer responsive>\r\n//                         <Sidebar position=\"left\" scrollable={false}>\r\n//                             <Search placeholder=\"Search...\" />\r\n//                             <ConversationList>\r\n//                                 <Conversation name=\"Lilly\" lastSenderName=\"Lilly\" info=\"Yes i can do it for you\">\r\n//                                     <Avatar src={avatarImg} name=\"Lilly\" status=\"available\" />\r\n//                                 </Conversation>\r\n//                             </ConversationList>\r\n//                         </Sidebar>\r\n\r\n//                         <ChatContainer>\r\n//                             <ConversationHeader>\r\n//                                 <ConversationHeader.Back />\r\n//                                 <Avatar src={avatarImg} name=\"Zoe\" />\r\n//                                 <ConversationHeader.Content userName=\"Zoe\" info=\"Active 10 mins ago\" />\r\n//                                 <ConversationHeader.Actions>\r\n//                                     <VoiceCallButton />\r\n//                                     <VideoCallButton />\r\n//                                     <EllipsisButton orientation=\"vertical\" />\r\n//                                 </ConversationHeader.Actions>\r\n//                             </ConversationHeader>\r\n//                             <MessageList typingIndicator={<TypingIndicator content=\"Zoe is typing\" />}>\r\n//                                 <MessageSeparator content=\"Saturday, 30 November 2019\" />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Zoe\",\r\n//                                     direction: \"incoming\",\r\n//                                     position: \"single\"\r\n//                                 }}>\r\n//                                     <Avatar src={avatarImg} name=\"Zoe\" />\r\n//                                 </Message>\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Patrik\",\r\n//                                     direction: \"outgoing\",\r\n//                                     position: \"single\"\r\n//                                 }} avatarSpacer />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Zoe\",\r\n//                                     direction: \"incoming\",\r\n//                                     position: \"first\"\r\n//                                 }} avatarSpacer />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Zoe\",\r\n//                                     direction: \"incoming\",\r\n//                                     position: \"normal\"\r\n//                                 }} avatarSpacer />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Zoe\",\r\n//                                     direction: \"incoming\",\r\n//                                     position: \"normal\"\r\n//                                 }} avatarSpacer />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Zoe\",\r\n//                                     direction: \"incoming\",\r\n//                                     position: \"normal\"\r\n//                                 }} avatarSpacer />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Zoe\",\r\n//                                     direction: \"incoming\",\r\n//                                     position: \"normal\"\r\n//                                 }} avatarSpacer />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Zoe\",\r\n//                                     direction: \"incoming\",\r\n//                                     position: \"normal\"\r\n//                                 }} avatarSpacer />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Zoe\",\r\n//                                     direction: \"incoming\",\r\n//                                     position: \"normal\"\r\n//                                 }} avatarSpacer />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Zoe\",\r\n//                                     direction: \"incoming\",\r\n//                                     position: \"normal\"\r\n//                                 }} avatarSpacer />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Zoe\",\r\n//                                     direction: \"incoming\",\r\n//                                     position: \"normal\"\r\n//                                 }} avatarSpacer />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Zoe\",\r\n//                                     direction: \"incoming\",\r\n//                                     position: \"last\"\r\n//                                 }}>\r\n//                                     <Avatar src={avatarImg} name=\"Zoe\" />\r\n//                                 </Message>\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Patrik\",\r\n//                                     direction: \"outgoing\",\r\n//                                     position: \"first\"\r\n//                                 }} />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Patrik\",\r\n//                                     direction: \"outgoing\",\r\n//                                     position: \"normal\"\r\n//                                 }} />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Patrik\",\r\n//                                     direction: \"outgoing\",\r\n//                                     position: \"normal\"\r\n//                                 }} />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Patrik\",\r\n//                                     direction: \"outgoing\",\r\n//                                     position: \"last\"\r\n//                                 }} />\r\n\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Zoe\",\r\n//                                     direction: \"incoming\",\r\n//                                     position: \"first\"\r\n//                                 }} avatarSpacer />\r\n//                                 <Message model={{\r\n//                                     message: \"Hello my friend\",\r\n//                                     sentTime: \"15 mins ago\",\r\n//                                     sender: \"Zoe\",\r\n//                                     direction: \"incoming\",\r\n//                                     position: \"last\"\r\n//                                 }}>\r\n//                                     <Avatar src={avatarImg} name=\"Zoe\" />\r\n//                                 </Message>\r\n//                             </MessageList>\r\n//                             <MessageInput placeholder=\"Type message here\" value={messageInputValue} onChange={val => setMessageInputValue(val)} onSend={(val) => onSubmitMessage(val)} />\r\n//                         </ChatContainer>\r\n//                         <Sidebar position=\"right\">\r\n//                             <ExpansionPanel open title=\"INFO\">\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                             </ExpansionPanel>\r\n//                             <ExpansionPanel title=\"LOCALIZATION\">\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                             </ExpansionPanel>\r\n//                             <ExpansionPanel title=\"MEDIA\">\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                             </ExpansionPanel>\r\n//                             <ExpansionPanel title=\"SURVEY\">\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                             </ExpansionPanel>\r\n//                             <ExpansionPanel title=\"OPTIONS\">\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                                 <p>Lorem ipsum</p>\r\n//                             </ExpansionPanel>\r\n//                         </Sidebar>\r\n//                     </MainContainer>\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </Container >\r\n//     );\r\n// }\r\nimport React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { MessengerSidePanel } from \"./MessengerSidePanel\";\r\nimport { MessengerContent } from \"./MessengerContent\";\r\n\r\nclass MessengerPage extends Component {\r\n  componentDidMount = () => {\r\n    document.title = \"Messages | social-network\";\r\n  };\r\n\r\n  render() {\r\n    const { chat, roomId } = this.props;\r\n    return (\r\n      <div id=\"frame\">\r\n        <MessengerSidePanel></MessengerSidePanel>\r\n        {chat.currentRoom ? (\r\n          <MessengerContent\r\n            content={chat[roomId]}\r\n            key={roomId}\r\n          ></MessengerContent>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  roomId: state.chat.roomId,\r\n  chat: state.chat\r\n});\r\n\r\nconst Messenger = connect(mapStateToProps)(MessengerPage);\r\nexport {Messenger as MessagePage} ;\r\n"]},"metadata":{},"sourceType":"module"}