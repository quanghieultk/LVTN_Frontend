{"ast":null,"code":"import { authHeader } from '../helpers/auth-header';\nimport axios from 'axios';\nexport const postService = {\n  getAllPost,\n  deletePost\n};\n\nfunction getAllPost() {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.get(`http://localhost:8000/api/posts`, config).then(res => res.data.data.data).catch(error => console.log(error));\n}\n\nfunction deletePost(idPost) {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.delete(`http://localhost:8000/api/posts/${idPost}`, config);\n}\n\nfunction getAllCommentReply(idComment) {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.get(`http://localhost:8000/api/commentReplies/commentCommentReply/${idComment}`, config).then(res => res.data.data.data).catch(error => console.log(error));\n}\n\nfunction createComment(idPost, message) {\n  return axios({\n    method: 'post',\n    url: 'http://localhost:8000/api/comments',\n    data: {\n      \"text\": message,\n      \"postId\": idPost\n    },\n    headers: authHeader()\n  }).then(response => {\n    console.log(response);\n  }, error => {\n    console.log(error);\n  });\n}\n\nfunction createCommentReply(idComment, message) {\n  return axios({\n    method: 'post',\n    url: 'http://localhost:8000/api/commentReplies',\n    data: {\n      \"text\": message,\n      \"commentId\": idComment\n    },\n    headers: authHeader()\n  }).then(response => {\n    console.log(response);\n  }, error => {\n    console.log(error);\n  });\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/services/post.service.js"],"names":["authHeader","axios","postService","getAllPost","deletePost","header","config","headers","get","then","res","data","catch","error","console","log","idPost","delete","getAllCommentReply","idComment","createComment","message","method","url","response","createCommentReply"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,UADuB;AAEvBC,EAAAA;AAFuB,CAApB;;AAIP,SAASD,UAAT,GAAsB;AAClB,MAAIE,MAAM,GAAGL,UAAU,EAAvB;AACA,MAAIM,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAEF;AADA,GAAb;AAGA,SAAOJ,KAAK,CAACO,GAAN,CAAW,iCAAX,EAA6CF,MAA7C,EACFG,IADE,CACGC,GAAG,IACLA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcA,IAFf,EAIFC,KAJE,CAIIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJb,CAAP;AAMH;;AACD,SAAST,UAAT,CAAoBY,MAApB,EAA4B;AACxB,MAAIX,MAAM,GAAGL,UAAU,EAAvB;AACA,MAAIM,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAEF;AADA,GAAb;AAGA,SAAOJ,KAAK,CAACgB,MAAN,CAAc,mCAAkCD,MAAO,EAAvD,EAA0DV,MAA1D,CAAP;AAEH;;AACD,SAASY,kBAAT,CAA4BC,SAA5B,EAAuC;AACnC,MAAId,MAAM,GAAGL,UAAU,EAAvB;AACA,MAAIM,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAEF;AADA,GAAb;AAGA,SAAOJ,KAAK,CAACO,GAAN,CAAW,gEAA+DW,SAAU,EAApF,EAAuFb,MAAvF,EACFG,IADE,CACGC,GAAG,IACLA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcA,IAFf,EAIFC,KAJE,CAIIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJb,CAAP;AAMH;;AACD,SAASO,aAAT,CAAuBJ,MAAvB,EAA+BK,OAA/B,EAAwC;AACpC,SAAOpB,KAAK,CAAC;AACTqB,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAE,oCAFI;AAGTZ,IAAAA,IAAI,EAAE;AACF,cAAQU,OADN;AAEF,gBAAUL;AAFR,KAHG;AAOTT,IAAAA,OAAO,EAAEP,UAAU;AAPV,GAAD,CAAL,CASFS,IATE,CASIe,QAAD,IAAc;AAChBV,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACH,GAXE,EAWCX,KAAD,IAAW;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAbE,CAAP;AAcH;;AACD,SAASY,kBAAT,CAA4BN,SAA5B,EAAuCE,OAAvC,EAAgD;AAC5C,SAAOpB,KAAK,CAAC;AACTqB,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAE,0CAFI;AAGTZ,IAAAA,IAAI,EAAE;AACF,cAAQU,OADN;AAEF,mBAAaF;AAFX,KAHG;AAOTZ,IAAAA,OAAO,EAAEP,UAAU;AAPV,GAAD,CAAL,CASFS,IATE,CASIe,QAAD,IAAc;AAChBV,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACH,GAXE,EAWCX,KAAD,IAAW;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAbE,CAAP;AAcH","sourcesContent":["import { authHeader } from '../helpers/auth-header';\r\nimport axios from 'axios';\r\nexport const postService = {\r\n    getAllPost,\r\n    deletePost\r\n};\r\nfunction getAllPost() {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.get(`http://localhost:8000/api/posts`, config)\r\n        .then(res =>\r\n            res.data.data.data\r\n        )\r\n        .catch(error => console.log(error));\r\n\r\n}\r\nfunction deletePost(idPost) {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.delete(`http://localhost:8000/api/posts/${idPost}`, config);\r\n\r\n}\r\nfunction getAllCommentReply(idComment) {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.get(`http://localhost:8000/api/commentReplies/commentCommentReply/${idComment}`, config)\r\n        .then(res =>\r\n            res.data.data.data\r\n        )\r\n        .catch(error => console.log(error));\r\n\r\n}\r\nfunction createComment(idPost, message) {\r\n    return axios({\r\n        method: 'post',\r\n        url: 'http://localhost:8000/api/comments',\r\n        data: {\r\n            \"text\": message,\r\n            \"postId\": idPost\r\n        },\r\n        headers: authHeader()\r\n    })\r\n        .then((response) => {\r\n            console.log(response);\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n}\r\nfunction createCommentReply(idComment, message) {\r\n    return axios({\r\n        method: 'post',\r\n        url: 'http://localhost:8000/api/commentReplies',\r\n        data: {\r\n            \"text\": message,\r\n            \"commentId\": idComment\r\n        },\r\n        headers: authHeader()\r\n    })\r\n        .then((response) => {\r\n            console.log(response);\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}