{"ast":null,"code":"import { authHeader } from '../helpers/auth-header';\nimport axios from 'axios';\nexport const userService = {\n  login,\n  logout,\n  register,\n  getAll,\n  getById,\n  updateUser,\n  delete: _delete,\n  changePassword,\n  getInfoUser,\n  follow,\n  changeProfilePicture,\n  changeBackgroundPicture,\n  getFollwer,\n  getFollwing,\n  followRestaurant,\n  getRestaurantsUserFollow,\n  forgotPassword,\n  resetPassword\n};\n\nfunction login(username, password) {\n  return axios({\n    method: 'post',\n    url: 'http://localhost:8000/api/users/login',\n    data: {\n      \"email\": username,\n      \"password\": password\n    }\n  }).then(handleResponse).then(user => {\n    localStorage.setItem('user', JSON.stringify(user.data));\n    return user;\n  });\n}\n\nfunction forgotPassword(username) {\n  return axios({\n    method: 'post',\n    url: 'http://localhost:8000/api/users/forgotPassword',\n    data: {\n      \"email\": username\n    }\n  }).then(handleResponse).then(response => {\n    console.log(response);\n  });\n}\n\nfunction resetPassword(password, passwordConfirm, token) {\n  return axios({\n    method: 'patch',\n    url: `http://localhost:8000/api/users/resetPassword/${token}`,\n    data: {\n      \"password\": password,\n      \"passwordConfirm\": passwordConfirm\n    }\n  }).then(handleResponse).then(user => {\n    localStorage.setItem('user', JSON.stringify(user.data));\n    return user;\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('user');\n}\n\nfunction getAll() {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`http://localhost:8000/users`, requestOptions).then(handleResponse);\n}\n\nfunction getById(id) {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction register(user) {\n  // const requestOptions = {\n  //     method: 'POST',\n  //     headers: { 'Content-Type': 'application/json' },\n  //     body: JSON.stringify(user)\n  // };\n  return axios.post(`http://localhost:8000/api/users/signup`, user).then(handleResponse);\n}\n\nfunction updateUser(userId, userInfo) {\n  return axios({\n    method: 'patch',\n    url: `http://localhost:8000/api/users/${userId}`,\n    data: {\n      \"firstname\": userInfo.firstname,\n      \"lastname\": userInfo.lastname,\n      \"birthday\": userInfo.birthday,\n      \"address\": userInfo.address,\n      \"email\": userInfo.email,\n      \"interests\": userInfo.interests\n    }\n  }).then(response => {\n    return response;\n  }, error => {\n    console.log(error);\n    return false;\n  });\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: authHeader()\n  };\n  return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n  if (!response.status === 200) {\n    if (response.status === 401) {\n      // auto logout if 401 response returned from api\n      logout();\n      window.location.reload(true);\n    }\n\n    const error = response.message;\n    return Promise.reject(error);\n  }\n\n  return response;\n}\n\nfunction changePassword(currentPassword, password, passwordConfirm) {\n  return axios({\n    method: 'patch',\n    url: 'http://localhost:8000/api/users/updatePassword',\n    data: {\n      \"currentPassword\": currentPassword,\n      \"password\": password,\n      \"passwordConfirm\": passwordConfirm\n    },\n    headers: authHeader()\n  }).then(response => {\n    console.log(response);\n\n    if (response.status === 200) {\n      return true;\n    }\n  }, error => {\n    console.log(error);\n    return false;\n  });\n}\n\nfunction getInfoUser(idUser) {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.get(`http://localhost:8000/api/users/${idUser}`, config).then(res => res).catch(error => console.log(error));\n}\n\nfunction follow(idUser) {\n  return axios({\n    method: 'post',\n    url: 'http://localhost:8000/api/users/followUser',\n    data: {\n      \"userId\": idUser\n    },\n    headers: authHeader()\n  }).then(response => {\n    return response;\n  }, error => {\n    console.log(error);\n  });\n}\n\nfunction followRestaurant(idRestaurant) {\n  return axios({\n    method: 'post',\n    url: 'http://localhost:8000/api/users/followRestaurant',\n    data: {\n      \"restaurant\": idRestaurant\n    },\n    headers: authHeader()\n  }).then(response => {\n    return response;\n  }, error => {\n    console.log(error);\n  });\n}\n\nfunction changeProfilePicture(data) {\n  let config = {\n    headers: authHeader()\n  };\n  return axios.post('http://localhost:8000/api/users/changeProfilePicture', data, config);\n}\n\nfunction changeBackgroundPicture(data) {\n  let config = {\n    headers: authHeader()\n  };\n  return axios.post('http://localhost:8000/api/users/changeBackgroundPicture', data, config);\n}\n\nfunction getFollwer(userId) {\n  let config = {\n    headers: authHeader()\n  };\n  return axios.get('http://localhost:8000/api/users/followers/' + userId, config);\n}\n\nfunction getFollwing(userId) {\n  let config = {\n    headers: authHeader()\n  };\n  return axios.get('http://localhost:8000/api/users/followings/' + userId, config);\n}\n\nfunction getRestaurantsUserFollow() {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.get(`http://localhost:8000/api/users/restaurant/getRestaurantFollow`, config).then(res => res).catch(error => console.log(error));\n}","map":{"version":3,"sources":["D:/LVTN/deploy_frontend/DEPLOYFRONTEND/src/services/user.service.js"],"names":["authHeader","axios","userService","login","logout","register","getAll","getById","updateUser","delete","_delete","changePassword","getInfoUser","follow","changeProfilePicture","changeBackgroundPicture","getFollwer","getFollwing","followRestaurant","getRestaurantsUserFollow","forgotPassword","resetPassword","username","password","method","url","data","then","handleResponse","user","localStorage","setItem","JSON","stringify","response","console","log","passwordConfirm","token","removeItem","requestOptions","headers","fetch","id","post","userId","userInfo","firstname","lastname","birthday","address","email","interests","error","status","window","location","reload","message","Promise","reject","currentPassword","idUser","header","config","get","res","catch","idRestaurant"],"mappings":"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","sourcesContent":["import { authHeader } from '../helpers/auth-header';\r\nimport axios from 'axios';\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getAll,\r\n    getById,\r\n    updateUser,\r\n    delete: _delete,\r\n    changePassword,\r\n    getInfoUser,\r\n    follow,\r\n    changeProfilePicture,\r\n    changeBackgroundPicture,\r\n    getFollwer,\r\n    getFollwing,\r\n    followRestaurant,\r\n    getRestaurantsUserFollow,\r\n    forgotPassword,\r\n    resetPassword\r\n};\r\n\r\nfunction login(username, password) {\r\n    return axios({\r\n        method: 'post',\r\n        url: 'http://localhost:8000/api/users/login',\r\n        data: {\r\n            \"email\": username,\r\n            \"password\": password\r\n        }\r\n    })\r\n        .then(handleResponse)\r\n        .then((user) => {\r\n            localStorage.setItem('user', JSON.stringify(user.data));\r\n            return user;\r\n        })\r\n}\r\n\r\nfunction forgotPassword(username) {\r\n    return axios({\r\n        method: 'post',\r\n        url: 'http://localhost:8000/api/users/forgotPassword',\r\n        data: {\r\n            \"email\": username\r\n        }\r\n    })\r\n        .then(handleResponse)\r\n        .then((response) => {\r\n            console.log(response);\r\n        })\r\n}\r\n\r\nfunction resetPassword(password, passwordConfirm, token) {\r\n    return axios({\r\n        method: 'patch',\r\n        url: `http://localhost:8000/api/users/resetPassword/${token}`,\r\n        data: {\r\n            \"password\": password,\r\n            \"passwordConfirm\": passwordConfirm\r\n        }\r\n    })\r\n        .then(handleResponse)\r\n        .then((user) => {\r\n            localStorage.setItem('user', JSON.stringify(user.data));\r\n            return user;\r\n        })\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction getAll() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getById(id) {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction register(user) {\r\n    // const requestOptions = {\r\n    //     method: 'POST',\r\n    //     headers: { 'Content-Type': 'application/json' },\r\n    //     body: JSON.stringify(user)\r\n    // };\r\n\r\n    return axios.post(`http://localhost:8000/api/users/signup`, user).then(handleResponse);\r\n}\r\n\r\nfunction updateUser(userId, userInfo) {\r\n    return axios({\r\n        method: 'patch',\r\n        url: `http://localhost:8000/api/users/${userId}`,\r\n        data: {\r\n            \"firstname\": userInfo.firstname,\r\n            \"lastname\": userInfo.lastname,\r\n            \"birthday\": userInfo.birthday,\r\n            \"address\": userInfo.address,\r\n            \"email\": userInfo.email,\r\n            \"interests\": userInfo.interests\r\n        }\r\n    })\r\n        .then((response) => {\r\n            return response\r\n        }, (error) => {\r\n            console.log(error);\r\n            return false;\r\n        });\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nfunction _delete(id) {\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    if (!response.status === 200) {\r\n        if (response.status === 401) {\r\n            // auto logout if 401 response returned from api\r\n            logout();\r\n            window.location.reload(true);\r\n        }\r\n        const error = response.message;\r\n        return Promise.reject(error);\r\n    }\r\n    return response;\r\n}\r\n\r\nfunction changePassword(currentPassword, password, passwordConfirm) {\r\n\r\n    return axios({\r\n        method: 'patch',\r\n        url: 'http://localhost:8000/api/users/updatePassword',\r\n        data: {\r\n            \"currentPassword\": currentPassword,\r\n            \"password\": password,\r\n            \"passwordConfirm\": passwordConfirm\r\n        },\r\n        headers: authHeader()\r\n    })\r\n        .then((response) => {\r\n            console.log(response);\r\n            if (response.status === 200) {\r\n                return true;\r\n            }\r\n        }, (error) => {\r\n            console.log(error);\r\n            return false;\r\n        });\r\n\r\n}\r\n\r\nfunction getInfoUser(idUser) {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.get(`http://localhost:8000/api/users/${idUser}`, config)\r\n        .then(res =>\r\n            res\r\n        )\r\n        .catch(error => console.log(error));\r\n\r\n}\r\nfunction follow(idUser) {\r\n    return axios({\r\n        method: 'post',\r\n        url: 'http://localhost:8000/api/users/followUser',\r\n        data: {\r\n            \"userId\": idUser,\r\n        },\r\n        headers: authHeader()\r\n    })\r\n        .then((response) => {\r\n            return response;\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nfunction followRestaurant(idRestaurant) {\r\n    return axios({\r\n        method: 'post',\r\n        url: 'http://localhost:8000/api/users/followRestaurant',\r\n        data: {\r\n            \"restaurant\": idRestaurant,\r\n        },\r\n        headers: authHeader()\r\n    })\r\n        .then((response) => {\r\n            return response;\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nfunction changeProfilePicture(data) {\r\n    let config={\r\n        headers: authHeader()\r\n    }\r\n    return axios.post('http://localhost:8000/api/users/changeProfilePicture',data,config);\r\n}\r\n\r\nfunction changeBackgroundPicture(data) {\r\n    let config={\r\n        headers: authHeader()\r\n    }\r\n    return axios.post('http://localhost:8000/api/users/changeBackgroundPicture',data,config);\r\n}\r\n\r\nfunction getFollwer(userId) {\r\n    let config={\r\n        headers: authHeader()\r\n    }\r\n    return axios.get('http://localhost:8000/api/users/followers/'+userId,config);\r\n}\r\n\r\nfunction getFollwing(userId) {\r\n    let config={\r\n        headers: authHeader()\r\n    }\r\n    return axios.get('http://localhost:8000/api/users/followings/'+userId,config);\r\n}\r\nfunction getRestaurantsUserFollow() {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.get(`http://localhost:8000/api/users/restaurant/getRestaurantFollow`, config)\r\n        .then(res =>\r\n            res\r\n        )\r\n        .catch(error => console.log(error));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}