{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { normalizeTransitionSettings } from './attribute/attribute-transition-utils';\nimport CPUInterpolationTransition from '../transitions/cpu-interpolation-transition';\nimport CPUSpringTransition from '../transitions/cpu-spring-transition';\nimport log from '../utils/log';\nvar TRANSITION_TYPES = {\n  interpolation: CPUInterpolationTransition,\n  spring: CPUSpringTransition\n};\n\nvar UniformTransitionManager = function () {\n  function UniformTransitionManager(timeline) {\n    _classCallCheck(this, UniformTransitionManager);\n\n    this.transitions = new Map();\n    this.timeline = timeline;\n  }\n\n  _createClass(UniformTransitionManager, [{\n    key: \"add\",\n    value: function add(key, fromValue, toValue, settings) {\n      var transitions = this.transitions;\n\n      if (transitions.has(key)) {\n        var _transition = transitions.get(key);\n\n        var _transition$value = _transition.value,\n            value = _transition$value === void 0 ? _transition.settings.fromValue : _transition$value;\n        fromValue = value;\n        this.remove(key);\n      }\n\n      settings = normalizeTransitionSettings(settings);\n\n      if (!settings) {\n        return;\n      }\n\n      var TransitionType = TRANSITION_TYPES[settings.type];\n\n      if (!TransitionType) {\n        log.error(\"unsupported transition type '\".concat(settings.type, \"'\"))();\n        return;\n      }\n\n      var transition = new TransitionType(this.timeline);\n      transition.start(_objectSpread(_objectSpread({}, settings), {}, {\n        fromValue: fromValue,\n        toValue: toValue\n      }));\n      transitions.set(key, transition);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      var transitions = this.transitions;\n\n      if (transitions.has(key)) {\n        transitions.get(key).cancel();\n        transitions[\"delete\"](key);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var propsInTransition = {};\n\n      var _iterator = _createForOfIteratorHelper(this.transitions),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              key = _step$value[0],\n              transition = _step$value[1];\n\n          transition.update();\n          propsInTransition[key] = transition.value;\n\n          if (!transition.inProgress) {\n            this.remove(key);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return propsInTransition;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _iterator2 = _createForOfIteratorHelper(this.transitions.keys()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var key = _step2.value;\n          this.remove(key);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this.transitions.size > 0;\n    }\n  }]);\n\n  return UniformTransitionManager;\n}();\n\nexport { UniformTransitionManager as default };","map":{"version":3,"sources":["../../../src/lib/uniform-transition-manager.js"],"names":["TRANSITION_TYPES","interpolation","spring","CPUSpringTransition","UniformTransitionManager","key","fromValue","toValue","settings","transitions","transition","value","normalizeTransitionSettings","TransitionType","log","propsInTransition"],"mappings":"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","sourcesContent":["import {normalizeTransitionSettings} from './attribute/attribute-transition-utils';\nimport CPUInterpolationTransition from '../transitions/cpu-interpolation-transition';\nimport CPUSpringTransition from '../transitions/cpu-spring-transition';\nimport log from '../utils/log';\n\nconst TRANSITION_TYPES = {\n  interpolation: CPUInterpolationTransition,\n  spring: CPUSpringTransition\n};\n\nexport default class UniformTransitionManager {\n  constructor(timeline) {\n    this.transitions = new Map();\n    this.timeline = timeline;\n  }\n\n  get active() {\n    return this.transitions.size > 0;\n  }\n\n  add(key, fromValue, toValue, settings) {\n    const {transitions} = this;\n    if (transitions.has(key)) {\n      const transition = transitions.get(key);\n      // value may not be available if `update()` has not been called. Fallback to `fromValue`\n      const {value = transition.settings.fromValue} = transition;\n      // start from interrupted position\n      fromValue = value;\n      this.remove(key);\n    }\n\n    settings = normalizeTransitionSettings(settings);\n    if (!settings) {\n      return;\n    }\n\n    const TransitionType = TRANSITION_TYPES[settings.type];\n    if (!TransitionType) {\n      log.error(`unsupported transition type '${settings.type}'`)();\n      return;\n    }\n    const transition = new TransitionType(this.timeline);\n    transition.start({\n      ...settings,\n      fromValue,\n      toValue\n    });\n    transitions.set(key, transition);\n  }\n\n  remove(key) {\n    const {transitions} = this;\n    if (transitions.has(key)) {\n      transitions.get(key).cancel();\n      transitions.delete(key);\n    }\n  }\n\n  update() {\n    const propsInTransition = {};\n\n    for (const [key, transition] of this.transitions) {\n      transition.update();\n      propsInTransition[key] = transition.value;\n      if (!transition.inProgress) {\n        // transition ended\n        this.remove(key);\n      }\n    }\n\n    return propsInTransition;\n  }\n\n  clear() {\n    for (const key of this.transitions.keys()) {\n      this.remove(key);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}