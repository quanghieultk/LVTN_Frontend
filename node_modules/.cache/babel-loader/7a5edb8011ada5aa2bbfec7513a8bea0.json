{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\LVTN\\\\cuisine-net\\\\src\\\\services\\\\gmap.js\",\n    _s = $RefreshSig$();\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\nimport React, { useState, useRef, useCallback } from \"react\";\nimport { render } from \"react-dom\";\nimport MapGL, { Marker } from \"react-map-gl\";\nimport Geocoder from \"react-map-gl-geocoder\"; // Please be a decent human and don't abuse my Mapbox API token.\n// If you fork this sandbox, replace my API token with your own.\n// Ways to set Mapbox token: https://uber.github.io/react-map-gl/#/Documentation/getting-started/about-mapbox-tokens\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoidG9hbmRvIiwiYSI6ImNrbThscTh4cjBrNnQycHF5MWJqd29jaDQifQ.LNubsbmqGfZhCCRymL-A2g';\nexport default function GMap() {\n  _s();\n\n  const [viewport, setViewport] = useState({\n    latitude: 37.7577,\n    longitude: -122.4376,\n    zoom: 15\n  });\n  const mapRef = useRef();\n  const handleViewportChange = useCallback(newViewport => setViewport(newViewport), []);\n  navigator.geolocation.getCurrentPosition(function (position) {\n    setViewport({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      zoom: 15\n    });\n  }, function (error) {\n    console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n  });\n  const handleGeocoderViewportChange = useCallback(newViewport => {\n    const geocoderDefaultOverrides = {\n      transitionDuration: 1000\n    };\n    return handleViewportChange({ ...newViewport,\n      ...geocoderDefaultOverrides\n    });\n  }, [handleViewportChange]);\n\n  function makerOnClick(e) {\n    console.log(e);\n    setViewport({\n      latitude: e.lngLat[1],\n      longitude: e.lngLat[0],\n      zoom: 15\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MapGL, {\n      ref: mapRef,\n      ...viewport,\n      width: \"100%\",\n      height: \"100%\",\n      onViewportChange: handleViewportChange,\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      onClick: e => makerOnClick(e),\n      children: [/*#__PURE__*/_jsxDEV(Geocoder, {\n        mapRef: mapRef,\n        onViewportChange: handleGeocoderViewportChange,\n        mapboxApiAccessToken: MAPBOX_TOKEN,\n        position: \"top-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        latitude: viewport.latitude,\n        longitude: viewport.longitude,\n        offsetLeft: -20,\n        offsetTop: -10,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"FUCKKKKKKKKKKK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n}\n\n_s(GMap, \"Pba2hE12pkqu6csG3NNU/lGVvJg=\");\n\n_c = GMap;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"GMap\");","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/services/gmap.js"],"names":["React","useState","useRef","useCallback","render","MapGL","Marker","Geocoder","MAPBOX_TOKEN","GMap","viewport","setViewport","latitude","longitude","zoom","mapRef","handleViewportChange","newViewport","navigator","geolocation","getCurrentPosition","position","coords","error","console","code","message","handleGeocoderViewportChange","geocoderDefaultOverrides","transitionDuration","makerOnClick","e","log","lngLat","height"],"mappings":"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","sourcesContent":["import \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\r\nimport React, { useState, useRef, useCallback } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport MapGL,{Marker} from \"react-map-gl\";\r\nimport Geocoder from \"react-map-gl-geocoder\";\r\n\r\n// Please be a decent human and don't abuse my Mapbox API token.\r\n// If you fork this sandbox, replace my API token with your own.\r\n// Ways to set Mapbox token: https://uber.github.io/react-map-gl/#/Documentation/getting-started/about-mapbox-tokens\r\nconst MAPBOX_TOKEN =\r\n\t'pk.eyJ1IjoidG9hbmRvIiwiYSI6ImNrbThscTh4cjBrNnQycHF5MWJqd29jaDQifQ.LNubsbmqGfZhCCRymL-A2g';\r\n\r\nexport default function GMap() {\r\n\tconst [viewport, setViewport] = useState({\r\n\t\tlatitude: 37.7577,\r\n\t\tlongitude: -122.4376,\r\n\t\tzoom: 15\r\n\t});\r\n\tconst mapRef = useRef();\r\n\tconst handleViewportChange = useCallback(\r\n\t\t(newViewport) => setViewport(newViewport),\r\n\t\t[]\r\n\t);\r\n\tnavigator.geolocation.getCurrentPosition(\r\n\t\tfunction(position) {\r\n\t\t  setViewport({\r\n\t\t\tlatitude: position.coords.latitude,\r\n\t\t\tlongitude: position.coords.longitude,\r\n\t\t\tzoom: 15\r\n\t\t  })\r\n\t\t},\r\n\t\tfunction(error) {\r\n\t\t  console.error(\"Error Code = \" + error.code + \" - \" + error.message);\r\n\t\t}\r\n\t);\r\n\tconst handleGeocoderViewportChange = useCallback(\r\n\t\t(newViewport) => {\r\n\t\t\tconst geocoderDefaultOverrides = { transitionDuration: 1000 };\r\n\r\n\t\t\treturn handleViewportChange({\r\n\t\t\t\t...newViewport,\r\n\t\t\t\t...geocoderDefaultOverrides\r\n\t\t\t});\r\n\t\t},\r\n\t\t[handleViewportChange]\r\n\t);\r\n\tfunction makerOnClick(e) {\r\n\t\tconsole.log(e);\r\n\t\tsetViewport({\r\n\t\t\tlatitude: e.lngLat[1],\r\n\t\t\tlongitude: e.lngLat[0],\r\n\t\t\tzoom: 15\r\n\t\t})\r\n\t}\r\n\treturn (\r\n\t\t<div style={{ height: \"100vh\" }}>\r\n\t\t\t<MapGL\r\n\t\t\t\tref={mapRef}\r\n\t\t\t\t{...viewport}\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\theight=\"100%\"\r\n\t\t\t\tonViewportChange={handleViewportChange}\r\n\t\t\t\tmapboxApiAccessToken={MAPBOX_TOKEN}\r\n\t\t\t\tonClick={e => makerOnClick(e)}\r\n\t\t\t>\r\n\t\t\t\t<Geocoder\r\n\t\t\t\t\tmapRef={mapRef}\r\n\t\t\t\t\tonViewportChange={handleGeocoderViewportChange}\r\n\t\t\t\t\tmapboxApiAccessToken={MAPBOX_TOKEN}\r\n\t\t\t\t\tposition=\"top-left\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Marker latitude={viewport.latitude} longitude={viewport.longitude} offsetLeft={-20} offsetTop={-10}>\r\n\t\t\t\t\t<div>FUCKKKKKKKKKKK</div>\r\n\t\t\t\t</Marker>\r\n\t\t\t</MapGL>\r\n\t\t</div>\r\n\t);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}