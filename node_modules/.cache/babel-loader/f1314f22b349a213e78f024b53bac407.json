{"ast":null,"code":"import { authHeader } from '../helpers/auth-header';\nimport axios from 'axios';\nexport const commentService = {\n  getAllCommentPost,\n  getAllCommentReply,\n  createComment,\n  createCommentReply\n};\n\nfunction getAllCommentPost(idPost) {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.get(`http://localhost:8000/api/comments/commentPost/${idPost}`, config).then(res => res.data.data.data).catch(error => console.log(error));\n}\n\nfunction getAllCommentReply(idComment) {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.get(`http://localhost:8000/api/commentReplies/commentCommentReply/${idComment}`, config).then(res => res.data.data.data).catch(error => console.log(error));\n}\n\nfunction createComment(idPost, message, userId, authorId) {\n  console.log(userId);\n  return axios({\n    method: 'post',\n    url: 'http://localhost:8000/api/comments',\n    data: {\n      \"text\": message,\n      \"postId\": idPost,\n      \"userId\": userId,\n      \"authorId\": authorId\n    },\n    headers: authHeader()\n  }).then(response => {\n    console.log(response);\n  }, error => {\n    console.log(error);\n  });\n}\n\nfunction createCommentReply(idComment, message) {\n  return axios({\n    method: 'post',\n    url: 'http://localhost:8000/api/commentReplies',\n    data: {\n      \"text\": message,\n      \"commentId\": idComment\n    },\n    headers: authHeader()\n  }).then(response => {\n    console.log(response);\n  }, error => {\n    console.log(error);\n  });\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/services/comment.service.js"],"names":["authHeader","axios","commentService","getAllCommentPost","getAllCommentReply","createComment","createCommentReply","idPost","header","config","headers","get","then","res","data","catch","error","console","log","idComment","message","userId","authorId","method","url","response"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA,iBAD0B;AAE1BC,EAAAA,kBAF0B;AAG1BC,EAAAA,aAH0B;AAI1BC,EAAAA;AAJ0B,CAAvB;;AAMP,SAASH,iBAAT,CAA2BI,MAA3B,EAAmC;AAC/B,MAAIC,MAAM,GAAGR,UAAU,EAAvB;AACA,MAAIS,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAEF;AADA,GAAb;AAGA,SAAOP,KAAK,CAACU,GAAN,CAAW,kDAAiDJ,MAAO,EAAnE,EAAsEE,MAAtE,EACFG,IADE,CACGC,GAAG,IACLA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcA,IAFf,EAIFC,KAJE,CAIIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJb,CAAP;AAMH;;AACD,SAASZ,kBAAT,CAA4Be,SAA5B,EAAuC;AACnC,MAAIX,MAAM,GAAGR,UAAU,EAAvB;AACA,MAAIS,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAEF;AADA,GAAb;AAGA,SAAOP,KAAK,CAACU,GAAN,CAAW,gEAA+DQ,SAAU,EAApF,EAAuFV,MAAvF,EACFG,IADE,CACGC,GAAG,IACLA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcA,IAFf,EAIFC,KAJE,CAIIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJb,CAAP;AAMH;;AACD,SAASX,aAAT,CAAuBE,MAAvB,EAA+Ba,OAA/B,EAAuCC,MAAvC,EAA+CC,QAA/C,EAAyD;AACrDL,EAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACA,SAAOpB,KAAK,CAAC;AACTsB,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAE,oCAFI;AAGTV,IAAAA,IAAI,EAAE;AACF,cAAQM,OADN;AAEF,gBAAUb,MAFR;AAGF,gBAAUc,MAHR;AAIF,kBAAYC;AAJV,KAHG;AASTZ,IAAAA,OAAO,EAAEV,UAAU;AATV,GAAD,CAAL,CAWFY,IAXE,CAWIa,QAAD,IAAc;AAChBR,IAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACH,GAbE,EAaCT,KAAD,IAAW;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAfE,CAAP;AAgBH;;AACD,SAASV,kBAAT,CAA4Ba,SAA5B,EAAuCC,OAAvC,EAAgD;AAC5C,SAAOnB,KAAK,CAAC;AACTsB,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAE,0CAFI;AAGTV,IAAAA,IAAI,EAAE;AACF,cAAQM,OADN;AAEF,mBAAaD;AAFX,KAHG;AAOTT,IAAAA,OAAO,EAAEV,UAAU;AAPV,GAAD,CAAL,CASFY,IATE,CASIa,QAAD,IAAc;AAChBR,IAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACH,GAXE,EAWCT,KAAD,IAAW;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAbE,CAAP;AAcH","sourcesContent":["import { authHeader } from '../helpers/auth-header';\r\nimport axios from 'axios';\r\nexport const commentService = {\r\n    getAllCommentPost,\r\n    getAllCommentReply,\r\n    createComment,\r\n    createCommentReply\r\n};\r\nfunction getAllCommentPost(idPost) {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.get(`http://localhost:8000/api/comments/commentPost/${idPost}`, config)\r\n        .then(res =>\r\n            res.data.data.data\r\n        )\r\n        .catch(error => console.log(error));\r\n\r\n}\r\nfunction getAllCommentReply(idComment) {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.get(`http://localhost:8000/api/commentReplies/commentCommentReply/${idComment}`, config)\r\n        .then(res =>\r\n            res.data.data.data\r\n        )\r\n        .catch(error => console.log(error));\r\n\r\n}\r\nfunction createComment(idPost, message,userId ,authorId) {\r\n    console.log(userId)\r\n    return axios({\r\n        method: 'post',\r\n        url: 'http://localhost:8000/api/comments',\r\n        data: {\r\n            \"text\": message,\r\n            \"postId\": idPost,\r\n            \"userId\": userId,\r\n            \"authorId\": authorId\r\n        },\r\n        headers: authHeader()\r\n    })\r\n        .then((response) => {\r\n            console.log(response);\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n}\r\nfunction createCommentReply(idComment, message) {\r\n    return axios({\r\n        method: 'post',\r\n        url: 'http://localhost:8000/api/commentReplies',\r\n        data: {\r\n            \"text\": message,\r\n            \"commentId\": idComment\r\n        },\r\n        headers: authHeader()\r\n    })\r\n        .then((response) => {\r\n            console.log(response);\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}