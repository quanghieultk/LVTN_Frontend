{"ast":null,"code":"import { socketService } from \"../services/socket.service\";\nimport { socketConstants } from '../constants/socket.constants';\nimport { chatConstants } from '../constants/chat.constants';\nimport { notificationActions } from \"./notification.action\";\nimport { notificatonService } from \"../services/notification.service\";\nimport { chatAction } from \"../actions/chat.action\";\nexport const socketActions = {\n  connect,\n  disconnect\n};\n\nfunction connect() {\n  return dispatch => {\n    socketService.connect().then(socket => {\n      dispatch(connectSocket(socket)); //notification\n\n      socket.on(\"newNotification\", data => {\n        // notificatonService.readNotifications(data.notification._id);\n        dispatch(notificationActions.addNotification(data));\n      }); //new message\n\n      socket.on('newMessage', data => {\n        console.log('new Mesage');\n        dispatch(chatAction.newMessage(data));\n      }); // socket.on(\"readMessages\", data => {\n      //     dispatch({ type: chatConstants.RECEIVE_READ_MESSAGES, data });\n      // });\n      // socket.on(\"typing\", data => {\n      //     dispatch(chatAction.typing(data.roomId));\n      // });\n      // socket.on(\"stoppedTyping\", data => {\n      //     dispatch(chatAction.stoppedTyping(data.roomId));\n      // });\n\n      socket.on(\"activityStatusUpdate\", data => {\n        dispatch(chatAction.changeActivityStatus(data));\n      });\n      window.socket = socket;\n    });\n  };\n\n  function connectSocket(socket) {\n    return {\n      type: socketConstants.CONNECT,\n      socket\n    };\n  }\n}\n\nfunction disconnect() {\n  window.socket.emit('dis');\n  window.socket.disconnect();\n  window.socket = '';\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/actions/socket.action.js"],"names":["socketService","socketConstants","chatConstants","notificationActions","notificatonService","chatAction","socketActions","connect","disconnect","dispatch","then","socket","connectSocket","on","data","addNotification","console","log","newMessage","changeActivityStatus","window","type","CONNECT","emit"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,OADyB;AAChBC,EAAAA;AADgB,CAAtB;;AAGP,SAASD,OAAT,GAAmB;AACf,SAAOE,QAAQ,IAAI;AACfT,IAAAA,aAAa,CAACO,OAAd,GAAwBG,IAAxB,CACIC,MAAM,IAAI;AACNF,MAAAA,QAAQ,CAACG,aAAa,CAACD,MAAD,CAAd,CAAR,CADM,CAEN;;AACAA,MAAAA,MAAM,CAACE,EAAP,CAAU,iBAAV,EAA6BC,IAAI,IAAI;AACjC;AACAL,QAAAA,QAAQ,CAACN,mBAAmB,CAACY,eAApB,CAAoCD,IAApC,CAAD,CAAR;AACH,OAHD,EAHM,CAON;;AACAH,MAAAA,MAAM,CAACE,EAAP,CAAU,YAAV,EAAwBC,IAAI,IAAI;AAC5BE,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAR,QAAAA,QAAQ,CAACJ,UAAU,CAACa,UAAX,CAAsBJ,IAAtB,CAAD,CAAR;AACH,OAHD,EARM,CAaN;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEAH,MAAAA,MAAM,CAACE,EAAP,CAAU,sBAAV,EAAkCC,IAAI,IAAI;AACtCL,QAAAA,QAAQ,CAACJ,UAAU,CAACc,oBAAX,CAAgCL,IAAhC,CAAD,CAAR;AACD,OAFH;AAGAM,MAAAA,MAAM,CAACT,MAAP,GAAgBA,MAAhB;AACH,KA9BL;AAgCH,GAjCD;;AAmCA,WAASC,aAAT,CAAuBD,MAAvB,EAA+B;AAC3B,WAAO;AAAEU,MAAAA,IAAI,EAAEpB,eAAe,CAACqB,OAAxB;AAAiCX,MAAAA;AAAjC,KAAP;AACH;AACJ;;AACD,SAASH,UAAT,GAAsB;AAClBY,EAAAA,MAAM,CAACT,MAAP,CAAcY,IAAd,CAAmB,KAAnB;AACAH,EAAAA,MAAM,CAACT,MAAP,CAAcH,UAAd;AACAY,EAAAA,MAAM,CAACT,MAAP,GAAgB,EAAhB;AACH","sourcesContent":["import { socketService } from \"../services/socket.service\";\r\nimport { socketConstants } from '../constants/socket.constants';\r\nimport { chatConstants } from '../constants/chat.constants';\r\nimport { notificationActions } from \"./notification.action\";\r\nimport { notificatonService } from \"../services/notification.service\";\r\nimport { chatAction } from \"../actions/chat.action\";\r\nexport const socketActions = {\r\n    connect, disconnect\r\n}\r\nfunction connect() {\r\n    return dispatch => {\r\n        socketService.connect().then(\r\n            socket => {\r\n                dispatch(connectSocket(socket));\r\n                //notification\r\n                socket.on(\"newNotification\", data => {\r\n                    // notificatonService.readNotifications(data.notification._id);\r\n                    dispatch(notificationActions.addNotification(data))\r\n                })\r\n                //new message\r\n                socket.on('newMessage', data => {\r\n                    console.log('new Mesage')\r\n                    dispatch(chatAction.newMessage(data));\r\n                })\r\n\r\n                // socket.on(\"readMessages\", data => {\r\n                //     dispatch({ type: chatConstants.RECEIVE_READ_MESSAGES, data });\r\n                // });\r\n\r\n                // socket.on(\"typing\", data => {\r\n                //     dispatch(chatAction.typing(data.roomId));\r\n                // });\r\n\r\n                // socket.on(\"stoppedTyping\", data => {\r\n                //     dispatch(chatAction.stoppedTyping(data.roomId));\r\n                // });\r\n\r\n                socket.on(\"activityStatusUpdate\", data => {\r\n                    dispatch(chatAction.changeActivityStatus(data));\r\n                  });\r\n                window.socket = socket;\r\n            }\r\n        )\r\n    }\r\n\r\n    function connectSocket(socket) {\r\n        return { type: socketConstants.CONNECT, socket };\r\n    }\r\n}\r\nfunction disconnect() {\r\n    window.socket.emit('dis');\r\n    window.socket.disconnect();\r\n    window.socket = ''\r\n}"]},"metadata":{},"sourceType":"module"}