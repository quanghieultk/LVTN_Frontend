{"ast":null,"code":"import { userConstants } from '../constants/user.constants';\nimport { userService } from '../services/user.service';\nimport { alertActions } from './alert.actions';\nimport { history } from '../helpers/history';\nexport const userActions = {\n  login,\n  logout,\n  register,\n  getAll,\n  delete: _delete\n};\n\nfunction login(username, password) {\n  let email = username;\n  return dispatch => {\n    // dispatch(request({ email }));\n    userService.login(email, password).then(user => {\n      console.log(email); // dispatch(success(user));\n      // history.push('/');\n    }, error => {\n      console.log(error); // dispatch(failure(error.toString()));\n      // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    userService.register(user).then(user => {\n      dispatch(success());\n      history.push('/signIn');\n      dispatch(alertActions.success('Registration successful'));\n    }, error => {\n      console.log(error);\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    userService.getAll().then(users => dispatch(success(users)), error => dispatch(failure(error.toString())));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return dispatch => {\n    dispatch(request(id));\n    userService.delete(id).then(user => dispatch(success(id)), error => dispatch(failure(id, error.toString())));\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/actions/user.actions.js"],"names":["userConstants","userService","alertActions","history","userActions","login","logout","register","getAll","delete","_delete","username","password","email","dispatch","then","user","console","log","error","request","type","LOGIN_REQUEST","success","LOGIN_SUCCESS","failure","LOGIN_FAILURE","LOGOUT","push","toString","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"AAAA,SAASA,aAAT,QAA8B,6BAA9B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,KADuB;AAEvBC,EAAAA,MAFuB;AAGvBC,EAAAA,QAHuB;AAIvBC,EAAAA,MAJuB;AAKvBC,EAAAA,MAAM,EAAEC;AALe,CAApB;;AAQP,SAASL,KAAT,CAAeM,QAAf,EAAyBC,QAAzB,EAAmC;AAC/B,MAAIC,KAAK,GAACF,QAAV;AACA,SAAOG,QAAQ,IAAI;AACf;AACAb,IAAAA,WAAW,CAACI,KAAZ,CAAkBQ,KAAlB,EAAyBD,QAAzB,EACKG,IADL,CAEQC,IAAI,IAAI;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EADI,CAEJ;AACA;AACH,KANT,EAOQM,KAAK,IAAI;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EADK,CAEL;AACA;AACH,KAXT;AAaH,GAfD;;AAiBA,WAASC,OAAT,CAAiBJ,IAAjB,EAAuB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAErB,aAAa,CAACsB,aAAtB;AAAqCN,MAAAA;AAArC,KAAP;AAAoD;;AAC7E,WAASO,OAAT,CAAiBP,IAAjB,EAAuB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAErB,aAAa,CAACwB,aAAtB;AAAqCR,MAAAA;AAArC,KAAP;AAAoD;;AAC7E,WAASS,OAAT,CAAiBN,KAAjB,EAAwB;AAAE,WAAO;AAAEE,MAAAA,IAAI,EAAErB,aAAa,CAAC0B,aAAtB;AAAqCP,MAAAA;AAArC,KAAP;AAAqD;AAClF;;AAED,SAASb,MAAT,GAAkB;AACdL,EAAAA,WAAW,CAACK,MAAZ;AACA,SAAO;AAAEe,IAAAA,IAAI,EAAErB,aAAa,CAAC2B;AAAtB,GAAP;AACH;;AAED,SAASpB,QAAT,CAAkBS,IAAlB,EAAwB;AACpB,SAAOF,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACM,OAAO,CAACJ,IAAD,CAAR,CAAR;AAEAf,IAAAA,WAAW,CAACM,QAAZ,CAAqBS,IAArB,EACKD,IADL,CAEQC,IAAI,IAAI;AACJF,MAAAA,QAAQ,CAACS,OAAO,EAAR,CAAR;AACApB,MAAAA,OAAO,CAACyB,IAAR,CAAa,SAAb;AACAd,MAAAA,QAAQ,CAACZ,YAAY,CAACqB,OAAb,CAAqB,yBAArB,CAAD,CAAR;AACH,KANT,EAOQJ,KAAK,IAAI;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAL,MAAAA,QAAQ,CAACW,OAAO,CAACN,KAAK,CAACU,QAAN,EAAD,CAAR,CAAR;AACAf,MAAAA,QAAQ,CAACZ,YAAY,CAACiB,KAAb,CAAmBA,KAAK,CAACU,QAAN,EAAnB,CAAD,CAAR;AACH,KAXT;AAaH,GAhBD;;AAkBA,WAAST,OAAT,CAAiBJ,IAAjB,EAAuB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAErB,aAAa,CAAC8B,gBAAtB;AAAwCd,MAAAA;AAAxC,KAAP;AAAuD;;AAChF,WAASO,OAAT,CAAiBP,IAAjB,EAAuB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAErB,aAAa,CAAC+B,gBAAtB;AAAwCf,MAAAA;AAAxC,KAAP;AAAuD;;AAChF,WAASS,OAAT,CAAiBN,KAAjB,EAAwB;AAAE,WAAO;AAAEE,MAAAA,IAAI,EAAErB,aAAa,CAACgC,gBAAtB;AAAwCb,MAAAA;AAAxC,KAAP;AAAwD;AACrF;;AAED,SAASX,MAAT,GAAkB;AACd,SAAOM,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACM,OAAO,EAAR,CAAR;AAEAnB,IAAAA,WAAW,CAACO,MAAZ,GACKO,IADL,CAEQkB,KAAK,IAAInB,QAAQ,CAACS,OAAO,CAACU,KAAD,CAAR,CAFzB,EAGQd,KAAK,IAAIL,QAAQ,CAACW,OAAO,CAACN,KAAK,CAACU,QAAN,EAAD,CAAR,CAHzB;AAKH,GARD;;AAUA,WAAST,OAAT,GAAmB;AAAE,WAAO;AAAEC,MAAAA,IAAI,EAAErB,aAAa,CAACkC;AAAtB,KAAP;AAA+C;;AACpE,WAASX,OAAT,CAAiBU,KAAjB,EAAwB;AAAE,WAAO;AAAEZ,MAAAA,IAAI,EAAErB,aAAa,CAACmC,cAAtB;AAAsCF,MAAAA;AAAtC,KAAP;AAAsD;;AAChF,WAASR,OAAT,CAAiBN,KAAjB,EAAwB;AAAE,WAAO;AAAEE,MAAAA,IAAI,EAAErB,aAAa,CAACoC,cAAtB;AAAsCjB,MAAAA;AAAtC,KAAP;AAAsD;AACnF,C,CAED;;;AACA,SAAST,OAAT,CAAiB2B,EAAjB,EAAqB;AACjB,SAAOvB,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACM,OAAO,CAACiB,EAAD,CAAR,CAAR;AAEApC,IAAAA,WAAW,CAACQ,MAAZ,CAAmB4B,EAAnB,EACKtB,IADL,CAEQC,IAAI,IAAIF,QAAQ,CAACS,OAAO,CAACc,EAAD,CAAR,CAFxB,EAGQlB,KAAK,IAAIL,QAAQ,CAACW,OAAO,CAACY,EAAD,EAAKlB,KAAK,CAACU,QAAN,EAAL,CAAR,CAHzB;AAKH,GARD;;AAUA,WAAST,OAAT,CAAiBiB,EAAjB,EAAqB;AAAE,WAAO;AAAEhB,MAAAA,IAAI,EAAErB,aAAa,CAACsC,cAAtB;AAAsCD,MAAAA;AAAtC,KAAP;AAAmD;;AAC1E,WAASd,OAAT,CAAiBc,EAAjB,EAAqB;AAAE,WAAO;AAAEhB,MAAAA,IAAI,EAAErB,aAAa,CAACuC,cAAtB;AAAsCF,MAAAA;AAAtC,KAAP;AAAmD;;AAC1E,WAASZ,OAAT,CAAiBY,EAAjB,EAAqBlB,KAArB,EAA4B;AAAE,WAAO;AAAEE,MAAAA,IAAI,EAAErB,aAAa,CAACwC,cAAtB;AAAsCH,MAAAA,EAAtC;AAA0ClB,MAAAA;AAA1C,KAAP;AAA0D;AAC3F","sourcesContent":["import { userConstants } from '../constants/user.constants';\r\nimport { userService } from '../services/user.service';\r\nimport { alertActions } from './alert.actions';\r\nimport { history } from '../helpers/history';\r\n\r\nexport const userActions = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getAll,\r\n    delete: _delete\r\n};\r\n\r\nfunction login(username, password) {\r\n    let email=username;\r\n    return dispatch => {\r\n        // dispatch(request({ email }));\r\n        userService.login(email, password)\r\n            .then(   \r\n                user => { \r\n                    console.log(email);\r\n                    // dispatch(success(user));\r\n                    // history.push('/');\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                    // dispatch(failure(error.toString()));\r\n                    // dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\n\r\nfunction logout() {\r\n    userService.logout();\r\n    return { type: userConstants.LOGOUT };\r\n}\r\n\r\nfunction register(user) {\r\n    return dispatch => {\r\n        dispatch(request(user));\r\n\r\n        userService.register(user)\r\n            .then(\r\n                user => { \r\n                    dispatch(success());\r\n                    history.push('/signIn');\r\n                    dispatch(alertActions.success('Registration successful'));\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                    dispatch(failure(error.toString()));\r\n                    dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\r\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\r\n}\r\n\r\nfunction getAll() {\r\n    return dispatch => {\r\n        dispatch(request());\r\n\r\n        userService.getAll()\r\n            .then(\r\n                users => dispatch(success(users)),\r\n                error => dispatch(failure(error.toString()))\r\n            );\r\n    };\r\n\r\n    function request() { return { type: userConstants.GETALL_REQUEST } }\r\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\r\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nfunction _delete(id) {\r\n    return dispatch => {\r\n        dispatch(request(id));\r\n\r\n        userService.delete(id)\r\n            .then(\r\n                user => dispatch(success(id)),\r\n                error => dispatch(failure(id, error.toString()))\r\n            );\r\n    };\r\n\r\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\r\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\r\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\r\n}"]},"metadata":{},"sourceType":"module"}