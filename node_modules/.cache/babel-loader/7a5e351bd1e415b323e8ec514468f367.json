{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\LVTN\\\\cuisine-net\\\\src\\\\services\\\\gmap.js\",\n    _s = $RefreshSig$();\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\nimport React, { useState, useRef, useCallback } from \"react\";\nimport MapGL, { Marker, NavigationControl, FullscreenControl } from \"react-map-gl\";\nimport Geocoder from \"react-map-gl-geocoder\";\nimport LocationOnIcon from '@material-ui/icons/LocationOn'; // Please be a decent human and don't abuse my Mapbox API token.\n// If you fork this sandbox, replace my API token with your own.\n// Ways to set Mapbox token: https://uber.github.io/react-map-gl/#/Documentation/getting-started/about-mapbox-tokens\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoidG9hbmRvIiwiYSI6ImNrbThscTh4cjBrNnQycHF5MWJqd29jaDQifQ.LNubsbmqGfZhCCRymL-A2g';\nexport default function GMap() {\n  _s();\n\n  const [viewport, setViewport] = useState({\n    latitude: 37.7577,\n    longitude: -122.4376,\n    zoom: 15\n  });\n  const [position, setPosition] = useState({\n    latitude: 0,\n    longitude: 0\n  });\n  const navStyle = {\n    position: \"absolute\",\n    top: 36,\n    left: 0,\n    padding: \"10px\"\n  };\n  const fullscreenControlStyle = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    padding: \"10px\"\n  };\n\n  function onSelected(viewport, item) {\n    setViewport({\n      viewport\n    });\n  }\n\n  const mapRef = useRef();\n  const handleViewportChange = useCallback(newViewport => setViewport(newViewport), []);\n  navigator.geolocation.getCurrentPosition(function (position) {\n    setViewport({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      zoom: 15\n    });\n    setPosition({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    });\n  }, function (error) {\n    console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n  });\n  const handleGeocoderViewportChange = useCallback(newViewport => {\n    const geocoderDefaultOverrides = {\n      transitionDuration: 1000\n    };\n    return handleViewportChange({ ...newViewport,\n      ...geocoderDefaultOverrides\n    });\n  }, [handleViewportChange]);\n\n  function makerOnClick(e) {\n    console.log(e);\n    setPosition({\n      latitude: e.lngLat[1],\n      longitude: e.lngLat[0]\n    }); // setViewport({\n    // \tlatitude: e.lngLat[1],\n    // \tlongitude: e.lngLat[0],\n    // \tzoom: 15\n    // })\n  }\n\n  const onMarkerClick = event => {\n    alert('You clicked on marker');\n    event.stopPropagation();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MapGL, {\n      ref: mapRef,\n      ...viewport,\n      width: \"100%\",\n      height: \"100%\",\n      onViewportChange: handleViewportChange,\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      onClick: e => makerOnClick(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav\",\n        style: navStyle,\n        children: /*#__PURE__*/_jsxDEV(NavigationControl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fullscreen\",\n        style: fullscreenControlStyle,\n        children: /*#__PURE__*/_jsxDEV(FullscreenControl, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Geocoder, {\n        mapRef: mapRef,\n        onViewportChange: handleGeocoderViewportChange,\n        mapboxApiAccessToken: MAPBOX_TOKEN // onSelected={onSelected}\n        ,\n        position: \"top-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        longitude: position.longitude,\n        latitude: position.latitude,\n        onClick: onMarkerClick,\n        children: /*#__PURE__*/_jsxDEV(LocationOnIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this)\n      }, \"marker_1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n}\n\n_s(GMap, \"PW8GRfFs6a6dLgXND/Dexvp4Ll8=\");\n\n_c = GMap;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"GMap\");","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/services/gmap.js"],"names":["React","useState","useRef","useCallback","MapGL","Marker","NavigationControl","FullscreenControl","Geocoder","LocationOnIcon","MAPBOX_TOKEN","GMap","viewport","setViewport","latitude","longitude","zoom","position","setPosition","navStyle","top","left","padding","fullscreenControlStyle","onSelected","item","mapRef","handleViewportChange","newViewport","navigator","geolocation","getCurrentPosition","coords","error","console","code","message","handleGeocoderViewportChange","geocoderDefaultOverrides","transitionDuration","makerOnClick","e","log","lngLat","onMarkerClick","event","alert","stopPropagation","height"],"mappings":"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","sourcesContent":["import \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\r\nimport React, { useState, useRef, useCallback } from \"react\";\r\nimport MapGL, { Marker, NavigationControl, FullscreenControl } from \"react-map-gl\";\r\nimport Geocoder from \"react-map-gl-geocoder\";\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n// Please be a decent human and don't abuse my Mapbox API token.\r\n// If you fork this sandbox, replace my API token with your own.\r\n// Ways to set Mapbox token: https://uber.github.io/react-map-gl/#/Documentation/getting-started/about-mapbox-tokens\r\nconst MAPBOX_TOKEN =\r\n\t'pk.eyJ1IjoidG9hbmRvIiwiYSI6ImNrbThscTh4cjBrNnQycHF5MWJqd29jaDQifQ.LNubsbmqGfZhCCRymL-A2g';\r\n\r\nexport default function GMap() {\r\n\r\n\tconst [viewport, setViewport] = useState({\r\n\t\tlatitude: 37.7577,\r\n\t\tlongitude: -122.4376,\r\n\t\tzoom: 15\r\n\t});\r\n\tconst [position, setPosition] = useState({\r\n\t\tlatitude: 0,\r\n\t\tlongitude: 0\r\n\t})\r\n\tconst navStyle = {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: 36,\r\n\t\tleft: 0,\r\n\t\tpadding: \"10px\"\r\n\t};\r\n\tconst fullscreenControlStyle = {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: 0,\r\n\t\tleft: 0,\r\n\t\tpadding: \"10px\"\r\n\t};\r\n\tfunction onSelected(viewport, item) {\r\n\t\tsetViewport({\r\n\t\t\tviewport\r\n\t\t})\r\n\t}\r\n\tconst mapRef = useRef();\r\n\tconst handleViewportChange = useCallback(\r\n\t\t(newViewport) => setViewport(newViewport),\r\n\t\t[]\r\n\t);\r\n\tnavigator.geolocation.getCurrentPosition(\r\n\t\tfunction (position) {\r\n\t\t\tsetViewport({\r\n\t\t\t\tlatitude: position.coords.latitude,\r\n\t\t\t\tlongitude: position.coords.longitude,\r\n\t\t\t\tzoom: 15\r\n\t\t\t})\r\n\t\t\tsetPosition({\r\n\t\t\t\tlatitude: position.coords.latitude,\r\n\t\t\t\tlongitude: position.coords.longitude,\r\n\t\t\t})\r\n\t\t},\r\n\t\tfunction (error) {\r\n\t\t\tconsole.error(\"Error Code = \" + error.code + \" - \" + error.message);\r\n\t\t}\r\n\t);\r\n\tconst handleGeocoderViewportChange = useCallback(\r\n\t\t(newViewport) => {\r\n\t\t\tconst geocoderDefaultOverrides = { transitionDuration: 1000 };\r\n\r\n\t\t\treturn handleViewportChange({\r\n\t\t\t\t...newViewport,\r\n\t\t\t\t...geocoderDefaultOverrides\r\n\t\t\t});\r\n\t\t},\r\n\t\t[handleViewportChange]\r\n\t);\r\n\tfunction makerOnClick(e) {\r\n\t\tconsole.log(e);\r\n\t\tsetPosition({\r\n\t\t\tlatitude: e.lngLat[1],\r\n\t\t\tlongitude: e.lngLat[0]\r\n\t\t})\r\n\t\t// setViewport({\r\n\t\t// \tlatitude: e.lngLat[1],\r\n\t\t// \tlongitude: e.lngLat[0],\r\n\t\t// \tzoom: 15\r\n\t\t// })\r\n\t}\r\n\tconst onMarkerClick = (event) => {\r\n\t\talert('You clicked on marker');\r\n\t\tevent.stopPropagation();\r\n\t};\r\n\treturn (\r\n\t\t<div style={{ height: \"100vh\" }}>\r\n\t\t\t<MapGL\r\n\t\t\t\tref={mapRef}\r\n\t\t\t\t{...viewport}\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\theight=\"100%\"\r\n\t\t\t\tonViewportChange={handleViewportChange}\r\n\t\t\t\tmapboxApiAccessToken={MAPBOX_TOKEN}\r\n\t\t\t\tonClick={e => makerOnClick(e)}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"nav\" style={navStyle}>\r\n\t\t\t\t\t<NavigationControl />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"fullscreen\" style={fullscreenControlStyle}>\r\n\t\t\t\t\t<FullscreenControl />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Geocoder\r\n\t\t\t\t\tmapRef={mapRef}\r\n\t\t\t\t\tonViewportChange={handleGeocoderViewportChange}\r\n\t\t\t\t\tmapboxApiAccessToken={MAPBOX_TOKEN}\r\n\t\t\t\t\t// onSelected={onSelected}\r\n\t\t\t\t\tposition=\"top-left\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Marker\r\n\t\t\t\t\tkey=\"marker_1\"\r\n\t\t\t\t\tlongitude={position.longitude}\r\n\t\t\t\t\tlatitude={position.latitude}\r\n\t\t\t\t\tonClick={onMarkerClick}\r\n\t\t\t\t>\r\n\t\t\t\t\t<LocationOnIcon></LocationOnIcon>\r\n\t\t\t\t</Marker>\r\n\t\t\t</MapGL>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}