{"ast":null,"code":"import io from \"socket.io-client\";\nexport const socketService = {\n  connect,\n  disconnect\n};\n\nfunction disconnect() {\n  return new Promise((resolve, reject) => {\n    const socket = io.disconnect('http://localhost:8000', {\n      query: \"token=\" + JSON.parse(localStorage.getItem(\"user\")).token\n    });\n  });\n}\n\nfunction connect() {\n  return new Promise((resolve, reject) => {\n    const socket = io.connect('http://localhost:8000', {\n      query: \"token=\" + JSON.parse(localStorage.getItem(\"user\")).token\n    });\n    socket.on(\"connect\", () => {\n      console.log(socket.id);\n      resolve(socket);\n    });\n  });\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/services/socket.service.js"],"names":["io","socketService","connect","disconnect","Promise","resolve","reject","socket","query","JSON","parse","localStorage","getItem","token","on","console","log","id"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AAEA,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,OADyB;AAEzBC,EAAAA;AAFyB,CAAtB;;AAIP,SAASA,UAAT,GAAsB;AAClB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,MAAM,GAAGP,EAAE,CAACG,UAAH,CAAc,uBAAd,EACX;AACIK,MAAAA,KAAK,EAAE,WAAUC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AAD9D,KADW,CAAf;AAKH,GANM,CAAP;AAOH;;AACD,SAASX,OAAT,GAAmB;AACf,SAAO,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,MAAM,GAAGP,EAAE,CAACE,OAAH,CAAW,uBAAX,EACX;AACIM,MAAAA,KAAK,EAAE,WAAUC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC;AAD9D,KADW,CAAf;AAKAN,IAAAA,MAAM,CAACO,EAAP,CAAU,SAAV,EAAqB,MAAM;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACU,EAAnB;AACAZ,MAAAA,OAAO,CAACE,MAAD,CAAP;AACH,KAHD;AAIH,GAVM,CAAP;AAWH","sourcesContent":["import io from \"socket.io-client\";\r\n\r\nexport const socketService = {\r\n    connect,\r\n    disconnect\r\n}\r\nfunction disconnect() {\r\n    return new Promise((resolve, reject) => {\r\n        const socket = io.disconnect('http://localhost:8000',\r\n            {\r\n                query: \"token=\"+ JSON.parse(localStorage.getItem(\"user\")).token\r\n            }\r\n        );\r\n    })\r\n}\r\nfunction connect() {\r\n    return new Promise((resolve, reject) => {\r\n        const socket = io.connect('http://localhost:8000',\r\n            {\r\n                query: \"token=\"+ JSON.parse(localStorage.getItem(\"user\")).token\r\n            }\r\n        );\r\n        socket.on(\"connect\", () => {\r\n            console.log(socket.id);\r\n            resolve(socket);\r\n        });\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}