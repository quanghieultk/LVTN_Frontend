{"ast":null,"code":"import io from \"socket.io-client\";\nexport const socketService = {\n  connect\n};\n\nfunction connect() {\n  return new Promise((resolve, reject) => {\n    const socket = io(window.location.hostname, {\n      query: {\n        token: JSON.parse(localStorage.getItem(\"user\")).token\n      }\n    });\n    socket.on(\"connect\", () => {\n      console.log(socket.id);\n      resolve(socket);\n    });\n    socket.emit(\"Client-sent-data\", \"Hello world\");\n    socket.on(\"newNotification\", data => {\n      console.log(data);\n    });\n  });\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/services/socket.service.js"],"names":["io","socketService","connect","Promise","resolve","reject","socket","window","location","hostname","query","token","JSON","parse","localStorage","getItem","on","console","log","id","emit","data"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AAEA,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA;AADyB,CAAtB;;AAIP,SAASA,OAAT,GAAmB;AACf,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,MAAM,GAAGN,EAAE,CAACO,MAAM,CAACC,QAAP,CAAgBC,QAAjB,EAA2B;AACxCC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCJ;AAAlD;AADiC,KAA3B,CAAjB;AAGAL,IAAAA,MAAM,CAACU,EAAP,CAAU,SAAV,EAAqB,MAAM;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAM,CAACa,EAAnB;AAEAf,MAAAA,OAAO,CAACE,MAAD,CAAP;AACH,KAJD;AAKAA,IAAAA,MAAM,CAACc,IAAP,CAAY,kBAAZ,EAAgC,aAAhC;AACAd,IAAAA,MAAM,CAACU,EAAP,CAAU,iBAAV,EAA8BK,IAAD,IAAU;AACnCJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACH,KAFD;AAGH,GAbM,CAAP;AAcH","sourcesContent":["import io from \"socket.io-client\";\r\n\r\nexport const socketService = {\r\n    connect\r\n}\r\n\r\nfunction connect() {\r\n    return new Promise((resolve, reject) => {\r\n        const socket = io(window.location.hostname, {\r\n            query: { token: JSON.parse(localStorage.getItem(\"user\")).token },\r\n          });\r\n        socket.on(\"connect\", () => {\r\n            console.log(socket.id);\r\n\r\n            resolve(socket);\r\n        });\r\n        socket.emit(\"Client-sent-data\", \"Hello world\");\r\n        socket.on(\"newNotification\", (data) => {\r\n            console.log(data);\r\n        })\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}