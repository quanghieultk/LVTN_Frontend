{"ast":null,"code":"import { userConstants } from '../constants/user.constants';\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userConstants.GETALL_REQUEST:\n      return {\n        loading: true\n      };\n\n    case userConstants.GETALL_SUCCESS:\n      return {\n        items: action.users\n      };\n\n    case userConstants.GETALL_FAILURE:\n      return {\n        error: action.error\n      };\n\n    case userConstants.DELETE_REQUEST:\n      // add 'deleting:true' property to user being deleted\n      return { ...state,\n        items: state.items.map(user => user.id === action.id ? { ...user,\n          deleting: true\n        } : user)\n      };\n\n    case userConstants.DELETE_SUCCESS:\n      // remove deleted user from state\n      return {\n        items: state.items.filter(user => user.id !== action.id)\n      };\n\n    case userConstants.DELETE_FAILURE:\n      // remove 'deleting:true' property and add 'deleteError:[error]' property to user \n      return { ...state,\n        items: state.items.map(user => {\n          if (user.id === action.id) {\n            // make copy of user without 'deleting:true' property\n            const {\n              deleting,\n              ...userCopy\n            } = user; // return copy of user with 'deleteError:[error]' property\n\n            return { ...userCopy,\n              deleteError: action.error\n            };\n          }\n\n          return user;\n        })\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/reducers/users.reducer.js"],"names":["userConstants","users","state","action","type","GETALL_REQUEST","loading","GETALL_SUCCESS","items","GETALL_FAILURE","error","DELETE_REQUEST","map","user","id","deleting","DELETE_SUCCESS","filter","DELETE_FAILURE","userCopy","deleteError"],"mappings":"AAAA,SAASA,aAAT,QAA8B,6BAA9B;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAK,GAAG,EAAvB,EAA2BC,MAA3B,EAAmC;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,aAAa,CAACK,cAAnB;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE;AADJ,OAAP;;AAGF,SAAKN,aAAa,CAACO,cAAnB;AACE,aAAO;AACLC,QAAAA,KAAK,EAAEL,MAAM,CAACF;AADT,OAAP;;AAGF,SAAKD,aAAa,CAACS,cAAnB;AACE,aAAO;AACLC,QAAAA,KAAK,EAAEP,MAAM,CAACO;AADT,OAAP;;AAGF,SAAKV,aAAa,CAACW,cAAnB;AACE;AACA,aAAO,EACL,GAAGT,KADE;AAELM,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYI,GAAZ,CAAgBC,IAAI,IACzBA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAAnB,GACI,EAAE,GAAGD,IAAL;AAAWE,UAAAA,QAAQ,EAAE;AAArB,SADJ,GAEIF,IAHC;AAFF,OAAP;;AAQF,SAAKb,aAAa,CAACgB,cAAnB;AACE;AACA,aAAO;AACLR,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYS,MAAZ,CAAmBJ,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAA9C;AADF,OAAP;;AAGF,SAAKd,aAAa,CAACkB,cAAnB;AACE;AACA,aAAO,EACL,GAAGhB,KADE;AAELM,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYI,GAAZ,CAAgBC,IAAI,IAAI;AAC7B,cAAIA,IAAI,CAACC,EAAL,KAAYX,MAAM,CAACW,EAAvB,EAA2B;AACzB;AACA,kBAAM;AAAEC,cAAAA,QAAF;AAAY,iBAAGI;AAAf,gBAA4BN,IAAlC,CAFyB,CAGzB;;AACA,mBAAO,EAAE,GAAGM,QAAL;AAAeC,cAAAA,WAAW,EAAEjB,MAAM,CAACO;AAAnC,aAAP;AACD;;AAED,iBAAOG,IAAP;AACD,SATM;AAFF,OAAP;;AAaF;AACE,aAAOX,KAAP;AA5CJ;AA8CD","sourcesContent":["import { userConstants } from '../constants/user.constants';\r\n\r\nexport function users(state = {}, action) {\r\n  switch (action.type) {\r\n    case userConstants.GETALL_REQUEST:\r\n      return {\r\n        loading: true\r\n      };\r\n    case userConstants.GETALL_SUCCESS:\r\n      return {\r\n        items: action.users\r\n      };\r\n    case userConstants.GETALL_FAILURE:\r\n      return { \r\n        error: action.error\r\n      };\r\n    case userConstants.DELETE_REQUEST:\r\n      // add 'deleting:true' property to user being deleted\r\n      return {\r\n        ...state,\r\n        items: state.items.map(user =>\r\n          user.id === action.id\r\n            ? { ...user, deleting: true }\r\n            : user\r\n        )\r\n      };\r\n    case userConstants.DELETE_SUCCESS:\r\n      // remove deleted user from state\r\n      return {\r\n        items: state.items.filter(user => user.id !== action.id)\r\n      };\r\n    case userConstants.DELETE_FAILURE:\r\n      // remove 'deleting:true' property and add 'deleteError:[error]' property to user \r\n      return {\r\n        ...state,\r\n        items: state.items.map(user => {\r\n          if (user.id === action.id) {\r\n            // make copy of user without 'deleting:true' property\r\n            const { deleting, ...userCopy } = user;\r\n            // return copy of user with 'deleteError:[error]' property\r\n            return { ...userCopy, deleteError: action.error };\r\n          }\r\n\r\n          return user;\r\n        })\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}