{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\LVTN\\\\cuisine-net\\\\src\\\\services\\\\gmap.js\",\n    _s = $RefreshSig$();\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\nimport React, { useState, useRef, useCallback } from \"react\";\nimport { render } from \"react-dom\";\nimport MapGL from \"react-map-gl\";\nimport Geocoder from \"react-map-gl-geocoder\"; // Please be a decent human and don't abuse my Mapbox API token.\n// If you fork this sandbox, replace my API token with your own.\n// Ways to set Mapbox token: https://uber.github.io/react-map-gl/#/Documentation/getting-started/about-mapbox-tokens\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoidG9hbmRvIiwiYSI6ImNrbThscTh4cjBrNnQycHF5MWJqd29jaDQifQ.LNubsbmqGfZhCCRymL-A2g';\nexport default function GMap() {\n  _s();\n\n  const [viewport, setViewport] = useState({\n    latitude: 37.7577,\n    longitude: -122.4376,\n    zoom: 8\n  });\n  const mapRef = useRef();\n  const handleViewportChange = useCallback(newViewport => setViewport(newViewport), []);\n  const handleGeocoderViewportChange = useCallback(newViewport => {\n    const geocoderDefaultOverrides = {\n      transitionDuration: 1000\n    };\n    return handleViewportChange({ ...newViewport,\n      ...geocoderDefaultOverrides\n    });\n  }, [handleViewportChange]);\n\n  function makerOnClick(e) {\n    console.log(e);\n    setViewport({\n      latitude: e.lngLat[1],\n      longitude: e.lngLat[0],\n      zoom: 8\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MapGL, {\n      ref: mapRef,\n      ...viewport,\n      width: \"100%\",\n      height: \"100%\",\n      onViewportChange: handleViewportChange,\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      onClick: e => makerOnClick(e),\n      children: /*#__PURE__*/_jsxDEV(Geocoder, {\n        mapRef: mapRef,\n        onViewportChange: handleGeocoderViewportChange,\n        mapboxApiAccessToken: MAPBOX_TOKEN,\n        position: \"top-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GMap, \"JVE6BVKgHdhTOE90oCLElBrf0n8=\");\n\n_c = GMap;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"GMap\");","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/services/gmap.js"],"names":["React","useState","useRef","useCallback","render","MapGL","Geocoder","MAPBOX_TOKEN","GMap","viewport","setViewport","latitude","longitude","zoom","mapRef","handleViewportChange","newViewport","handleGeocoderViewportChange","geocoderDefaultOverrides","transitionDuration","makerOnClick","e","console","log","lngLat","height"],"mappings":";;;AAAA,OAAO,8BAAP;AACA,OAAO,mDAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;AACA;AACA;;;AACA,MAAMC,YAAY,GAClB,0FADA;AAGA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,QAAQ,EAAE,OAD6B;AAEvCC,IAAAA,SAAS,EAAE,CAAC,QAF2B;AAGvCC,IAAAA,IAAI,EAAE;AAHiC,GAAD,CAAxC;AAKA,QAAMC,MAAM,GAAGZ,MAAM,EAArB;AACA,QAAMa,oBAAoB,GAAGZ,WAAW,CACrCa,WAAD,IAAiBN,WAAW,CAACM,WAAD,CADU,EAEtC,EAFsC,CAAxC;AAKA,QAAMC,4BAA4B,GAAGd,WAAW,CAC7Ca,WAAD,IAAiB;AACf,UAAME,wBAAwB,GAAG;AAAEC,MAAAA,kBAAkB,EAAE;AAAtB,KAAjC;AAEA,WAAOJ,oBAAoB,CAAC,EAC1B,GAAGC,WADuB;AAE1B,SAAGE;AAFuB,KAAD,CAA3B;AAID,GAR6C,EAS9C,CAACH,oBAAD,CAT8C,CAAhD;;AAWA,WAASK,YAAT,CAAsBC,CAAtB,EAAwB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACFX,IAAAA,WAAW,CAAC;AACXC,MAAAA,QAAQ,EAAEU,CAAC,CAACG,MAAF,CAAS,CAAT,CADC;AAEXZ,MAAAA,SAAS,EAAES,CAAC,CAACG,MAAF,CAAS,CAAT,CAFA;AAGXX,MAAAA,IAAI,EAAE;AAHK,KAAD,CAAX;AAKE;;AACD,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,GAAG,EAAEX,MADP;AAAA,SAEML,QAFN;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,MAAM,EAAC,MAJT;AAKE,MAAA,gBAAgB,EAAEM,oBALpB;AAME,MAAA,oBAAoB,EAAER,YANxB;AAOJ,MAAA,OAAO,EAAEc,CAAC,IAAED,YAAY,CAACC,CAAD,CAPpB;AAAA,6BASE,QAAC,QAAD;AACE,QAAA,MAAM,EAAEP,MADV;AAEE,QAAA,gBAAgB,EAAEG,4BAFpB;AAGE,QAAA,oBAAoB,EAAEV,YAHxB;AAIE,QAAA,QAAQ,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAnDuBC,I;;KAAAA,I;AAmDvB","sourcesContent":["import \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\r\nimport React, { useState, useRef, useCallback } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport MapGL from \"react-map-gl\";\r\nimport Geocoder from \"react-map-gl-geocoder\";\r\n\r\n// Please be a decent human and don't abuse my Mapbox API token.\r\n// If you fork this sandbox, replace my API token with your own.\r\n// Ways to set Mapbox token: https://uber.github.io/react-map-gl/#/Documentation/getting-started/about-mapbox-tokens\r\nconst MAPBOX_TOKEN =\r\n'pk.eyJ1IjoidG9hbmRvIiwiYSI6ImNrbThscTh4cjBrNnQycHF5MWJqd29jaDQifQ.LNubsbmqGfZhCCRymL-A2g';\r\n\r\nexport default function GMap(){\r\n  const [viewport, setViewport] = useState({\r\n    latitude: 37.7577,\r\n    longitude: -122.4376,\r\n    zoom: 8\r\n  });\r\n  const mapRef = useRef();\r\n  const handleViewportChange = useCallback(\r\n    (newViewport) => setViewport(newViewport),\r\n    []\r\n  );\r\n\r\n  const handleGeocoderViewportChange = useCallback(\r\n    (newViewport) => {\r\n      const geocoderDefaultOverrides = { transitionDuration: 1000 };\r\n\r\n      return handleViewportChange({\r\n        ...newViewport,\r\n        ...geocoderDefaultOverrides\r\n      });\r\n    },\r\n    [handleViewportChange]\r\n  );\r\n  function makerOnClick(e){\r\n\t  console.log(e);\r\n\tsetViewport({\r\n\t\tlatitude: e.lngLat[1],\r\n\t\tlongitude: e.lngLat[0],\r\n\t\tzoom: 8\r\n\t})\r\n  }\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <MapGL\r\n        ref={mapRef}\r\n        {...viewport}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        onViewportChange={handleViewportChange}\r\n        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n\t\tonClick={e=>makerOnClick(e)}\r\n      >\r\n        <Geocoder\r\n          mapRef={mapRef}\r\n          onViewportChange={handleGeocoderViewportChange}\r\n          mapboxApiAccessToken={MAPBOX_TOKEN}\r\n          position=\"top-left\"\r\n        />\r\n      </MapGL>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}