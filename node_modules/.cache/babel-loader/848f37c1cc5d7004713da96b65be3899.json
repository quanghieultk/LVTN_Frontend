{"ast":null,"code":"import { userConstants } from '../constants/user.constants';\nimport { userService } from '../services/user.service';\nimport { alertActions } from './alert.actions';\nimport { history } from '../helpers/history';\nexport const userActions = {\n  login,\n  logout,\n  register,\n  getAll,\n  delete: _delete\n};\n\nasync function login(username, password) {\n  let email = username;\n  const response = await axios.request({\n    url: '/users/signin',\n    method: \"post\",\n    data: {\n      \"email\": username,\n      \"password\": password\n    }\n  }); // return  dispatch =>{\n  //     dispatch(request({ email }));\n  //     userService.login(email, password)\n  //         .then(  \n  //             user => { \n  //                 dispatch(success(user));\n  //                 // history.push('/');\n  //             }\n  //         ).catch(\n  //             error => {\n  //                 dispatch(failure(error.toString()));\n  //                 // dispatch(alertActions.error(error.toString()));\n  //             }\n  //         );   \n  //     // axios.request({\n  //     //     url: '/users/signin',\n  //     //     method: \"post\",\n  //     //     data: {\n  //     //         \"email\" : username, \n  //     //         \"password\": password\n  //     //     }\n  //     // })\n  // };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    userService.register(user).then(user => {\n      dispatch(success());\n      history.push('/signIn');\n      dispatch(alertActions.success('Registration successful'));\n    }, error => {\n      console.log(error);\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    userService.getAll().then(users => dispatch(success(users)), error => dispatch(failure(error.toString())));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return dispatch => {\n    dispatch(request(id));\n    userService.delete(id).then(user => dispatch(success(id)), error => dispatch(failure(id, error.toString())));\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/actions/user.actions.js"],"names":["userConstants","userService","alertActions","history","userActions","login","logout","register","getAll","delete","_delete","username","password","email","response","axios","request","url","method","data","user","type","LOGIN_REQUEST","success","LOGIN_SUCCESS","failure","error","LOGIN_FAILURE","LOGOUT","dispatch","then","push","console","log","toString","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants/user.constants';\r\nimport { userService } from '../services/user.service';\r\nimport { alertActions } from './alert.actions';\r\nimport { history } from '../helpers/history';\r\n\r\nexport const userActions = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getAll,\r\n    delete: _delete\r\n};\r\n\r\nasync function login(username, password) {\r\n    let email=username;\r\n    const response=await axios.request({\r\n        url: '/users/signin',\r\n        method: \"post\",\r\n        data: {\r\n            \"email\" : username, \r\n            \"password\": password\r\n        }})\r\n    \r\n    // return  dispatch =>{\r\n    //     dispatch(request({ email }));\r\n    //     userService.login(email, password)\r\n    //         .then(  \r\n    //             user => { \r\n    //                 dispatch(success(user));\r\n    //                 // history.push('/');\r\n    //             }\r\n    //         ).catch(\r\n    //             error => {\r\n    //                 dispatch(failure(error.toString()));\r\n    //                 // dispatch(alertActions.error(error.toString()));\r\n    //             }\r\n    //         );   \r\n    //     // axios.request({\r\n    //     //     url: '/users/signin',\r\n    //     //     method: \"post\",\r\n    //     //     data: {\r\n    //     //         \"email\" : username, \r\n    //     //         \"password\": password\r\n    //     //     }\r\n            \r\n    //     // })\r\n    // };\r\n\r\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\n\r\nfunction logout() {\r\n    userService.logout();\r\n    return { type: userConstants.LOGOUT };\r\n}\r\n\r\nfunction register(user) {\r\n    return dispatch => {\r\n        dispatch(request(user));\r\n\r\n        userService.register(user)\r\n            .then(\r\n                user => { \r\n                    dispatch(success());\r\n                    history.push('/signIn');\r\n                    dispatch(alertActions.success('Registration successful'));\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                    dispatch(failure(error.toString()));\r\n                    dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\r\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\r\n}\r\n\r\nfunction getAll() {\r\n    return dispatch => {\r\n        dispatch(request());\r\n\r\n        userService.getAll()\r\n            .then(\r\n                users => dispatch(success(users)),\r\n                error => dispatch(failure(error.toString()))\r\n            );\r\n    };\r\n\r\n    function request() { return { type: userConstants.GETALL_REQUEST } }\r\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\r\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nfunction _delete(id) {\r\n    return dispatch => {\r\n        dispatch(request(id));\r\n\r\n        userService.delete(id)\r\n            .then(\r\n                user => dispatch(success(id)),\r\n                error => dispatch(failure(id, error.toString()))\r\n            );\r\n    };\r\n\r\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\r\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\r\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\r\n}"]},"metadata":{},"sourceType":"module"}