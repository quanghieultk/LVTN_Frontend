{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport View from './view';\nimport GlobeViewport from '../viewports/globe-viewport';\nimport GlobeController from '../controllers/globe-controller';\n\nvar GlobeView = function (_View) {\n  _inherits(GlobeView, _View);\n\n  var _super = _createSuper(GlobeView);\n\n  function GlobeView(props) {\n    _classCallCheck(this, GlobeView);\n\n    return _super.call(this, _objectSpread(_objectSpread({}, props), {}, {\n      type: GlobeViewport\n    }));\n  }\n\n  _createClass(GlobeView, [{\n    key: \"controller\",\n    get: function get() {\n      return this._getControllerProps({\n        type: GlobeController\n      });\n    }\n  }]);\n\n  return GlobeView;\n}(View);\n\nexport { GlobeView as default };\nGlobeView.displayName = 'GlobeView';","map":{"version":3,"sources":["../../../src/views/globe-view.js"],"names":["GlobeView","View","type","GlobeViewport","GlobeController"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,IAAA,MAAA,QAAA;AACA,OAAA,aAAA,MAAA,6BAAA;AACA,OAAA,eAAA,MAAA,iCAAA;;IAEqBA,S;;;;;AACnB,WAAA,SAAA,CAAA,KAAA,EAAmB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AAAA,WAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA;AACAE,MAAAA,IAAI,EAAEC;AADN,KAAA,CAAA,CAAA;AAElB;;;;wBAEgB;AACf,aAAO,KAAA,mBAAA,CAAyB;AAC9BD,QAAAA,IAAI,EAAEE;AADwB,OAAzB,CAAP;AAGD;;;;EAToCH,I;;SAAlBD,S;AAYrBA,SAAS,CAATA,WAAAA,GAAAA,WAAAA","sourcesContent":["import View from './view';\nimport GlobeViewport from '../viewports/globe-viewport';\nimport GlobeController from '../controllers/globe-controller';\n\nexport default class GlobeView extends View {\n  constructor(props) {\n    super({...props, type: GlobeViewport});\n  }\n\n  get controller() {\n    return this._getControllerProps({\n      type: GlobeController\n    });\n  }\n}\n\nGlobeView.displayName = 'GlobeView';\n"]},"metadata":{},"sourceType":"module"}