{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\LVTN\\\\cuisine-net\\\\src\\\\pages\\\\message\\\\messegerContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport uuid from \"uuid/v4\";\nimport { ConversationHeader, Avatar, VoiceCallButton, VideoCallButton, ChatContainer, TypingIndicator, MessageSeparator, EllipsisButton, MessageList, Message, MessageInput } from \"@chatscope/chat-ui-kit-react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { chatAction } from '../../actions/chat.action';\nimport { chat } from '../../reducers/chat.reducer'; // import { MessageInput } from './messageInput';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formMessage: {\n    height: \"750px\",\n    position: \"relative\"\n  },\n  nonePadding: {\n    padding: \"0!important\"\n  }\n}));\nexport function MessContent(props) {\n  _s();\n\n  const [messageInputValue, setMessageInputValue] = useState(\"\");\n  const dispatch = useDispatch();\n  const userId = useSelector(state => state.chat.currentRoom.members[0]._id);\n  const profilePicture = useSelector(state => state.chat.currentRoom.members[0].photo);\n  const callingModal = useSelector(state => state.chat.callingModal);\n  const socket = useSelector(state => state.socket.socket);\n  const currentRoom = useSelector(state => state.chat.currentRoom);\n  const roomId = useSelector(state => state.chat.roomId);\n  const content = props.content;\n\n  function onSubmitMessage(val) {\n    console.log(val);\n\n    if (val !== '') {\n      dispatch(chatAction.sendMessage({\n        receiver: currentRoom.user,\n        val,\n        roomId,\n        sender,\n        uuid: uuid()\n      }));\n    }\n  }\n\n  function fetchMessage() {\n    console.log(content); // const lastId=content.messages[0]._id;\n\n    dispatch(chatAction.getMessagesForRoom({ ...currentRoom,\n      // lastId,\n      initialFetch: false\n    }));\n  }\n\n  useEffect(() => {\n    //get message\n    //send readMessage\n    //\n    fetchMessage();\n  }, []);\n  var avatarImg = \"https://chatscope.io/storybook/react/static/media/zoe.e31a4ff8.svg\";\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ConversationHeader, {\n      children: [/*#__PURE__*/_jsxDEV(ConversationHeader.Back, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatarImg,\n        name: \"Zoe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConversationHeader.Content, {\n        userName: \"Zoe\",\n        info: \"Active 10 mins ago\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConversationHeader.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(VoiceCallButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VideoCallButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EllipsisButton, {\n          orientation: \"vertical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      typingIndicator: /*#__PURE__*/_jsxDEV(TypingIndicator, {\n        content: \"Zoe is typing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 43\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(MessageSeparator, {\n        content: \"Saturday, 30 November 2019\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        model: {\n          message: \"Hello my friend\",\n          sentTime: \"15 mins ago\",\n          sender: \"Zoe\",\n          direction: \"incoming\",\n          position: \"single\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: avatarImg,\n          name: \"Zoe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        model: {\n          message: \"Hello my friend\",\n          sentTime: \"15 mins ago\",\n          sender: \"Patrik\",\n          direction: \"outgoing\",\n          position: \"single\"\n        },\n        avatarSpacer: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        model: {\n          message: \"Hello my friend\",\n          sentTime: \"15 mins ago\",\n          sender: \"Zoe\",\n          direction: \"incoming\",\n          position: \"first\"\n        },\n        avatarSpacer: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      placeholder: \"Type message here\",\n      value: messageInputValue,\n      onChange: val => setMessageInputValue(val),\n      onSend: val => onSubmitMessage(val)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MessContent, \"AJK0Wii0/cHOaevlNLOXrJnBHKI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = MessContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessContent\");","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/pages/message/messegerContent.js"],"names":["React","useEffect","useState","makeStyles","uuid","ConversationHeader","Avatar","VoiceCallButton","VideoCallButton","ChatContainer","TypingIndicator","MessageSeparator","EllipsisButton","MessageList","Message","MessageInput","useDispatch","useSelector","chatAction","chat","useStyles","theme","formMessage","height","position","nonePadding","padding","MessContent","props","messageInputValue","setMessageInputValue","dispatch","userId","state","currentRoom","members","_id","profilePicture","photo","callingModal","socket","roomId","content","onSubmitMessage","val","console","log","sendMessage","receiver","user","sender","fetchMessage","getMessagesForRoom","initialFetch","avatarImg","message","sentTime","direction"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport uuid from \"uuid/v4\";\r\nimport {\r\n    ConversationHeader,\r\n    Avatar,\r\n    VoiceCallButton,\r\n    VideoCallButton,\r\n    ChatContainer,\r\n    TypingIndicator,\r\n    MessageSeparator,\r\n    EllipsisButton,\r\n    MessageList,\r\n    Message,\r\n    MessageInput,\r\n} from \"@chatscope/chat-ui-kit-react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { chatAction } from '../../actions/chat.action';\r\nimport { chat } from '../../reducers/chat.reducer';\r\n// import { MessageInput } from './messageInput';\r\nconst useStyles = makeStyles((theme) => ({\r\n    formMessage: {\r\n        height: \"750px\",\r\n        position: \"relative\"\r\n    },\r\n    nonePadding: {\r\n        padding: \"0!important\"\r\n    }\r\n}));\r\n\r\nexport function MessContent(props) {\r\n    const [messageInputValue, setMessageInputValue] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const userId = useSelector(state => state.chat.currentRoom.members[0]._id);\r\n    const profilePicture = useSelector(state => state.chat.currentRoom.members[0].photo);\r\n    const callingModal = useSelector(state => state.chat.callingModal);\r\n    const socket = useSelector(state => state.socket.socket);\r\n    const currentRoom = useSelector(state => state.chat.currentRoom);\r\n    const roomId = useSelector(state => state.chat.roomId);\r\n    const content=props.content;\r\n    function onSubmitMessage(val) {\r\n        console.log(val)\r\n        if(val!==''){\r\n            dispatch(chatAction.sendMessage({\r\n                receiver: currentRoom.user,\r\n                val,\r\n                roomId,\r\n                sender,\r\n                uuid: uuid() \r\n            }))\r\n        }\r\n    }\r\n\r\n    function fetchMessage() {\r\n        console.log(content)\r\n        // const lastId=content.messages[0]._id;\r\n        dispatch(chatAction.getMessagesForRoom(\r\n            {\r\n                ...currentRoom,\r\n                // lastId,\r\n                initialFetch: false\r\n            }\r\n        ))\r\n    }\r\n\r\n    useEffect(() => {\r\n        //get message\r\n        //send readMessage\r\n        //\r\n        fetchMessage()\r\n    }, [])\r\n    var avatarImg = \"https://chatscope.io/storybook/react/static/media/zoe.e31a4ff8.svg\";\r\n    return (\r\n        <ChatContainer>\r\n            <ConversationHeader>\r\n                <ConversationHeader.Back />\r\n                <Avatar src={avatarImg} name=\"Zoe\" />\r\n                <ConversationHeader.Content userName=\"Zoe\" info=\"Active 10 mins ago\" />\r\n                <ConversationHeader.Actions>\r\n                    <VoiceCallButton />\r\n                    <VideoCallButton />\r\n                    <EllipsisButton orientation=\"vertical\" />\r\n                </ConversationHeader.Actions>\r\n            </ConversationHeader>\r\n            <MessageList typingIndicator={<TypingIndicator content=\"Zoe is typing\" />}>\r\n                <MessageSeparator content=\"Saturday, 30 November 2019\" />\r\n                <Message model={{\r\n                    message: \"Hello my friend\",\r\n                    sentTime: \"15 mins ago\",\r\n                    sender: \"Zoe\",\r\n                    direction: \"incoming\",\r\n                    position: \"single\"\r\n                }}>\r\n                    <Avatar src={avatarImg} name=\"Zoe\" />\r\n                </Message>\r\n                <Message model={{\r\n                    message: \"Hello my friend\",\r\n                    sentTime: \"15 mins ago\",\r\n                    sender: \"Patrik\",\r\n                    direction: \"outgoing\",\r\n                    position: \"single\"\r\n                }} avatarSpacer />\r\n                <Message model={{\r\n                    message: \"Hello my friend\",\r\n                    sentTime: \"15 mins ago\",\r\n                    sender: \"Zoe\",\r\n                    direction: \"incoming\",\r\n                    position: \"first\"\r\n                }} avatarSpacer />\r\n            </MessageList>\r\n            <MessageInput placeholder=\"Type message here\" value={messageInputValue} onChange={val => setMessageInputValue(val)} onSend={(val) => onSubmitMessage(val)} />\r\n        </ChatContainer>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}