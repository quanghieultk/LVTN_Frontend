{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\LVTN\\\\cuisine-net\\\\src\\\\components\\\\profileTabList\\\\AllPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FriendList from '../../components/friendList/FriendList';\nimport { WhatDoYouThing } from '../../components/whatdoyouthing/WhatDoYouThing';\nimport { userService } from './../../services/user.service';\nimport { postService } from './../../services/post.service';\nimport { Post } from '../../components/post/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({}));\nexport function AllPost(props) {\n  _s();\n\n  const idUser = props.idUser;\n  console.log(idUser);\n  const [dataPost, setDataPost] = useState([]);\n  let mounted = true;\n  useEffect(() => {\n    postService.getPostByUser(idUser).then(items => {\n      if (mounted) {\n        setDataPost(items);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dataPost ? dataPost.map(value => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        value: value\n      }, value._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 28\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllPost, \"LacoT1TXFG2s1xv1BG4YdUljEgQ=\");\n\n_c = AllPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPost\");","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/components/profileTabList/AllPost.js"],"names":["React","useEffect","useState","useSelector","makeStyles","FriendList","WhatDoYouThing","userService","postService","Post","useStyles","theme","AllPost","props","idUser","console","log","dataPost","setDataPost","mounted","getPostByUser","then","items","map","value","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,cAAT,QAA+B,gDAA/B;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,IAAT,QAAqB,4BAArB;;AACA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY,EAAZ,CAAD,CAA5B;AAIA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAC3B,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAIiB,OAAO,GAAG,IAAd;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,WAAW,CAACY,aAAZ,CAA0BN,MAA1B,EACKO,IADL,CACUC,KAAK,IAAI;AACX,UAAIH,OAAJ,EAAa;AACTD,QAAAA,WAAW,CAACI,KAAD,CAAX;AACH;AACJ,KALL;AAMA,WAAO,MAAMH,OAAO,GAAG,KAAvB;AACH,GARQ,EAQN,EARM,CAAT;AAWA,sBACI;AAAA,cAIQF,QAAQ,GAAGA,QAAQ,CAACM,GAAT,CAAcC,KAAD,IAAW;AAC/B,0BAAO,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEA;AAAb,SAAyBA,KAAK,CAACC,GAA/B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFU,CAAH,GAEH;AANb;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA5Beb,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FriendList from '../../components/friendList/FriendList';\r\nimport { WhatDoYouThing } from '../../components/whatdoyouthing/WhatDoYouThing';\r\nimport { userService } from './../../services/user.service';\r\nimport { postService } from './../../services/post.service';\r\nimport { Post } from '../../components/post/Post';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\nexport function AllPost(props) {\r\n    const idUser = props.idUser;\r\n    console.log(idUser);\r\n    const [dataPost, setDataPost] = useState([]);\r\n    let mounted = true;\r\n\r\n    useEffect(() => {\r\n        postService.getPostByUser(idUser)\r\n            .then(items => {\r\n                if (mounted) {\r\n                    setDataPost(items);\r\n                }\r\n            })\r\n        return () => mounted = false;\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            \r\n            \r\n            {\r\n                dataPost ? dataPost.map((value) => {\r\n                    return <Post value={value} key={value._id} ></Post>;\r\n                }) : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}