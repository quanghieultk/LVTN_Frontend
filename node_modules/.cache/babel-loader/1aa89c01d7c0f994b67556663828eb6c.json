{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _awaitAsyncGenerator from \"@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"@babel/runtime/helpers/esm/wrapAsyncGenerator\";\nimport _asyncIterator from \"@babel/runtime/helpers/esm/asyncIterator\";\nimport { isBrowser, nodeVersion, toArrayBuffer } from '@loaders.gl/loader-utils';\nexport function makeStreamIterator(stream) {\n  if (isBrowser || nodeVersion >= 10) {\n    if (typeof stream[Symbol.asyncIterator] === 'function') {\n      return makeToArrayBufferIterator(stream);\n    }\n\n    if (typeof stream.getIterator === 'function') {\n      return stream.getIterator();\n    }\n  }\n\n  return isBrowser ? makeBrowserStreamIterator(stream) : makeNodeStreamIterator(stream);\n}\n\nfunction makeToArrayBufferIterator(_x) {\n  return _makeToArrayBufferIterator.apply(this, arguments);\n}\n\nfunction _makeToArrayBufferIterator() {\n  _makeToArrayBufferIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee(asyncIterator) {\n    var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, chunk;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context.prev = 2;\n            _iterator = _asyncIterator(asyncIterator);\n\n          case 4:\n            _context.next = 6;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 6:\n            _step = _context.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context.next = 10;\n            return _awaitAsyncGenerator(_step.value);\n\n          case 10:\n            _value = _context.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context.next = 18;\n              break;\n            }\n\n            chunk = _value;\n            _context.next = 15;\n            return toArrayBuffer(chunk);\n\n          case 15:\n            _iteratorNormalCompletion = true;\n            _context.next = 4;\n            break;\n\n          case 18:\n            _context.next = 24;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 24:\n            _context.prev = 24;\n            _context.prev = 25;\n\n            if (!(!_iteratorNormalCompletion && _iterator[\"return\"] != null)) {\n              _context.next = 29;\n              break;\n            }\n\n            _context.next = 29;\n            return _awaitAsyncGenerator(_iterator[\"return\"]());\n\n          case 29:\n            _context.prev = 29;\n\n            if (!_didIteratorError) {\n              _context.next = 32;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 32:\n            return _context.finish(29);\n\n          case 33:\n            return _context.finish(24);\n\n          case 34:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 20, 24, 34], [25,, 29, 33]]);\n  }));\n  return _makeToArrayBufferIterator.apply(this, arguments);\n}\n\nfunction makeBrowserStreamIterator(_x2) {\n  return _makeBrowserStreamIterator.apply(this, arguments);\n}\n\nfunction _makeBrowserStreamIterator() {\n  _makeBrowserStreamIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee2(stream) {\n    var reader, _yield$_awaitAsyncGen, done, value;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            reader = stream.getReader();\n            _context2.prev = 1;\n\n          case 2:\n            if (!true) {\n              _context2.next = 14;\n              break;\n            }\n\n            _context2.next = 5;\n            return _awaitAsyncGenerator(reader.read());\n\n          case 5:\n            _yield$_awaitAsyncGen = _context2.sent;\n            done = _yield$_awaitAsyncGen.done;\n            value = _yield$_awaitAsyncGen.value;\n\n            if (!done) {\n              _context2.next = 10;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 10:\n            _context2.next = 12;\n            return toArrayBuffer(value);\n\n          case 12:\n            _context2.next = 2;\n            break;\n\n          case 14:\n            _context2.next = 19;\n            break;\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](1);\n            reader.releaseLock();\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 16]]);\n  }));\n  return _makeBrowserStreamIterator.apply(this, arguments);\n}\n\nfunction makeNodeStreamIterator(_x3) {\n  return _makeNodeStreamIterator.apply(this, arguments);\n}\n\nfunction _makeNodeStreamIterator() {\n  _makeNodeStreamIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee3(stream) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _awaitAsyncGenerator(stream);\n\n          case 2:\n            stream = _context3.sent;\n\n          case 3:\n            if (!true) {\n              _context3.next = 15;\n              break;\n            }\n\n            data = stream.read();\n\n            if (!(data !== null)) {\n              _context3.next = 9;\n              break;\n            }\n\n            _context3.next = 8;\n            return toArrayBuffer(data);\n\n          case 8:\n            return _context3.abrupt(\"continue\", 3);\n\n          case 9:\n            if (!stream._readableState.ended) {\n              _context3.next = 11;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 11:\n            _context3.next = 13;\n            return _awaitAsyncGenerator(onceReadable(stream));\n\n          case 13:\n            _context3.next = 3;\n            break;\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _makeNodeStreamIterator.apply(this, arguments);\n}\n\nfunction onceReadable(_x4) {\n  return _onceReadable.apply(this, arguments);\n}\n\nfunction _onceReadable() {\n  _onceReadable = _asyncToGenerator(_regeneratorRuntime.mark(function _callee4(stream) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", new Promise(function (resolve) {\n              stream.once('readable', resolve);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _onceReadable.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../../src/iterator-utils/make-iterator/stream-iterator.js"],"names":["isBrowser","nodeVersion","stream","Symbol","makeToArrayBufferIterator","makeBrowserStreamIterator","makeNodeStreamIterator","chunk","toArrayBuffer","reader","done","value","data","onceReadable"],"mappings":"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","sourcesContent":["import {isBrowser, nodeVersion, toArrayBuffer} from '@loaders.gl/loader-utils';\n\nexport function makeStreamIterator(stream) {\n  // Hacky test for node version to ensure we don't call bad polyfills\n  if (isBrowser || nodeVersion >= 10) {\n    // NODE 10+: stream is an asyncIterator\n    if (typeof stream[Symbol.asyncIterator] === 'function') {\n      return makeToArrayBufferIterator(stream);\n    }\n\n    // WhatWG: stream is supposed to have a `getIterator` method\n    if (typeof stream.getIterator === 'function') {\n      return stream.getIterator();\n    }\n  }\n\n  return isBrowser ? makeBrowserStreamIterator(stream) : makeNodeStreamIterator(stream);\n}\n\n/** Coerce each chunk to ArrayBuffer */\nasync function* makeToArrayBufferIterator(asyncIterator) {\n  for await (const chunk of asyncIterator) {\n    yield toArrayBuffer(chunk);\n  }\n}\n\n// BROWSER IMPLEMENTATION\n// See https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate\n\nasync function* makeBrowserStreamIterator(stream) {\n  // In the brower, we first need to get a lock on the stream\n  const reader = stream.getReader();\n\n  try {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      // Read from the stream\n      // value is a Uint8Array\n      const {done, value} = await reader.read();\n      // Exit if we're done\n      if (done) {\n        return;\n      }\n      // Else yield the chunk\n      yield toArrayBuffer(value);\n    }\n  } catch (error) {\n    // TODO - examples makes it look like this should always be called,\n    // but that generates exceptions so only call it if we do not reach the end\n    reader.releaseLock();\n  }\n}\n\n// NODE <10 IMPLEMENTATION\n// See https://github.com/bustle/streaming-iterables, MIT license\n\nasync function* makeNodeStreamIterator(stream) {\n  // Node createStream will return promises to handle http requests\n  stream = await stream;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const data = stream.read();\n    if (data !== null) {\n      yield toArrayBuffer(data);\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (stream._readableState.ended) {\n      return;\n    }\n    await onceReadable(stream);\n  }\n}\n\nasync function onceReadable(stream) {\n  return new Promise(resolve => {\n    stream.once('readable', resolve);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}