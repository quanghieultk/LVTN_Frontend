{"ast":null,"code":"import { userConstants } from '../constants/user.constants';\nimport { userService } from '../services/user.service';\nimport { alertActions } from './alert.actions';\nimport { history } from './../helpers/history';\nexport const userActions = {\n  login,\n  logout,\n  register,\n  getAll,\n  delete: _delete\n};\n\nfunction login(username, password, from) {\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    userService.login(username, password).then(user => {\n      window.localStorage.setItem('user', JSON.stringify(user === null || user === void 0 ? void 0 : user.data));\n      dispatch(success(user));\n      history.push(from);\n    }).catch(error => {\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    userService.register(user).then(user => {\n      dispatch(success());\n      history.push('/signIn');\n      dispatch(alertActions.success('Registration successful'));\n    }, error => {\n      console.log(error);\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    userService.getAll().then(users => dispatch(success(users)), error => dispatch(failure(error.toString())));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return dispatch => {\n    dispatch(request(id));\n    userService.delete(id).then(user => dispatch(success(id)), error => dispatch(failure(id, error.toString())));\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/actions/user.actions.js"],"names":["userConstants","userService","alertActions","history","userActions","login","logout","register","getAll","delete","_delete","username","password","from","dispatch","request","then","user","window","localStorage","setItem","JSON","stringify","data","success","push","catch","error","failure","toString","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","console","log","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants/user.constants';\r\nimport { userService } from '../services/user.service';\r\nimport { alertActions } from './alert.actions';\r\nimport { history } from './../helpers/history';\r\nexport const userActions = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getAll,\r\n    delete: _delete\r\n};\r\n\r\nfunction login(username, password,from) {\r\n    return  dispatch =>{\r\n        dispatch(request({ username}));\r\n        userService.login(username, password)\r\n            .then(  \r\n                user => {\r\n                    window.localStorage.setItem('user',JSON.stringify(user?.data)) ;\r\n                    dispatch(success(user));\r\n                    history.push(from);\r\n                }\r\n            ).catch(\r\n                error => {\r\n                    dispatch(failure(error.toString()));\r\n                    dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );   \r\n    };\r\n\r\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\n\r\nfunction logout() {\r\n    userService.logout();\r\n    return { type: userConstants.LOGOUT };\r\n}\r\n\r\nfunction register(user) {\r\n    return dispatch => {\r\n        dispatch(request(user));\r\n\r\n        userService.register(user)\r\n            .then(\r\n                user => { \r\n                    dispatch(success());\r\n                    history.push('/signIn');\r\n                    dispatch(alertActions.success('Registration successful'));\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                    dispatch(failure(error.toString()));\r\n                    dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\r\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\r\n}\r\n\r\nfunction getAll() {\r\n    return dispatch => {\r\n        dispatch(request());\r\n\r\n        userService.getAll()\r\n            .then(\r\n                users => dispatch(success(users)),\r\n                error => dispatch(failure(error.toString()))\r\n            );\r\n    };\r\n\r\n    function request() { return { type: userConstants.GETALL_REQUEST } }\r\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\r\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nfunction _delete(id) {\r\n    return dispatch => {\r\n        dispatch(request(id));\r\n\r\n        userService.delete(id)\r\n            .then(\r\n                user => dispatch(success(id)),\r\n                error => dispatch(failure(id, error.toString()))\r\n            );\r\n    };\r\n\r\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\r\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\r\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\r\n}"]},"metadata":{},"sourceType":"module"}