{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\LVTN\\\\cuisine-net\\\\src\\\\services\\\\gmap.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport ReactMapGL, { GeolocateControl, Marker } from 'react-map-gl';\nimport Geocoder from \"react-map-gl-geocoder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n\n  var lat = 0;\n  var long = 0;\n  const [viewport, setViewport] = useState({\n    width: 400,\n    height: 400,\n    latitude: 0,\n    longitude: 0,\n    zoom: 8\n  });\n  navigator.geolocation.getCurrentPosition(position => {\n    setViewport({\n      width: 400,\n      height: 400,\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n      zoom: 8\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewport,\n    onViewportChange: nextViewport => setViewport(nextViewport),\n    mapboxApiAccessToken: \"pk.eyJ1IjoidG9hbmRvIiwiYSI6ImNrbThscTh4cjBrNnQycHF5MWJqd29jaDQifQ.LNubsbmqGfZhCCRymL-A2g\",\n    children: [/*#__PURE__*/_jsxDEV(Marker, {\n      latitude: lat,\n      longitude: long,\n      offsetLeft: -20,\n      offsetTop: -10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Geocoder, {\n      mapRef: mapRef,\n      onViewportChange: handleGeocoderViewportChange,\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      position: \"top-left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Map, \"Uyq5asZNiGZsahkBI2PR4/8uTTE=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/services/gmap.js"],"names":["React","useState","ReactMapGL","GeolocateControl","Marker","Geocoder","Map","lat","long","viewport","setViewport","width","height","latitude","longitude","zoom","navigator","geolocation","getCurrentPosition","position","coords","nextViewport","mapRef","handleGeocoderViewportChange","MAPBOX_TOKEN"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,IAAqBC,gBAArB,EAAuCC,MAAvC,QAAqD,cAArD;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE7B,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACxCU,IAAAA,KAAK,EAAE,GADiC;AAExCC,IAAAA,MAAM,EAAE,GAFgC;AAGxCC,IAAAA,QAAQ,EAAE,CAH8B;AAIxCC,IAAAA,SAAS,EAAE,CAJ6B;AAKxCC,IAAAA,IAAI,EAAE;AALkC,GAAD,CAAxC;AAOAC,EAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAI;AACpDT,IAAAA,WAAW,CAAC;AACXC,MAAAA,KAAK,EAAE,GADI;AAEXC,MAAAA,MAAM,EAAE,GAFG;AAGXC,MAAAA,QAAQ,EAAEM,QAAQ,CAACC,MAAT,CAAgBP,QAHf;AAIXC,MAAAA,SAAS,EAAEK,QAAQ,CAACC,MAAT,CAAgBN,SAJhB;AAKXC,MAAAA,IAAI,EAAE;AALK,KAAD,CAAX;AAOA,GARD;AAUA,sBACC,QAAC,UAAD,OACKN,QADL;AAEC,IAAA,gBAAgB,EAAEY,YAAY,IAAIX,WAAW,CAACW,YAAD,CAF9C;AAGC,IAAA,oBAAoB,EAAC,0FAHtB;AAAA,4BAKC,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEd,GAAlB;AAAuB,MAAA,SAAS,EAAEC,IAAlC;AAAwC,MAAA,UAAU,EAAE,CAAC,EAArD;AAAyD,MAAA,SAAS,EAAE,CAAC;AAArE;AAAA;AAAA;AAAA;AAAA,YALD,eAOC,QAAC,QAAD;AACC,MAAA,MAAM,EAAEc,MADT;AAEC,MAAA,gBAAgB,EAAEC,4BAFnB;AAGC,MAAA,oBAAoB,EAAEC,YAHvB;AAIC,MAAA,QAAQ,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;;GArCuBlB,G;;KAAAA,G","sourcesContent":["import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport ReactMapGL, { GeolocateControl, Marker } from 'react-map-gl';\r\nimport Geocoder from \"react-map-gl-geocoder\";\r\nexport default function Map() {\r\n\r\n\tvar lat = 0;\r\n\tvar long = 0;\r\n\tconst [viewport, setViewport] = useState({\r\n\t\twidth: 400,\r\n\t\theight: 400,\r\n\t\tlatitude: 0,\r\n\t\tlongitude: 0,\r\n\t\tzoom: 8\r\n\t});\r\n\tnavigator.geolocation.getCurrentPosition(position => {\r\n\t\tsetViewport({\r\n\t\t\twidth: 400,\r\n\t\t\theight: 400,\r\n\t\t\tlatitude: position.coords.latitude,\r\n\t\t\tlongitude: position.coords.longitude,\r\n\t\t\tzoom: 8\r\n\t\t})\r\n\t})\r\n\r\n\treturn (\r\n\t\t<ReactMapGL\r\n\t\t\t{...viewport}\r\n\t\t\tonViewportChange={nextViewport => setViewport(nextViewport)}\r\n\t\t\tmapboxApiAccessToken='pk.eyJ1IjoidG9hbmRvIiwiYSI6ImNrbThscTh4cjBrNnQycHF5MWJqd29jaDQifQ.LNubsbmqGfZhCCRymL-A2g'\r\n\t\t>\r\n\t\t\t<Marker latitude={lat} longitude={long} offsetLeft={-20} offsetTop={-10}>\r\n\t\t\t</Marker>\r\n\t\t\t<Geocoder\r\n\t\t\t\tmapRef={mapRef}\r\n\t\t\t\tonViewportChange={handleGeocoderViewportChange}\r\n\t\t\t\tmapboxApiAccessToken={MAPBOX_TOKEN}\r\n\t\t\t\tposition=\"top-left\"\r\n\t\t\t/>\r\n\t\t</ReactMapGL>\r\n\t);\r\n}"]},"metadata":{},"sourceType":"module"}