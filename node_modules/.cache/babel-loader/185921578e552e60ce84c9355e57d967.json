{"ast":null,"code":"import { userConstants } from '../constants/user.constants';\nimport { userService } from '../services/user.service';\nimport { alertActions } from './alert.actions';\nimport { history } from '../helpers/history';\nimport axios from 'axios';\nexport const userActions = {\n  login,\n  logout,\n  register,\n  getAll,\n  delete: _delete\n};\n\nfunction login(username, password) {\n  // setInterval(3000);\n  let email = username;\n  return dispatch => async function () {\n    await axios.post('/users/signin', {\n      \"email\": email,\n      \"password\": password\n    }); // dispatch(request({ email }));\n    // userService.login(email, password)\n    //     .then(  \n    //         user => { \n    //             alert(JSON.stringify(user));\n    //             dispatch(success(user));\n    //             history.push('/');\n    //         },\n    //         error => {\n    //             dispatch(failure(error.toString()));\n    //             dispatch(alertActions.error(error.toString()));\n    //         }\n    //     ).catch(err=>{\n    //         alert(\"err1\");\n    //     });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  userService.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    userService.register(user).then(user => {\n      dispatch(success());\n      history.push('/signIn');\n      dispatch(alertActions.success('Registration successful'));\n    }, error => {\n      console.log(error);\n      dispatch(failure(error.toString()));\n      dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    userService.getAll().then(users => dispatch(success(users)), error => dispatch(failure(error.toString())));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return dispatch => {\n    dispatch(request(id));\n    userService.delete(id).then(user => dispatch(success(id)), error => dispatch(failure(id, error.toString())));\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/actions/user.actions.js"],"names":["userConstants","userService","alertActions","history","axios","userActions","login","logout","register","getAll","delete","_delete","username","password","email","dispatch","post","request","user","type","LOGIN_REQUEST","success","LOGIN_SUCCESS","failure","error","LOGIN_FAILURE","LOGOUT","then","push","console","log","toString","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants/user.constants';\r\nimport { userService } from '../services/user.service';\r\nimport { alertActions } from './alert.actions';\r\nimport { history } from '../helpers/history';\r\nimport axios from 'axios';\r\n\r\nexport const userActions = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getAll,\r\n    delete: _delete\r\n};\r\n\r\nfunction login(username, password) {\r\n    // setInterval(3000);\r\n    let email=username;\r\n    return dispatch => async function () {await axios.post('/users/signin', {\r\n                \"email\" : email, \r\n                \"password\": password\r\n            }\r\n        )\r\n        // dispatch(request({ email }));\r\n        // userService.login(email, password)\r\n        //     .then(  \r\n        //         user => { \r\n        //             alert(JSON.stringify(user));\r\n        //             dispatch(success(user));\r\n        //             history.push('/');\r\n        //         },\r\n        //         error => {\r\n        //             dispatch(failure(error.toString()));\r\n        //             dispatch(alertActions.error(error.toString()));\r\n        //         }\r\n        //     ).catch(err=>{\r\n        //         alert(\"err1\");\r\n        //     });\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\r\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\r\n}\r\n\r\nfunction logout() {\r\n    userService.logout();\r\n    return { type: userConstants.LOGOUT };\r\n}\r\n\r\nfunction register(user) {\r\n    return dispatch => {\r\n        dispatch(request(user));\r\n\r\n        userService.register(user)\r\n            .then(\r\n                user => { \r\n                    dispatch(success());\r\n                    history.push('/signIn');\r\n                    dispatch(alertActions.success('Registration successful'));\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                    dispatch(failure(error.toString()));\r\n                    dispatch(alertActions.error(error.toString()));\r\n                }\r\n            );\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\r\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\r\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\r\n}\r\n\r\nfunction getAll() {\r\n    return dispatch => {\r\n        dispatch(request());\r\n\r\n        userService.getAll()\r\n            .then(\r\n                users => dispatch(success(users)),\r\n                error => dispatch(failure(error.toString()))\r\n            );\r\n    };\r\n\r\n    function request() { return { type: userConstants.GETALL_REQUEST } }\r\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\r\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nfunction _delete(id) {\r\n    return dispatch => {\r\n        dispatch(request(id));\r\n\r\n        userService.delete(id)\r\n            .then(\r\n                user => dispatch(success(id)),\r\n                error => dispatch(failure(id, error.toString()))\r\n            );\r\n    };\r\n\r\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\r\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\r\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\r\n}"]},"metadata":{},"sourceType":"module"}