{"ast":null,"code":"'use strict';\n\nclass StringUtils {\n  trimPropertyName(value) {\n    return value.replace(/\\s/g, '');\n  }\n\n  getValueFormatByType(value) {\n    if (value === undefined || value === '') {\n      return String();\n    } //is Number\n\n\n    let isNumber = !isNaN(value);\n\n    if (isNumber) {\n      return Number(value);\n    } // is Boolean\n\n\n    if (value === \"true\" || value === \"false\") {\n      return JSON.parse(value.toLowerCase());\n    }\n\n    return String(value);\n  }\n\n  hasContent(values) {\n    if (values.length > 0) {\n      for (let i = 0; i < values.length; i++) {\n        if (values[i]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n}\n\nmodule.exports = new StringUtils();","map":{"version":3,"sources":["D:/LVTN/deploy_frontend/DEPLOYFRONTEND/node_modules/convert-csv-to-json/src/util/stringUtils.js"],"names":["StringUtils","trimPropertyName","value","replace","getValueFormatByType","undefined","String","isNumber","isNaN","Number","JSON","parse","toLowerCase","hasContent","values","length","i","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,WAAN,CAAkB;AAEdC,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACpB,WAAOA,KAAK,CAACC,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAP;AACH;;AAEDC,EAAAA,oBAAoB,CAACF,KAAD,EAAQ;AACxB,QAAGA,KAAK,KAAKG,SAAV,IAAuBH,KAAK,KAAK,EAApC,EAAuC;AACnC,aAAOI,MAAM,EAAb;AACH,KAHuB,CAIxB;;;AACA,QAAIC,QAAQ,GAAG,CAACC,KAAK,CAACN,KAAD,CAArB;;AACA,QAAIK,QAAJ,EAAc;AACV,aAAOE,MAAM,CAACP,KAAD,CAAb;AACH,KARuB,CASxB;;;AACA,QAAGA,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,OAAjC,EAAyC;AACrC,aAAOQ,IAAI,CAACC,KAAL,CAAWT,KAAK,CAACU,WAAN,EAAX,CAAP;AACH;;AACD,WAAON,MAAM,CAACJ,KAAD,CAAb;AACH;;AAEDW,EAAAA,UAAU,CAACC,MAAD,EAAS;AACf,QAAIA,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;AACnB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACC,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;AACpC,YAAIF,MAAM,CAACE,CAAD,CAAV,EAAe;AACX,iBAAO,IAAP;AACH;AACJ;AACJ;;AACD,WAAO,KAAP;AACH;;AA/Ba;;AAkClBC,MAAM,CAACC,OAAP,GAAiB,IAAIlB,WAAJ,EAAjB","sourcesContent":["'use strict';\n\nclass StringUtils {\n\n    trimPropertyName(value) {\n        return value.replace(/\\s/g, '');\n    }\n\n    getValueFormatByType(value) {\n        if(value === undefined || value === ''){\n            return String();\n        }\n        //is Number\n        let isNumber = !isNaN(value);\n        if (isNumber) {\n            return Number(value);\n        }\n        // is Boolean\n        if(value === \"true\" || value === \"false\"){\n            return JSON.parse(value.toLowerCase());\n        }\n        return String(value);\n    }\n\n    hasContent(values) {\n        if (values.length > 0) {\n            for (let i = 0; i < values.length; i++) {\n                if (values[i]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n\nmodule.exports = new StringUtils();\n"]},"metadata":{},"sourceType":"script"}