{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _awaitAsyncGenerator from \"@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"@babel/runtime/helpers/esm/wrapAsyncGenerator\";\nimport _asyncIterator from \"@babel/runtime/helpers/esm/asyncIterator\";\nexport function makeTransformIterator(_x, _x2, _x3) {\n  return _makeTransformIterator.apply(this, arguments);\n}\n\nfunction _makeTransformIterator() {\n  _makeTransformIterator = _wrapAsyncGenerator(_regeneratorRuntime.mark(function _callee(asyncIterator, IncrementalTransform, options) {\n    var transform, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, chunk, _output, output;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            transform = new IncrementalTransform(options);\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context.prev = 3;\n            _iterator = _asyncIterator(asyncIterator);\n\n          case 5:\n            _context.next = 7;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 7:\n            _step = _context.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context.next = 11;\n            return _awaitAsyncGenerator(_step.value);\n\n          case 11:\n            _value = _context.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context.next = 23;\n              break;\n            }\n\n            chunk = _value;\n            _context.next = 16;\n            return _awaitAsyncGenerator(transform.write(chunk));\n\n          case 16:\n            _output = _context.sent;\n\n            if (!_output) {\n              _context.next = 20;\n              break;\n            }\n\n            _context.next = 20;\n            return _output;\n\n          case 20:\n            _iteratorNormalCompletion = true;\n            _context.next = 5;\n            break;\n\n          case 23:\n            _context.next = 29;\n            break;\n\n          case 25:\n            _context.prev = 25;\n            _context.t0 = _context[\"catch\"](3);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 29:\n            _context.prev = 29;\n            _context.prev = 30;\n\n            if (!(!_iteratorNormalCompletion && _iterator[\"return\"] != null)) {\n              _context.next = 34;\n              break;\n            }\n\n            _context.next = 34;\n            return _awaitAsyncGenerator(_iterator[\"return\"]());\n\n          case 34:\n            _context.prev = 34;\n\n            if (!_didIteratorError) {\n              _context.next = 37;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 37:\n            return _context.finish(34);\n\n          case 38:\n            return _context.finish(29);\n\n          case 39:\n            _context.next = 41;\n            return _awaitAsyncGenerator(transform.end());\n\n          case 41:\n            output = _context.sent;\n\n            if (!output) {\n              _context.next = 45;\n              break;\n            }\n\n            _context.next = 45;\n            return output;\n\n          case 45:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 25, 29, 39], [30,, 34, 38]]);\n  }));\n  return _makeTransformIterator.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../../src/lib/iterator-utils/make-transform-iterator.js"],"names":["transform","chunk","output"],"mappings":"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","sourcesContent":["export async function* makeTransformIterator(asyncIterator, IncrementalTransform, options) {\n  const transform = new IncrementalTransform(options);\n  for await (const chunk of asyncIterator) {\n    const output = await transform.write(chunk);\n    if (output) {\n      yield output;\n    }\n  }\n  const output = await transform.end();\n  if (output) {\n    yield output;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}