{"ast":null,"code":"import { authHeader } from '../helpers/auth-header';\nimport axios from 'axios';\nexport const commentService = {\n  getAllCommentPost\n};\n\nfunction getAllCommentPost(idPost) {\n  console.log(\"da vao\");\n  let config = {\n    headers: {\n      'Authorization': 'Bearer ' + \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwNzEwY2UzOGZmMzExNDkzNGE2ZTAxMSIsImlhdCI6MTYxODAyOTMzNywiZXhwIjoxNjI1ODA1MzM3fQ.jYHgIgH7uaQtW7hOHcHCbxJR3nS1rK9Tvon14sy1b_E\"\n    }\n  };\n  return axios.get(`http://localhost:8000/api/comments/commentPost/${idPost}`, config).then(res => res.data.data.data).catch(error => console.log(error));\n}\n\nfunction login(username, password) {\n  return axios({\n    method: 'post',\n    url: '/users/signin',\n    data: {\n      \"email\": username,\n      \"password\": password\n    }\n  }).then(handleResponse).then(user => {\n    localStorage.setItem('user', JSON.stringify(user));\n    return JSON.stringify(user);\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('user');\n}\n\nfunction getAll() {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`http://localhost:8000/users`, requestOptions).then(handleResponse);\n}\n\nfunction getById(id) {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction register(user) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`http://localhost:8000/users/signup`, requestOptions).then(handleResponse);\n}\n\nfunction update(user) {\n  const requestOptions = {\n    method: 'PUT',\n    headers: { ...authHeader(),\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`http://localhost:8000/users/${user.id}`, requestOptions).then(handleResponse);\n  ;\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: authHeader()\n  };\n  return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n  if (!response.status === 200) {\n    if (response.status === 401) {\n      // auto logout if 401 response returned from api\n      logout();\n      window.location.reload(true);\n    }\n\n    const error = response.message;\n    return Promise.reject(error);\n  }\n\n  return response;\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/services/comment.service.js"],"names":["authHeader","axios","commentService","getAllCommentPost","idPost","console","log","config","headers","get","then","res","data","catch","error","login","username","password","method","url","handleResponse","user","localStorage","setItem","JSON","stringify","logout","removeItem","getAll","requestOptions","fetch","getById","id","register","body","update","_delete","response","status","window","location","reload","message","Promise","reject"],"mappings":"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","sourcesContent":["import { authHeader } from '../helpers/auth-header';\r\nimport axios from 'axios';\r\nexport const commentService = {\r\n    getAllCommentPost,\r\n};\r\nfunction getAllCommentPost(idPost) {\r\n    console.log(\"da vao\");\r\n    let config = {\r\n        headers: {\r\n            'Authorization': 'Bearer ' + \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwNzEwY2UzOGZmMzExNDkzNGE2ZTAxMSIsImlhdCI6MTYxODAyOTMzNywiZXhwIjoxNjI1ODA1MzM3fQ.jYHgIgH7uaQtW7hOHcHCbxJR3nS1rK9Tvon14sy1b_E\"\r\n        }\r\n    }\r\n    return axios.get(`http://localhost:8000/api/comments/commentPost/${idPost}`, config)\r\n        .then(res =>\r\n            res.data.data.data\r\n        )\r\n        .catch(error => console.log(error));\r\n\r\n}\r\nfunction login(username, password) {\r\n    return axios({\r\n        method: 'post',\r\n        url: '/users/signin',\r\n        data: {\r\n            \"email\": username,\r\n            \"password\": password\r\n        }\r\n    })\r\n        .then(handleResponse)\r\n        .then((user) => {\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return JSON.stringify(user);\r\n        })\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction getAll() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getById(id) {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction register(user) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user)\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/signup`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction update(user) {\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user)\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/${user.id}`, requestOptions).then(handleResponse);;\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nfunction _delete(id) {\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    if (!response.status === 200) {\r\n        if (response.status === 401) {\r\n            // auto logout if 401 response returned from api\r\n            logout();\r\n            window.location.reload(true);\r\n        }\r\n\r\n        const error = response.message;\r\n        return Promise.reject(error);\r\n    }\r\n    return response;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}