{"ast":null,"code":"import { socketService } from \"../services/socket.service\";\nimport { socketConstants } from '../constants/socket.constants';\nimport { notificationActions } from \"./notification.action\";\nimport { notificatonService } from \"../services/notification.service\";\nimport { chatAction } from \"../actions/chat.action\";\nexport const socketActions = {\n  connect\n};\n\nfunction connect() {\n  return dispatch => {\n    socketService.connect().then(socket => {\n      console.log(socket);\n      dispatch(connectSocket(socket));\n      socket.on(\"sendMessage\", data => {}); //notification\n\n      socket.on(\"newNotification\", data => {\n        console.log(\"new notifgifation \");\n        notificatonService.readNotifications(data.notification._id);\n        dispatch(notificationActions.addNotification(data));\n      }); //new message\n\n      socket.on('newMessage', data => {\n        dispatch(chatActions.newMessage(data));\n      }); //read message\n      //new user\n      //typing\n      //stoppedTyping\n    });\n  };\n\n  function connectSocket(socket) {\n    return {\n      type: socketConstants.CONNECT,\n      socket\n    };\n  }\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/actions/socket.action.js"],"names":["socketService","socketConstants","notificationActions","notificatonService","chatAction","socketActions","connect","dispatch","then","socket","console","log","connectSocket","on","data","readNotifications","notification","_id","addNotification","chatActions","newMessage","type","CONNECT"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA;AADyB,CAAtB;;AAIP,SAASA,OAAT,GAAmB;AACf,SAAOC,QAAQ,IAAI;AACfP,IAAAA,aAAa,CAACM,OAAd,GAAwBE,IAAxB,CAA6BC,MAAM,IAAI;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAF,MAAAA,QAAQ,CAACK,aAAa,CAACH,MAAD,CAAd,CAAR;AACAA,MAAAA,MAAM,CAACI,EAAP,CAAU,aAAV,EAAyBC,IAAI,IAAI,CAEhC,CAFD,EAHmC,CAMnC;;AACAL,MAAAA,MAAM,CAACI,EAAP,CAAU,iBAAV,EAA6BC,IAAI,IAAE;AAC/BJ,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAR,QAAAA,kBAAkB,CAACY,iBAAnB,CAAqCD,IAAI,CAACE,YAAL,CAAkBC,GAAvD;AACAV,QAAAA,QAAQ,CAACL,mBAAmB,CAACgB,eAApB,CAAoCJ,IAApC,CAAD,CAAR;AACH,OAJD,EAPmC,CAYnC;;AACAL,MAAAA,MAAM,CAACI,EAAP,CAAU,YAAV,EAAuBC,IAAI,IAAE;AACzBP,QAAAA,QAAQ,CAACY,WAAW,CAACC,UAAZ,CAAuBN,IAAvB,CAAD,CAAR;AACH,OAFD,EAbmC,CAgBnC;AACA;AACA;AACA;AACH,KApBD;AAqBH,GAtBD;;AAwBA,WAASF,aAAT,CAAuBH,MAAvB,EAA+B;AAC3B,WAAO;AAAEY,MAAAA,IAAI,EAAEpB,eAAe,CAACqB,OAAxB;AAAiCb,MAAAA;AAAjC,KAAP;AACH;AACJ","sourcesContent":["import { socketService } from \"../services/socket.service\";\r\nimport { socketConstants } from '../constants/socket.constants';\r\nimport { notificationActions } from \"./notification.action\";\r\nimport { notificatonService } from \"../services/notification.service\";\r\nimport { chatAction } from \"../actions/chat.action\";\r\nexport const socketActions = {\r\n    connect\r\n}\r\n\r\nfunction connect() {\r\n    return dispatch => {\r\n        socketService.connect().then(socket => {\r\n            console.log(socket)\r\n            dispatch(connectSocket(socket));\r\n            socket.on(\"sendMessage\", data => {\r\n                \r\n            });\r\n            //notification\r\n            socket.on(\"newNotification\", data=>{\r\n                console.log(\"new notifgifation \");\r\n                notificatonService.readNotifications(data.notification._id);\r\n                dispatch(notificationActions.addNotification(data))\r\n            })\r\n            //new message\r\n            socket.on('newMessage',data=>{\r\n                dispatch(chatActions.newMessage(data));\r\n            })\r\n            //read message\r\n            //new user\r\n            //typing\r\n            //stoppedTyping\r\n        })\r\n    }\r\n\r\n    function connectSocket(socket) {\r\n        return { type: socketConstants.CONNECT, socket };\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}