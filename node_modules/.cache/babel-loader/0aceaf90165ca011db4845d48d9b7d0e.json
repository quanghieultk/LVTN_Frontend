{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\LVTN\\\\cuisine-net\\\\src\\\\components\\\\profileTabList\\\\AllPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { postService } from './../../services/post.service';\nimport { Post } from '../../components/post/Post';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postActions } from './../../actions/post.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({}));\nexport function AllPost(props) {\n  _s();\n\n  const idUser = props.idUser;\n  const dataUserCurrent = useSelector(state => state.authentication.user.data.user);\n  const [dataPost, setDataPost] = useState([]);\n\n  if (dataUserCurrent._id === idUser) {\n    var isOwner = true;\n  }\n\n  let mounted = true;\n  const dispatch = useDispatch();\n  const [update, setUpdate] = useState(true);\n  useEffect(() => {\n    postService.getPostByUser(idUser).then(items => {\n      setDataPost(items); // if (items != null) {\n      //     if (mounted) {\n      //         dispatch(postActions.getAllPost(items));\n      //     }\n      // }\n    });\n    return () => mounted = false;\n  }, [idUser, update]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dataPost ? dataPost.map(value => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        value: value,\n        isShow: isOwner,\n        update: update,\n        setUpdate: setUpdate\n      }, value._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }, this);\n    }) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllPost, \"GgnbUKkpBNL5GzsSxz0DaeMpdnQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AllPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPost\");","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/components/profileTabList/AllPost.js"],"names":["React","useEffect","useState","makeStyles","postService","Post","useDispatch","useSelector","postActions","useStyles","theme","AllPost","props","idUser","dataUserCurrent","state","authentication","user","data","dataPost","setDataPost","_id","isOwner","mounted","dispatch","update","setUpdate","getPostByUser","then","items","map","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,IAAT,QAAqB,4BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,6BAA5B;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY,EAAZ,CAAD,CAA5B;AAIA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAC3B,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,QAAMC,eAAe,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBC,IAArB,CAA0BC,IAA1B,CAA+BD,IAAzC,CAAnC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;;AACA,MAAIY,eAAe,CAACO,GAAhB,KAAwBR,MAA5B,EAAoC;AAChC,QAAIS,OAAO,GAAG,IAAd;AACH;;AACD,MAAIC,OAAO,GAAG,IAAd;AACA,QAAMC,QAAQ,GAAClB,WAAW,EAA1B;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAqBxB,QAAQ,CAAC,IAAD,CAAnC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,WAAW,CAACuB,aAAZ,CAA0Bd,MAA1B,EACKe,IADL,CACUC,KAAK,IAAI;AACXT,MAAAA,WAAW,CAACS,KAAD,CAAX,CADW,CAEX;AACA;AACA;AACA;AACA;AACH,KARL;AASA,WAAO,MAAMN,OAAO,GAAG,KAAvB;AACH,GAXQ,EAWN,CAACV,MAAD,EAAQY,MAAR,CAXM,CAAT;AAcA,sBACI;AAAA,cAEQN,QAAQ,GAAGA,QAAQ,CAACW,GAAT,CAAcC,KAAD,IAAW;AAC/B,0BAAO,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,KAAb;AAAoC,QAAA,MAAM,EAAET,OAA5C;AAAqD,QAAA,MAAM,EAAEG,MAA7D;AAAqE,QAAA,SAAS,EAAEC;AAAhF,SAAyBK,KAAK,CAACV,GAA/B;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFU,CAAH,GAEH;AAJb;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAjCeV,O;UAEYJ,W,EAMTD,W;;;KARHK,O","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { postService } from './../../services/post.service';\r\nimport { Post } from '../../components/post/Post';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { postActions } from './../../actions/post.action';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\nexport function AllPost(props) {\r\n    const idUser = props.idUser;\r\n    const dataUserCurrent = useSelector(state => state.authentication.user.data.user);\r\n    const [dataPost, setDataPost] = useState([]);\r\n    if (dataUserCurrent._id === idUser) {\r\n        var isOwner = true;\r\n    }\r\n    let mounted = true;\r\n    const dispatch=useDispatch()\r\n    const [update, setUpdate]= useState(true);\r\n    useEffect(() => {\r\n        postService.getPostByUser(idUser)\r\n            .then(items => {\r\n                setDataPost(items)\r\n                // if (items != null) {\r\n                //     if (mounted) {\r\n                //         dispatch(postActions.getAllPost(items));\r\n                //     }\r\n                // }\r\n            })\r\n        return () => mounted = false;\r\n    }, [idUser,update]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                dataPost ? dataPost.map((value) => {\r\n                    return <Post value={value} key={value._id} isShow={isOwner} update={update} setUpdate={setUpdate}></Post>;\r\n                }) : null\r\n            }\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}