{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\LVTN\\\\cuisine-net\\\\src\\\\components\\\\searchBox\\\\searchBox.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchBox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onPlacesChanged = () => {\n      const {\n        onPlacesChanged\n      } = this.props;\n\n      if (onPlacesChanged) {\n        onPlacesChanged(this.searchBox.getPlaces());\n      }\n    };\n\n    this.searchInput = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      mapsapi: {\n        places\n      }\n    } = this.props;\n    this.searchBox = new places.SearchBox(this.searchInput.current);\n    this.searchBox.addListener('places_changed', this.onPlacesChanged);\n  }\n\n  componentWillUnmount() {\n    const {\n      mapsapi: {\n        event\n      }\n    } = this.props;\n    event.clearInstanceListeners(this.searchBox);\n  }\n\n  render() {\n    const {\n      placeholder\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: this.searchInput,\n      placeholder: placeholder,\n      type: \"text\",\n      style: {\n        width: '392px',\n        height: '48px',\n        fontSize: '20px',\n        padding: '12px 104px 11px 64px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSearchBox.propTypes = {\n  mapsapi: PropTypes.shape({\n    places: PropTypes.shape({\n      SearchBox: PropTypes.func\n    }),\n    event: PropTypes.shape({\n      clearInstanceListeners: PropTypes.func\n    })\n  }).isRequired,\n  placeholder: PropTypes.string,\n  onPlacesChanged: PropTypes.func\n};\nSearchBox.defaultProps = {\n  placeholder: 'Search...',\n  onPlacesChanged: null\n};\nexport default SearchBox;","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/components/searchBox/searchBox.js"],"names":["React","Component","PropTypes","SearchBox","constructor","props","onPlacesChanged","searchBox","getPlaces","searchInput","createRef","componentDidMount","mapsapi","places","current","addListener","componentWillUnmount","event","clearInstanceListeners","render","placeholder","width","height","fontSize","padding","propTypes","shape","func","isRequired","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAmBhCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,eAvBmB,GAuBD,MAAM;AACtB,YAAM;AAAEA,QAAAA;AAAF,UAAsB,KAAKD,KAAjC;;AAEA,UAAIC,eAAJ,EAAqB;AACnBA,QAAAA,eAAe,CAAC,KAAKC,SAAL,CAAeC,SAAf,EAAD,CAAf;AACD;AACF,KA7BkB;;AAGjB,SAAKC,WAAL,gBAAmBT,KAAK,CAACU,SAAN,EAAnB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AACJC,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF;AADL,QAEF,KAAKR,KAFT;AAIA,SAAKE,SAAL,GAAiB,IAAIM,MAAM,CAACV,SAAX,CAAqB,KAAKM,WAAL,CAAiBK,OAAtC,CAAjB;AACA,SAAKP,SAAL,CAAeQ,WAAf,CAA2B,gBAA3B,EAA6C,KAAKT,eAAlD;AACD;;AAEDU,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AACJJ,MAAAA,OAAO,EAAE;AAAEK,QAAAA;AAAF;AADL,QAEF,KAAKZ,KAFT;AAIAY,IAAAA,KAAK,CAACC,sBAAN,CAA6B,KAAKX,SAAlC;AACD;;AAUDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKf,KAA7B;AAEA,wBACE;AACE,MAAA,GAAG,EAAE,KAAKI,WADZ;AAEE,MAAA,WAAW,EAAEW,WAFf;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLC,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,OAAO,EAAE;AAJJ;AAJT;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAlE+B;;AAA5BrB,S,CACGsB,S,GAAY;AACjBb,EAAAA,OAAO,EAAEV,SAAS,CAACwB,KAAV,CAAgB;AACvBb,IAAAA,MAAM,EAAEX,SAAS,CAACwB,KAAV,CAAgB;AACtBvB,MAAAA,SAAS,EAAED,SAAS,CAACyB;AADC,KAAhB,CADe;AAIvBV,IAAAA,KAAK,EAAEf,SAAS,CAACwB,KAAV,CAAgB;AACrBR,MAAAA,sBAAsB,EAAEhB,SAAS,CAACyB;AADb,KAAhB;AAJgB,GAAhB,EAONC,UARc;AASjBR,EAAAA,WAAW,EAAElB,SAAS,CAAC2B,MATN;AAUjBvB,EAAAA,eAAe,EAAEJ,SAAS,CAACyB;AAVV,C;AADfxB,S,CAcG2B,Y,GAAe;AACpBV,EAAAA,WAAW,EAAE,WADO;AAEpBd,EAAAA,eAAe,EAAE;AAFG,C;AAuDxB,eAAeH,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchBox extends Component {\r\n  static propTypes = {\r\n    mapsapi: PropTypes.shape({\r\n      places: PropTypes.shape({\r\n        SearchBox: PropTypes.func,\r\n      }),\r\n      event: PropTypes.shape({\r\n        clearInstanceListeners: PropTypes.func,\r\n      }),\r\n    }).isRequired,\r\n    placeholder: PropTypes.string,\r\n    onPlacesChanged: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    placeholder: 'Search...',\r\n    onPlacesChanged: null,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.searchInput = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      mapsapi: { places },\r\n    } = this.props;\r\n\r\n    this.searchBox = new places.SearchBox(this.searchInput.current);\r\n    this.searchBox.addListener('places_changed', this.onPlacesChanged);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const {\r\n      mapsapi: { event },\r\n    } = this.props;\r\n\r\n    event.clearInstanceListeners(this.searchBox);\r\n  }\r\n\r\n  onPlacesChanged = () => {\r\n    const { onPlacesChanged } = this.props;\r\n\r\n    if (onPlacesChanged) {\r\n      onPlacesChanged(this.searchBox.getPlaces());\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { placeholder } = this.props;\r\n\r\n    return (\r\n      <input\r\n        ref={this.searchInput}\r\n        placeholder={placeholder}\r\n        type=\"text\"\r\n        style={{\r\n          width: '392px',\r\n          height: '48px',\r\n          fontSize: '20px',\r\n          padding: '12px 104px 11px 64px',\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBox;"]},"metadata":{},"sourceType":"module"}