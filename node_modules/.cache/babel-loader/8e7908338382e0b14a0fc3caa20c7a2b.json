{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useSelection;\nexports.SELECTION_NONE = exports.SELECTION_INVERT = exports.SELECTION_ALL = void 0;\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _rcTable = require(\"rc-table\");\n\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\n\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\n\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\n\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\n\nvar _devWarning = _interopRequireDefault(require(\"../../_util/devWarning\")); // TODO: warning if use ajax!!!\n\n\nvar SELECTION_ALL = 'SELECT_ALL';\nexports.SELECTION_ALL = SELECTION_ALL;\nvar SELECTION_INVERT = 'SELECT_INVERT';\nexports.SELECTION_INVERT = SELECTION_INVERT;\nvar SELECTION_NONE = 'SELECT_NONE';\nexports.SELECTION_NONE = SELECTION_NONE;\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && (0, _typeof2[\"default\"])(record) === 'object' && childrenColumnName in record) {\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectNone = _ref.onSelectNone,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer; // ======================== Caches ========================\n\n  var preserveRecordsRef = React.useRef(new Map()); // ========================= Keys =========================\n\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || defaultSelectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1];\n\n  var _useMemo = (0, React.useMemo)(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : (0, _treeUtil.convertDataToEntities)(data, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = (0, React.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = (0, React.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        (0, _devWarning[\"default\"])(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = (0, React.useMemo)(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n\n    var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = (0, React.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, React.useCallback)(function (keys) {\n    var availableKeys;\n    var records;\n\n    if (preserveSelectedRowKeys) {\n      // Keep key if mark as preserveSelectedRowKeys\n      var newCache = new Map();\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n        return record;\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, React.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              (0, _devWarning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys);\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys([]);\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = (0, React.useCallback)(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(_menu[\"default\"].Item, {\n            key: key || index,\n            onClick: function onClick() {\n              onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          (0, _devWarning[\"default\"])(!(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) === 'boolean'), 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref2) {\n              var nativeEvent = _ref2.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = (0, _toArray2[\"default\"])(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat((0, _toConsumableArray2[\"default\"])(restColumns));\n    }\n\n    return [(0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat((0, _toConsumableArray2[\"default\"])(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/node_modules/antd/lib/table/hooks/useSelection.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","useSelection","SELECTION_NONE","SELECTION_INVERT","SELECTION_ALL","_toArray2","_defineProperty2","_extends2","_slicedToArray2","_toConsumableArray2","_typeof2","React","_DownOutlined","_treeUtil","_conductUtil","_util","_rcTable","_useMergedState3","_checkbox","_dropdown","_menu","_radio","_devWarning","getFixedType","column","fixed","flattenData","data","childrenColumnName","list","forEach","record","push","concat","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","defaultSelectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectNone","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","expandIconColumnIndex","getPopupContainer","preserveRecordsRef","useRef","Map","_useMergedState","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","_useMemo","useMemo","keyEntities","convertDataToEntities","externalGetKey","childrenPropName","flattedData","checkboxPropsMap","map","index","key","checkboxProps","set","process","env","NODE_ENV","isCheckboxDisabled","useCallback","r","_a","get","disabled","_useMemo2","_conductCheck","conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","keys","slice","Set","derivedHalfSelectedKeySet","_useState","useState","_useState2","lastSelectedKey","setLastSelectedKey","useEffect","setSelectedKeys","availableKeys","records","newCache","current","has","undefined","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","selectInvert","keySet","add","Array","from","selectNone","transformColumns","columns","recordKeys","filter","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","createElement","onSelectionClick","Item","onClick","className","overlay","allDisabled","checked","length","indeterminate","skipGroup","_","node","e","stopPropagation","nativeEvent","mergedIndeterminate","_ref2","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","arrDel","arrAdd","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","selectionColumn","width","columnTitle","render","INTERNAL_COL_DEFINE","_columns","expandColumn","restColumns","selectionFixed"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = useSelection;\nexports.SELECTION_NONE = exports.SELECTION_INVERT = exports.SELECTION_ALL = void 0;\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _DownOutlined = _interopRequireDefault(require(\"@ant-design/icons/DownOutlined\"));\n\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\n\nvar _conductUtil = require(\"rc-tree/lib/utils/conductUtil\");\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar _rcTable = require(\"rc-table\");\n\nvar _useMergedState3 = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\n\nvar _checkbox = _interopRequireDefault(require(\"../../checkbox\"));\n\nvar _dropdown = _interopRequireDefault(require(\"../../dropdown\"));\n\nvar _menu = _interopRequireDefault(require(\"../../menu\"));\n\nvar _radio = _interopRequireDefault(require(\"../../radio\"));\n\nvar _devWarning = _interopRequireDefault(require(\"../../_util/devWarning\"));\n\n// TODO: warning if use ajax!!!\nvar SELECTION_ALL = 'SELECT_ALL';\nexports.SELECTION_ALL = SELECTION_ALL;\nvar SELECTION_INVERT = 'SELECT_INVERT';\nexports.SELECTION_INVERT = SELECTION_INVERT;\nvar SELECTION_NONE = 'SELECT_NONE';\nexports.SELECTION_NONE = SELECTION_NONE;\n\nfunction getFixedType(column) {\n  return column && column.fixed;\n}\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && (0, _typeof2[\"default\"])(record) === 'object' && childrenColumnName in record) {\n      list = [].concat((0, _toConsumableArray2[\"default\"])(list), (0, _toConsumableArray2[\"default\"])(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nfunction useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectNone = _ref.onSelectNone,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      expandIconColumnIndex = config.expandIconColumnIndex,\n      getPopupContainer = config.getPopupContainer; // ======================== Caches ========================\n\n  var preserveRecordsRef = React.useRef(new Map()); // ========================= Keys =========================\n\n  var _useMergedState = (0, _useMergedState3[\"default\"])(selectedRowKeys || defaultSelectedRowKeys || [], {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = (0, _slicedToArray2[\"default\"])(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1];\n\n  var _useMemo = (0, React.useMemo)(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : (0, _treeUtil.convertDataToEntities)(data, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = (0, React.useMemo)(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = (0, React.useMemo)(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        (0, _devWarning[\"default\"])(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = (0, React.useCallback)(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = (0, React.useMemo)(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n\n    var _conductCheck = (0, _conductUtil.conductCheck)(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = (0, _slicedToArray2[\"default\"])(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = (0, React.useMemo)(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = (0, React.useMemo)(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = (0, React.useState)(null),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys([]);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = (0, React.useCallback)(function (keys) {\n    var availableKeys;\n    var records;\n\n    if (preserveSelectedRowKeys) {\n      // Keep key if mark as preserveSelectedRowKeys\n      var newCache = new Map();\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n        return record;\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = (0, React.useCallback)(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = (0, React.useMemo)(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n\n              if (keySet.has(key)) {\n                keySet[\"delete\"](key);\n              } else {\n                keySet.add(key);\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              (0, _devWarning[\"default\"])(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys);\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys([]);\n          }\n        };\n      }\n\n      return selection;\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = (0, React.useCallback)(function (columns) {\n    if (!rowSelection) {\n      return columns;\n    } // Support selection\n\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = /*#__PURE__*/React.createElement(_menu[\"default\"], {\n          getPopupContainer: getPopupContainer\n        }, mergedSelections.map(function (selection, index) {\n          var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n          return /*#__PURE__*/React.createElement(_menu[\"default\"].Item, {\n            key: key || index,\n            onClick: function onClick() {\n              onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n            }\n          }, text);\n        }));\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-selection-extra\")\n        }, /*#__PURE__*/React.createElement(_dropdown[\"default\"], {\n          overlay: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_DownOutlined[\"default\"], null))));\n      }\n\n      var allDisabled = flattedData.every(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return checkboxProps.disabled;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-selection\")\n      }, /*#__PURE__*/React.createElement(_checkbox[\"default\"], {\n        checked: !allDisabled && !!flattedData.length && checkedCurrentAll,\n        indeterminate: !checkedCurrentAll && checkedCurrentSome,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(_radio[\"default\"], (0, _extends2[\"default\"])({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          (0, _devWarning[\"default\"])(!(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) === 'boolean'), 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(_checkbox[\"default\"], (0, _extends2[\"default\"])({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref2) {\n              var nativeEvent = _ref2.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? (0, _util.arrDel)(originCheckedKeys, key) : (0, _util.arrAdd)(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = (0, _conductUtil.conductCheck)([].concat((0, _toConsumableArray2[\"default\"])(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = (0, _conductUtil.conductCheck)(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Columns\n\n\n    var selectionColumn = (0, _defineProperty2[\"default\"])({\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls, \"-selection-column\"),\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, _rcTable.INTERNAL_COL_DEFINE, {\n      className: \"\".concat(prefixCls, \"-selection-col\")\n    });\n\n    if (expandType === 'row' && columns.length && !expandIconColumnIndex) {\n      var _columns = (0, _toArray2[\"default\"])(columns),\n          expandColumn = _columns[0],\n          restColumns = _columns.slice(1);\n\n      var selectionFixed = fixed || getFixedType(restColumns[0]);\n\n      if (selectionFixed) {\n        expandColumn.fixed = selectionFixed;\n      }\n\n      return [expandColumn, (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n        fixed: selectionFixed\n      })].concat((0, _toConsumableArray2[\"default\"])(restColumns));\n    }\n\n    return [(0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, selectionColumn), {\n      fixed: fixed || getFixedType(columns[0])\n    })].concat((0, _toConsumableArray2[\"default\"])(columns));\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}"]},"metadata":{},"sourceType":"script"}