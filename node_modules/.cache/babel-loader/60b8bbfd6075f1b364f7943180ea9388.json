{"ast":null,"code":"import { authHeader } from '../helpers/auth-header';\nimport axios from 'axios';\nexport const postService = {\n  getAllPost,\n  deletePost,\n  getPostByUser,\n  getPostLikes,\n  likePost,\n  getSearchPost\n};\n\nfunction getAllPost() {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.get(`http://localhost:8000/api/posts`, config);\n}\n\nfunction getSearchPost(description) {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.get(`http://localhost:8000/api/posts?description=${description}`, config).then(res => res.data.data.data).catch(error => console.log(error));\n}\n\nfunction deletePost(idPost) {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.delete(`http://localhost:8000/api/posts/${idPost}`, config);\n}\n\nfunction getPostByUser(idUser) {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.get(`http://localhost:8000/api/posts/getPostByUser/${idUser}`, config).then(res => res.data.data.data).catch(error => console.log(error));\n}\n\nfunction getPostLikes(idPost) {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.get(`http://localhost:8000/api/posts/getPostLikes/${idPost}`, config).then(res => res.data.data.data).catch(error => console.log(error));\n}\n\nfunction likePost(idPost, userId, authorId) {\n  return axios({\n    method: 'post',\n    url: 'http://localhost:8000/api/posts/likePost',\n    data: {\n      \"postId\": idPost,\n      \"userId\": userId,\n      \"authorId\": authorId\n    },\n    headers: authHeader()\n  });\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/services/post.service.js"],"names":["authHeader","axios","postService","getAllPost","deletePost","getPostByUser","getPostLikes","likePost","getSearchPost","header","config","headers","get","description","then","res","data","catch","error","console","log","idPost","delete","idUser","userId","authorId","method","url"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,UADuB;AAEvBC,EAAAA,UAFuB;AAGvBC,EAAAA,aAHuB;AAIvBC,EAAAA,YAJuB;AAKvBC,EAAAA,QALuB;AAMvBC,EAAAA;AANuB,CAApB;;AAQP,SAASL,UAAT,GAAsB;AAClB,MAAIM,MAAM,GAAGT,UAAU,EAAvB;AACA,MAAIU,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAEF;AADA,GAAb;AAGA,SAAOR,KAAK,CAACW,GAAN,CAAW,iCAAX,EAA6CF,MAA7C,CAAP;AACH;;AAED,SAASF,aAAT,CAAuBK,WAAvB,EAAoC;AAChC,MAAIJ,MAAM,GAAGT,UAAU,EAAvB;AACA,MAAIU,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAEF;AADA,GAAb;AAGA,SAAOR,KAAK,CAACW,GAAN,CAAW,+CAA8CC,WAAY,EAArE,EAAwEH,MAAxE,EACNI,IADM,CACDC,GAAG,IACLA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcA,IAFX,EAINC,KAJM,CAIAC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJT,CAAP;AAKH;;AACD,SAASd,UAAT,CAAoBiB,MAApB,EAA4B;AACxB,MAAIZ,MAAM,GAAGT,UAAU,EAAvB;AACA,MAAIU,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAEF;AADA,GAAb;AAGA,SAAOR,KAAK,CAACqB,MAAN,CAAc,mCAAkCD,MAAO,EAAvD,EAA0DX,MAA1D,CAAP;AAEH;;AACD,SAASL,aAAT,CAAuBkB,MAAvB,EAA+B;AAC3B,MAAId,MAAM,GAAGT,UAAU,EAAvB;AACA,MAAIU,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAEF;AADA,GAAb;AAGA,SAAOR,KAAK,CAACW,GAAN,CAAW,iDAAgDW,MAAO,EAAlE,EAAqEb,MAArE,EACFI,IADE,CACGC,GAAG,IACLA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcA,IAFf,EAIFC,KAJE,CAIIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJb,CAAP;AAKH;;AAED,SAASZ,YAAT,CAAsBe,MAAtB,EAA8B;AAC1B,MAAIZ,MAAM,GAAGT,UAAU,EAAvB;AACA,MAAIU,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAEF;AADA,GAAb;AAGA,SAAOR,KAAK,CAACW,GAAN,CAAW,gDAA+CS,MAAO,EAAjE,EAAoEX,MAApE,EACFI,IADE,CACGC,GAAG,IACLA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcA,IAFf,EAIFC,KAJE,CAIIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJb,CAAP;AAKH;;AAED,SAASX,QAAT,CAAkBc,MAAlB,EAAyBG,MAAzB,EAAgCC,QAAhC,EAAyC;AACrC,SAAOxB,KAAK,CAAC;AACTyB,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAE,0CAFI;AAGTX,IAAAA,IAAI,EAAE;AACF,gBAAUK,MADR;AAEF,gBAAUG,MAFR;AAGF,kBAAYC;AAHV,KAHG;AAQTd,IAAAA,OAAO,EAAEX,UAAU;AARV,GAAD,CAAZ;AAUH","sourcesContent":["import { authHeader } from '../helpers/auth-header';\r\nimport axios from 'axios';\r\nexport const postService = {\r\n    getAllPost,\r\n    deletePost,\r\n    getPostByUser,\r\n    getPostLikes,\r\n    likePost,\r\n    getSearchPost\r\n};\r\nfunction getAllPost() {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.get(`http://localhost:8000/api/posts`, config);\r\n}\r\n\r\nfunction getSearchPost(description) {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.get(`http://localhost:8000/api/posts?description=${description}`, config)\r\n    .then(res =>\r\n        res.data.data.data\r\n    )\r\n    .catch(error => console.log(error));\r\n}\r\nfunction deletePost(idPost) {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.delete(`http://localhost:8000/api/posts/${idPost}`, config);\r\n\r\n}\r\nfunction getPostByUser(idUser) {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.get(`http://localhost:8000/api/posts/getPostByUser/${idUser}`, config)\r\n        .then(res =>\r\n            res.data.data.data\r\n        )\r\n        .catch(error => console.log(error));\r\n}\r\n\r\nfunction getPostLikes(idPost) {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.get(`http://localhost:8000/api/posts/getPostLikes/${idPost}`, config)\r\n        .then(res =>\r\n            res.data.data.data\r\n        )\r\n        .catch(error => console.log(error));\r\n}\r\n\r\nfunction likePost(idPost,userId,authorId){\r\n    return axios({\r\n        method: 'post',\r\n        url: 'http://localhost:8000/api/posts/likePost',\r\n        data: {\r\n            \"postId\": idPost,\r\n            \"userId\": userId,\r\n            \"authorId\": authorId\r\n        },\r\n        headers: authHeader()\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}