{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport GLTFScenegraph from '../gltf-scenegraph';\nimport { KHR_BINARY_GLTF } from '../gltf-constants';\nexport function decode(gltfData, options) {\n  var gltfScenegraph = new GLTFScenegraph(gltfData);\n  var json = gltfScenegraph.json;\n\n  var _iterator = _createForOfIteratorHelper(json.images || []),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var node = _step.value;\n      var extension = gltfScenegraph.removeObjectExtension(node, KHR_BINARY_GLTF);\n\n      if (extension) {\n        Object.assign(node, extension);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  if (json.buffers && json.buffers[0]) {\n    delete json.buffers[0].uri;\n  }\n\n  gltfScenegraph.removeExtension(KHR_BINARY_GLTF);\n}\nexport function encode(gltfData, options) {\n  throw new Error(KHR_BINARY_GLTF);\n}","map":{"version":3,"sources":["../../../../src/lib/extensions/KHR_binary_gltf.js"],"names":["gltfScenegraph","json","node","extension","Object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,OAAA,cAAA,MAAA,oBAAA;AACA,SAAA,eAAA,QAAA,mBAAA;AAEA,OAAO,SAAA,MAAA,CAAA,QAAA,EAAA,OAAA,EAAmC;AACxC,MAAMA,cAAc,GAAG,IAAA,cAAA,CAAvB,QAAuB,CAAvB;AADwC,MAEjCC,IAFiC,GAEzBD,cAFyB,CAAA,IAAA;;AAAA,MAAA,SAAA,GAAA,0BAAA,CASrBC,IAAI,CAAJA,MAAAA,IATqB,EAAA,CAAA;AAAA,MAAA,KAAA;;AAAA,MAAA;AASxC,SAAA,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAsC;AAAA,UAA3BC,IAA2B,GAAA,KAAA,CAAA,KAAA;AACpC,UAAMC,SAAS,GAAGH,cAAc,CAAdA,qBAAAA,CAAAA,IAAAA,EAAlB,eAAkBA,CAAlB;;AAEA,UAAA,SAAA,EAAe;AACbI,QAAAA,MAAM,CAANA,MAAAA,CAAAA,IAAAA,EAAAA,SAAAA;AACD;AACF;AAfuC,GAAA,CAAA,OAAA,GAAA,EAAA;AAAA,IAAA,SAAA,CAAA,CAAA,CAAA,GAAA;AAAA,GAAA,SAAA;AAAA,IAAA,SAAA,CAAA,CAAA;AAAA;;AAqBxC,MAAIH,IAAI,CAAJA,OAAAA,IAAgBA,IAAI,CAAJA,OAAAA,CAApB,CAAoBA,CAApB,EAAqC;AACnC,WAAOA,IAAI,CAAJA,OAAAA,CAAAA,CAAAA,EAAP,GAAA;AACD;;AAGDD,EAAAA,cAAc,CAAdA,eAAAA,CAAAA,eAAAA;AACD;AAGD,OAAO,SAAA,MAAA,CAAA,QAAA,EAAA,OAAA,EAAmC;AACxC,QAAM,IAAA,KAAA,CAAN,eAAM,CAAN;AACD","sourcesContent":["// GLTF 1.0 EXTENSION: KHR_binary_glTF\n// https://github.com/KhronosGroup/glTF/tree/master/extensions/1.0/Khronos/KHR_binary_glTF\n\nimport GLTFScenegraph from '../gltf-scenegraph';\nimport {KHR_BINARY_GLTF} from '../gltf-constants';\n\nexport function decode(gltfData, options) {\n  const gltfScenegraph = new GLTFScenegraph(gltfData);\n  const {json} = gltfScenegraph;\n\n  // Note: json.buffers.binary_glTF also needs to be replaced\n  // This is currently done during gltf normalization\n\n  // Image and shader nodes can have the extension\n  // https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_binary_glTF/schema/image.KHR_binary_glTF.schema.json\n  for (const node of json.images || []) {\n    const extension = gltfScenegraph.removeObjectExtension(node, KHR_BINARY_GLTF);\n    // The data in the extension is valid as glTF 2.0 data inside the object, so just copy it in\n    if (extension) {\n      Object.assign(node, extension);\n    }\n  }\n\n  // TODO shaders\n  // https://github.com/KhronosGroup/glTF/blob/master/extensions/1.0/Khronos/KHR_binary_glTF/schema/shader.KHR_binary_glTF.schema.json\n\n  // glTF v1 one files have a partially formed URI field that is not expected in (and causes problems in) 2.0\n  if (json.buffers && json.buffers[0]) {\n    delete json.buffers[0].uri;\n  }\n\n  // Remove the top-level extension as it has now been removed from all nodes\n  gltfScenegraph.removeExtension(KHR_BINARY_GLTF);\n}\n\n// KHR_binary_gltf is a 1.0 extension that is supported natively by 2.0\nexport function encode(gltfData, options) {\n  throw new Error(KHR_BINARY_GLTF);\n}\n"]},"metadata":{},"sourceType":"module"}