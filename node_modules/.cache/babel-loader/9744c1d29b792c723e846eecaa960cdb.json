{"ast":null,"code":"import { socketService } from \"../services/socket.service\";\nimport { socketConstants } from '../constants/socket.constants';\nimport { notificationActions } from \"./notification.action\";\nimport { notificatonService } from \"../services/notification.service\";\nimport { chatAction } from \"../actions/chat.action\";\nexport const socketActions = {\n  connect,\n  handleSocket\n};\n\nfunction connect() {\n  return dispatch => {\n    socketService.connect().then(socket => {\n      return socket;\n    });\n  };\n\n  function connectSocket(socket) {\n    return {\n      type: socketConstants.CONNECT,\n      socket\n    };\n  }\n}\n\nfunction handleSocket(socket) {\n  dispatch(connectSocket(socket)); //notification\n\n  socket.on(\"newNotification\", data => {\n    console.log(\"new notifgifation \");\n    notificatonService.readNotifications(data.notification._id);\n    dispatch(notificationActions.addNotification(data));\n  }); //new message\n\n  socket.on('newMessage', data => {\n    console.log('new Mesage');\n    dispatch(chatAction.newMessage(data));\n  }); //read message\n  //new user\n  //typing\n  //stoppedTyping\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/actions/socket.action.js"],"names":["socketService","socketConstants","notificationActions","notificatonService","chatAction","socketActions","connect","handleSocket","dispatch","then","socket","connectSocket","type","CONNECT","on","data","console","log","readNotifications","notification","_id","addNotification","newMessage"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,OADyB;AACjBC,EAAAA;AADiB,CAAtB;;AAGP,SAASD,OAAT,GAAmB;AACf,SAAOE,QAAQ,IAAI;AACfR,IAAAA,aAAa,CAACM,OAAd,GAAwBG,IAAxB,CACIC,MAAM,IAAI;AACN,aAAOA,MAAP;AACH,KAHL;AAKH,GAND;;AAQA,WAASC,aAAT,CAAuBD,MAAvB,EAA+B;AAC3B,WAAO;AAAEE,MAAAA,IAAI,EAAEX,eAAe,CAACY,OAAxB;AAAiCH,MAAAA;AAAjC,KAAP;AACH;AACJ;;AACD,SAASH,YAAT,CAAsBG,MAAtB,EAA6B;AACzBF,EAAAA,QAAQ,CAACG,aAAa,CAACD,MAAD,CAAd,CAAR,CADyB,CAEzB;;AACAA,EAAAA,MAAM,CAACI,EAAP,CAAU,iBAAV,EAA6BC,IAAI,IAAI;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAd,IAAAA,kBAAkB,CAACe,iBAAnB,CAAqCH,IAAI,CAACI,YAAL,CAAkBC,GAAvD;AACAZ,IAAAA,QAAQ,CAACN,mBAAmB,CAACmB,eAApB,CAAoCN,IAApC,CAAD,CAAR;AACH,GAJD,EAHyB,CAQzB;;AACAL,EAAAA,MAAM,CAACI,EAAP,CAAU,YAAV,EAAwBC,IAAI,IAAI;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAT,IAAAA,QAAQ,CAACJ,UAAU,CAACkB,UAAX,CAAsBP,IAAtB,CAAD,CAAR;AACH,GAHD,EATyB,CAazB;AACA;AACA;AACA;AACH","sourcesContent":["import { socketService } from \"../services/socket.service\";\r\nimport { socketConstants } from '../constants/socket.constants';\r\nimport { notificationActions } from \"./notification.action\";\r\nimport { notificatonService } from \"../services/notification.service\";\r\nimport { chatAction } from \"../actions/chat.action\";\r\nexport const socketActions = {\r\n    connect,handleSocket\r\n}\r\nfunction connect() {\r\n    return dispatch => {\r\n        socketService.connect().then(\r\n            socket => {\r\n                return socket;\r\n            }\r\n        )\r\n    }\r\n\r\n    function connectSocket(socket) {\r\n        return { type: socketConstants.CONNECT, socket };\r\n    }\r\n}\r\nfunction handleSocket(socket){\r\n    dispatch(connectSocket(socket));\r\n    //notification\r\n    socket.on(\"newNotification\", data => {\r\n        console.log(\"new notifgifation \");\r\n        notificatonService.readNotifications(data.notification._id);\r\n        dispatch(notificationActions.addNotification(data))\r\n    })\r\n    //new message\r\n    socket.on('newMessage', data => {\r\n        console.log('new Mesage')\r\n        dispatch(chatAction.newMessage(data));\r\n    })\r\n    //read message\r\n    //new user\r\n    //typing\r\n    //stoppedTyping\r\n}"]},"metadata":{},"sourceType":"module"}