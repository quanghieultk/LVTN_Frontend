{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport { compareArrayBuffers } from '@loaders.gl/loader-utils';\nimport { normalizeLoader } from '../loader-utils/normalize-loader';\nimport { getResourceUrlAndType } from '../utils/resource-utils';\nimport { getRegisteredLoaders } from './register-loaders';\nimport { readFileSlice } from '../../iterator-utils/make-iterator/blob-iterator';\nimport { isBlob } from '../../javascript-utils/is-type';\nvar EXT_PATTERN = /\\.([^.]+)$/;\nexport function selectLoader(_x) {\n  return _selectLoader.apply(this, arguments);\n}\n\nfunction _selectLoader() {\n  _selectLoader = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(data) {\n    var loaders,\n        options,\n        context,\n        loader,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            loaders = _args.length > 1 && _args[1] !== undefined ? _args[1] : [];\n            options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            context = _args.length > 3 && _args[3] !== undefined ? _args[3] : {};\n            loader = selectLoaderSync(data, loaders, _objectSpread(_objectSpread({}, options), {}, {\n              nothrow: true\n            }), context);\n\n            if (!loader) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", loader);\n\n          case 6:\n            if (!isBlob(data)) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 9;\n            return readFileSlice(data, 0, 10);\n\n          case 9:\n            data = _context.sent;\n            loader = selectLoaderSync(data, loaders, options, context);\n\n          case 11:\n            if (!(!loader && !options.nothrow)) {\n              _context.next = 13;\n              break;\n            }\n\n            throw new Error(getNoValidLoaderMessage(data));\n\n          case 13:\n            return _context.abrupt(\"return\", loader);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _selectLoader.apply(this, arguments);\n}\n\nexport function selectLoaderSync(data) {\n  var loaders = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (loaders && !Array.isArray(loaders)) {\n    return normalizeLoader(loaders);\n  }\n\n  loaders = [].concat(_toConsumableArray(loaders || []), _toConsumableArray(getRegisteredLoaders()));\n  normalizeLoaders(loaders);\n\n  var _getResourceUrlAndTyp = getResourceUrlAndType(data),\n      url = _getResourceUrlAndTyp.url,\n      type = _getResourceUrlAndTyp.type;\n\n  var loader = findLoaderByUrl(loaders, url || context.url);\n  loader = loader || findLoaderByContentType(loaders, type);\n  loader = loader || findLoaderByExamingInitialData(loaders, data);\n\n  if (!loader && !options.nothrow) {\n    throw new Error(getNoValidLoaderMessage(data));\n  }\n\n  return loader;\n}\n\nfunction getNoValidLoaderMessage(data) {\n  var _getResourceUrlAndTyp2 = getResourceUrlAndType(data),\n      url = _getResourceUrlAndTyp2.url,\n      type = _getResourceUrlAndTyp2.type;\n\n  var message = 'No valid loader found';\n\n  if (data) {\n    message += \" data: \\\"\".concat(getFirstCharacters(data), \"\\\", contentType: \\\"\").concat(type, \"\\\"\");\n  }\n\n  if (url) {\n    message += \" url: \".concat(url);\n  }\n\n  return message;\n}\n\nfunction normalizeLoaders(loaders) {\n  var _iterator = _createForOfIteratorHelper(loaders),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var loader = _step.value;\n      normalizeLoader(loader);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction findLoaderByUrl(loaders, url) {\n  var match = url && url.match(EXT_PATTERN);\n  var extension = match && match[1];\n  return extension && findLoaderByExtension(loaders, extension);\n}\n\nfunction findLoaderByExtension(loaders, extension) {\n  extension = extension.toLowerCase();\n\n  var _iterator2 = _createForOfIteratorHelper(loaders),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var loader = _step2.value;\n\n      var _iterator3 = _createForOfIteratorHelper(loader.extensions),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var loaderExtension = _step3.value;\n\n          if (loaderExtension.toLowerCase() === extension) {\n            return loader;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return null;\n}\n\nfunction findLoaderByContentType(loaders, mimeType) {\n  var _iterator4 = _createForOfIteratorHelper(loaders),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var loader = _step4.value;\n\n      if (loader.mimeTypes && loader.mimeTypes.includes(mimeType)) {\n        return loader;\n      }\n\n      if (mimeType === \"application/x.\".concat(loader.id)) {\n        return loader;\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  return null;\n}\n\nfunction findLoaderByExamingInitialData(loaders, data) {\n  if (!data) {\n    return null;\n  }\n\n  var _iterator5 = _createForOfIteratorHelper(loaders),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var loader = _step5.value;\n\n      if (typeof data === 'string') {\n        if (testDataAgainstText(data, loader)) {\n          return loader;\n        }\n      } else if (ArrayBuffer.isView(data)) {\n        if (testDataAgainstBinary(data.buffer, data.byteOffset, loader)) {\n          return loader;\n        }\n      } else if (data instanceof ArrayBuffer) {\n        var byteOffset = 0;\n\n        if (testDataAgainstBinary(data, byteOffset, loader)) {\n          return loader;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  return null;\n}\n\nfunction testDataAgainstText(data, loader) {\n  return loader.testText && loader.testText(data);\n}\n\nfunction testDataAgainstBinary(data, byteOffset, loader) {\n  var tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n  return tests.some(function (test) {\n    return testBinary(data, byteOffset, loader, test);\n  });\n}\n\nfunction testBinary(data, byteOffset, loader, test) {\n  if (test instanceof ArrayBuffer) {\n    return compareArrayBuffers(test, data, test.byteLength);\n  }\n\n  switch (_typeof(test)) {\n    case 'function':\n      return test(data, loader);\n\n    case 'string':\n      var magic = getMagicString(data, byteOffset, test.length);\n      return test === magic;\n\n    default:\n      return false;\n  }\n}\n\nfunction getFirstCharacters(data) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\n  if (typeof data === 'string') {\n    return data.slice(0, length);\n  } else if (ArrayBuffer.isView(data)) {\n    return getMagicString(data.buffer, data.byteOffset, length);\n  } else if (data instanceof ArrayBuffer) {\n    var byteOffset = 0;\n    return getMagicString(data, byteOffset, length);\n  }\n\n  return '';\n}\n\nfunction getMagicString(arrayBuffer, byteOffset, length) {\n  if (arrayBuffer.byteLength < byteOffset + length) {\n    return '';\n  }\n\n  var dataView = new DataView(arrayBuffer);\n  var magic = '';\n\n  for (var i = 0; i < length; i++) {\n    magic += String.fromCharCode(dataView.getUint8(byteOffset + i));\n  }\n\n  return magic;\n}","map":{"version":3,"sources":["../../../../src/lib/api/select-loader.js"],"names":["EXT_PATTERN","loaders","options","context","loader","selectLoaderSync","nothrow","isBlob","data","readFileSlice","getNoValidLoaderMessage","Array","normalizeLoader","getRegisteredLoaders","normalizeLoaders","url","type","getResourceUrlAndType","findLoaderByUrl","findLoaderByContentType","findLoaderByExamingInitialData","message","getFirstCharacters","match","extension","findLoaderByExtension","loaderExtension","mimeType","testDataAgainstText","ArrayBuffer","testDataAgainstBinary","byteOffset","tests","testBinary","test","compareArrayBuffers","magic","getMagicString","length","arrayBuffer","dataView","i","String"],"mappings":"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","sourcesContent":["import {compareArrayBuffers} from '@loaders.gl/loader-utils';\nimport {normalizeLoader} from '../loader-utils/normalize-loader';\nimport {getResourceUrlAndType} from '../utils/resource-utils';\nimport {getRegisteredLoaders} from './register-loaders';\nimport {readFileSlice} from '../../iterator-utils/make-iterator/blob-iterator';\nimport {isBlob} from '../../javascript-utils/is-type';\nconst EXT_PATTERN = /\\.([^.]+)$/;\n\n// TODO - Need a variant that peeks at streams for parseInBatches\n// TODO - Detect multiple matching loaders? Use heuristics to grade matches?\n// TODO - Allow apps to pass context to disambiguate between multiple matches (e.g. multiple .json formats)?\n\nexport async function selectLoader(data, loaders = [], options = {}, context = {}) {\n  // First make a sync attempt, disabling exceptions\n  let loader = selectLoaderSync(data, loaders, {...options, nothrow: true}, context);\n  if (loader) {\n    return loader;\n  }\n\n  // For Blobs and Files, try to asynchronously read a small initial slice and test again with that\n  // to see if we can detect by initial content\n  if (isBlob(data)) {\n    data = await readFileSlice(data, 0, 10);\n    loader = selectLoaderSync(data, loaders, options, context);\n  }\n\n  // no loader available\n  if (!loader && !options.nothrow) {\n    throw new Error(getNoValidLoaderMessage(data));\n  }\n\n  return loader;\n}\n\n// eslint-disable-next-line complexity\nexport function selectLoaderSync(data, loaders = [], options = {}, context = {}) {\n  // if only a single loader was provided (not as array), force its use\n  // TODO - Should this behaviour be kept and documented?\n  if (loaders && !Array.isArray(loaders)) {\n    return normalizeLoader(loaders);\n  }\n\n  // Add registered loaders\n  loaders = [...(loaders || []), ...getRegisteredLoaders()];\n  normalizeLoaders(loaders);\n\n  const {url, type} = getResourceUrlAndType(data);\n\n  let loader = findLoaderByUrl(loaders, url || context.url);\n  loader = loader || findLoaderByContentType(loaders, type);\n  // NOTE: Initial data is not always available (e.g. Response, stream, async iterator)\n  loader = loader || findLoaderByExamingInitialData(loaders, data);\n\n  // no loader available\n  if (!loader && !options.nothrow) {\n    throw new Error(getNoValidLoaderMessage(data));\n  }\n\n  return loader;\n}\n\nfunction getNoValidLoaderMessage(data) {\n  const {url, type} = getResourceUrlAndType(data);\n\n  let message = 'No valid loader found';\n  if (data) {\n    message += ` data: \"${getFirstCharacters(data)}\", contentType: \"${type}\"`;\n  }\n  if (url) {\n    message += ` url: ${url}`;\n  }\n  return message;\n}\n\nfunction normalizeLoaders(loaders) {\n  for (const loader of loaders) {\n    normalizeLoader(loader);\n  }\n}\n\n// TODO - Would be nice to support http://example.com/file.glb?parameter=1\n// E.g: x = new URL('http://example.com/file.glb?load=1'; x.pathname\nfunction findLoaderByUrl(loaders, url) {\n  // Get extension\n  const match = url && url.match(EXT_PATTERN);\n  const extension = match && match[1];\n  return extension && findLoaderByExtension(loaders, extension);\n}\n\nfunction findLoaderByExtension(loaders, extension) {\n  extension = extension.toLowerCase();\n\n  for (const loader of loaders) {\n    for (const loaderExtension of loader.extensions) {\n      if (loaderExtension.toLowerCase() === extension) {\n        return loader;\n      }\n    }\n  }\n  return null;\n}\n\nfunction findLoaderByContentType(loaders, mimeType) {\n  for (const loader of loaders) {\n    if (loader.mimeTypes && loader.mimeTypes.includes(mimeType)) {\n      return loader;\n    }\n\n    // Support referring to loaders using the \"unregistered tree\"\n    // https://en.wikipedia.org/wiki/Media_type#Unregistered_tree\n    if (mimeType === `application/x.${loader.id}`) {\n      return loader;\n    }\n  }\n  return null;\n}\n\nfunction findLoaderByExamingInitialData(loaders, data) {\n  if (!data) {\n    return null;\n  }\n\n  for (const loader of loaders) {\n    if (typeof data === 'string') {\n      if (testDataAgainstText(data, loader)) {\n        return loader;\n      }\n    } else if (ArrayBuffer.isView(data)) {\n      // Typed Arrays can have offsets into underlying buffer\n      if (testDataAgainstBinary(data.buffer, data.byteOffset, loader)) {\n        return loader;\n      }\n    } else if (data instanceof ArrayBuffer) {\n      const byteOffset = 0;\n      if (testDataAgainstBinary(data, byteOffset, loader)) {\n        return loader;\n      }\n    }\n    // TODO Handle streaming case (requires creating a new AsyncIterator)\n  }\n  return null;\n}\n\nfunction testDataAgainstText(data, loader) {\n  return loader.testText && loader.testText(data);\n}\n\nfunction testDataAgainstBinary(data, byteOffset, loader) {\n  const tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n  return tests.some(test => testBinary(data, byteOffset, loader, test));\n}\n\nfunction testBinary(data, byteOffset, loader, test) {\n  if (test instanceof ArrayBuffer) {\n    return compareArrayBuffers(test, data, test.byteLength);\n  }\n  switch (typeof test) {\n    case 'function':\n      return test(data, loader);\n\n    case 'string':\n      // Magic bytes check: If `test` is a string, check if binary data starts with that strings\n      const magic = getMagicString(data, byteOffset, test.length);\n      return test === magic;\n\n    default:\n      return false;\n  }\n}\n\nfunction getFirstCharacters(data, length = 5) {\n  if (typeof data === 'string') {\n    return data.slice(0, length);\n  } else if (ArrayBuffer.isView(data)) {\n    // Typed Arrays can have offsets into underlying buffer\n    return getMagicString(data.buffer, data.byteOffset, length);\n  } else if (data instanceof ArrayBuffer) {\n    const byteOffset = 0;\n    return getMagicString(data, byteOffset, length);\n  }\n  return '';\n}\n\nfunction getMagicString(arrayBuffer, byteOffset, length) {\n  if (arrayBuffer.byteLength < byteOffset + length) {\n    return '';\n  }\n  const dataView = new DataView(arrayBuffer);\n  let magic = '';\n  for (let i = 0; i < length; i++) {\n    magic += String.fromCharCode(dataView.getUint8(byteOffset + i));\n  }\n  return magic;\n}\n"]},"metadata":{},"sourceType":"module"}