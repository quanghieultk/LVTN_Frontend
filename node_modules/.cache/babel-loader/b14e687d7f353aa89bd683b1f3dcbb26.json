{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport View from './view';\nimport WebMercatorViewport from '../viewports/web-mercator-viewport';\nimport MapController from '../controllers/map-controller';\n\nvar MapView = function (_View) {\n  _inherits(MapView, _View);\n\n  var _super = _createSuper(MapView);\n\n  function MapView(props) {\n    _classCallCheck(this, MapView);\n\n    return _super.call(this, Object.assign({}, props, {\n      type: WebMercatorViewport\n    }));\n  }\n\n  _createClass(MapView, [{\n    key: \"controller\",\n    get: function get() {\n      return this._getControllerProps({\n        type: MapController\n      });\n    }\n  }]);\n\n  return MapView;\n}(View);\n\nexport { MapView as default };\nMapView.displayName = 'MapView';","map":{"version":3,"sources":["../../../src/views/map-view.js"],"names":["MapView","View","type","WebMercatorViewport","MapController"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,IAAA,MAAA,QAAA;AACA,OAAA,mBAAA,MAAA,oCAAA;AACA,OAAA,aAAA,MAAA,+BAAA;;IAEqBA,O;;;;;AACnB,WAAA,OAAA,CAAA,KAAA,EAAmB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA;;AAAA,WAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAEf,MAAM,CAAN,MAAA,CAAA,EAAA,EAAA,KAAA,EAAyB;AACvBE,MAAAA,IAAI,EAAEC;AADiB,KAAzB,CAFe,CAAA;AAMlB;;;;wBAEgB;AACf,aAAO,KAAA,mBAAA,CAAyB;AAC9BD,QAAAA,IAAI,EAAEE;AADwB,OAAzB,CAAP;AAGD;;;;EAbkCH,I;;SAAhBD,O;AAgBrBA,OAAO,CAAPA,WAAAA,GAAAA,SAAAA","sourcesContent":["import View from './view';\nimport WebMercatorViewport from '../viewports/web-mercator-viewport';\nimport MapController from '../controllers/map-controller';\n\nexport default class MapView extends View {\n  constructor(props) {\n    super(\n      Object.assign({}, props, {\n        type: WebMercatorViewport\n      })\n    );\n  }\n\n  get controller() {\n    return this._getControllerProps({\n      type: MapController\n    });\n  }\n}\n\nMapView.displayName = 'MapView';\n"]},"metadata":{},"sourceType":"module"}