{"ast":null,"code":"import { authHeader } from '../helpers/auth-header';\nimport axios from 'axios';\nexport const commentService = {\n  getAllCommentPost,\n  getAllCommentReply,\n  createComment,\n  createCommentReply\n};\n\nfunction getAllCommentPost(idPost) {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.get(`http://localhost:8000/api/comments/commentPost/${idPost}`, config).then(res => res.data.data.data).catch(error => console.log(error));\n}\n\nfunction getAllCommentReply(idComment) {\n  let header = authHeader();\n  let config = {\n    headers: header\n  };\n  return axios.get(`http://localhost:8000/api/commentReplies/commentCommentReply/${idComment}`, config).then(res => res.data.data.data).catch(error => console.log(error));\n}\n\nfunction createComment(idPost, message) {\n  return axios({\n    method: 'post',\n    url: 'http://localhost:8000/api/comments',\n    data: {\n      \"text\": message,\n      \"postId\": idPost\n    },\n    headers: authHeader()\n  }).then(response => {\n    console.log(response);\n  }, error => {\n    console.log(error);\n  });\n}\n\nfunction createCommentReply(idComment, message) {\n  return axios({\n    method: 'post',\n    url: 'http://localhost:8000/api/commentReplies',\n    data: {\n      \"text\": message,\n      \"commentId\": idComment\n    },\n    headers: authHeader()\n  }).then(response => {\n    console.log(response);\n  }, error => {\n    console.log(error);\n  });\n}\n\nfunction login(username, password) {\n  return axios({\n    method: 'post',\n    url: '/users/signin',\n    data: {\n      \"email\": username,\n      \"password\": password\n    }\n  }).then(handleResponse).then(user => {\n    localStorage.setItem('user', JSON.stringify(user));\n    return JSON.stringify(user);\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('user');\n}\n\nfunction getAll() {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`http://localhost:8000/users`, requestOptions).then(handleResponse);\n}\n\nfunction getById(id) {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction register(user) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`http://localhost:8000/users/signup`, requestOptions).then(handleResponse);\n}\n\nfunction update(user) {\n  const requestOptions = {\n    method: 'PUT',\n    headers: { ...authHeader(),\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`http://localhost:8000/users/${user.id}`, requestOptions).then(handleResponse);\n  ;\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: authHeader()\n  };\n  return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n  if (!response.status === 200) {\n    if (response.status === 401) {\n      // auto logout if 401 response returned from api\n      logout();\n      window.location.reload(true);\n    }\n\n    const error = response.message;\n    return Promise.reject(error);\n  }\n\n  return response;\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/services/comment.service.js"],"names":["authHeader","axios","commentService","getAllCommentPost","getAllCommentReply","createComment","createCommentReply","idPost","header","config","headers","get","then","res","data","catch","error","console","log","idComment","message","method","url","response","login","username","password","handleResponse","user","localStorage","setItem","JSON","stringify","logout","removeItem","getAll","requestOptions","fetch","getById","id","register","body","update","_delete","status","window","location","reload","Promise","reject"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA,iBAD0B;AAE1BC,EAAAA,kBAF0B;AAG1BC,EAAAA,aAH0B;AAI1BC,EAAAA;AAJ0B,CAAvB;;AAMP,SAASH,iBAAT,CAA2BI,MAA3B,EAAmC;AAC/B,MAAIC,MAAM,GAAGR,UAAU,EAAvB;AACA,MAAIS,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAEF;AADA,GAAb;AAGA,SAAOP,KAAK,CAACU,GAAN,CAAW,kDAAiDJ,MAAO,EAAnE,EAAsEE,MAAtE,EACFG,IADE,CACGC,GAAG,IACLA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcA,IAFf,EAIFC,KAJE,CAIIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJb,CAAP;AAMH;;AACD,SAASZ,kBAAT,CAA4Be,SAA5B,EAAuC;AACnC,MAAIX,MAAM,GAAGR,UAAU,EAAvB;AACA,MAAIS,MAAM,GAAG;AACTC,IAAAA,OAAO,EAAEF;AADA,GAAb;AAGA,SAAOP,KAAK,CAACU,GAAN,CAAW,gEAA+DQ,SAAU,EAApF,EAAuFV,MAAvF,EACFG,IADE,CACGC,GAAG,IACLA,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcA,IAFf,EAIFC,KAJE,CAIIC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJb,CAAP;AAMH;;AACD,SAASX,aAAT,CAAuBE,MAAvB,EAA+Ba,OAA/B,EAAwC;AACpC,SAAOnB,KAAK,CAAC;AACToB,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAE,oCAFI;AAGTR,IAAAA,IAAI,EAAE;AACF,cAAQM,OADN;AAEF,gBAAUb;AAFR,KAHG;AAOTG,IAAAA,OAAO,EAAEV,UAAU;AAPV,GAAD,CAAL,CASFY,IATE,CASIW,QAAD,IAAc;AAChBN,IAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACH,GAXE,EAWCP,KAAD,IAAW;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAbE,CAAP;AAcH;;AACD,SAASV,kBAAT,CAA4Ba,SAA5B,EAAuCC,OAAvC,EAAgD;AAC5C,SAAOnB,KAAK,CAAC;AACToB,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAE,0CAFI;AAGTR,IAAAA,IAAI,EAAE;AACF,cAAQM,OADN;AAEF,mBAAaD;AAFX,KAHG;AAOTT,IAAAA,OAAO,EAAEV,UAAU;AAPV,GAAD,CAAL,CASFY,IATE,CASIW,QAAD,IAAc;AAChBN,IAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACH,GAXE,EAWCP,KAAD,IAAW;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAbE,CAAP;AAcH;;AACD,SAASQ,KAAT,CAAeC,QAAf,EAAyBC,QAAzB,EAAmC;AAC/B,SAAOzB,KAAK,CAAC;AACToB,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,GAAG,EAAE,eAFI;AAGTR,IAAAA,IAAI,EAAE;AACF,eAASW,QADP;AAEF,kBAAYC;AAFV;AAHG,GAAD,CAAL,CAQFd,IARE,CAQGe,cARH,EASFf,IATE,CASIgB,IAAD,IAAU;AACZC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA7B;AACA,WAAOG,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAP;AACH,GAZE,CAAP;AAaH;;AAED,SAASK,MAAT,GAAkB;AACd;AACAJ,EAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACH;;AAED,SAASC,MAAT,GAAkB;AACd,QAAMC,cAAc,GAAG;AACnBf,IAAAA,MAAM,EAAE,KADW;AAEnBX,IAAAA,OAAO,EAAEV,UAAU;AAFA,GAAvB;AAKA,SAAOqC,KAAK,CAAE,6BAAF,EAAgCD,cAAhC,CAAL,CAAqDxB,IAArD,CAA0De,cAA1D,CAAP;AACH;;AAED,SAASW,OAAT,CAAiBC,EAAjB,EAAqB;AACjB,QAAMH,cAAc,GAAG;AACnBf,IAAAA,MAAM,EAAE,KADW;AAEnBX,IAAAA,OAAO,EAAEV,UAAU;AAFA,GAAvB;AAKA,SAAOqC,KAAK,CAAE,+BAA8BE,EAAG,EAAnC,EAAsCH,cAAtC,CAAL,CAA2DxB,IAA3D,CAAgEe,cAAhE,CAAP;AACH;;AAED,SAASa,QAAT,CAAkBZ,IAAlB,EAAwB;AACpB,QAAMQ,cAAc,GAAG;AACnBf,IAAAA,MAAM,EAAE,MADW;AAEnBX,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnB+B,IAAAA,IAAI,EAAEV,IAAI,CAACC,SAAL,CAAeJ,IAAf;AAHa,GAAvB;AAMA,SAAOS,KAAK,CAAE,oCAAF,EAAuCD,cAAvC,CAAL,CAA4DxB,IAA5D,CAAiEe,cAAjE,CAAP;AACH;;AAED,SAASe,MAAT,CAAgBd,IAAhB,EAAsB;AAClB,QAAMQ,cAAc,GAAG;AACnBf,IAAAA,MAAM,EAAE,KADW;AAEnBX,IAAAA,OAAO,EAAE,EAAE,GAAGV,UAAU,EAAf;AAAmB,sBAAgB;AAAnC,KAFU;AAGnByC,IAAAA,IAAI,EAAEV,IAAI,CAACC,SAAL,CAAeJ,IAAf;AAHa,GAAvB;AAMA,SAAOS,KAAK,CAAE,+BAA8BT,IAAI,CAACW,EAAG,EAAxC,EAA2CH,cAA3C,CAAL,CAAgExB,IAAhE,CAAqEe,cAArE,CAAP;AAA4F;AAC/F,C,CAED;;;AACA,SAASgB,OAAT,CAAiBJ,EAAjB,EAAqB;AACjB,QAAMH,cAAc,GAAG;AACnBf,IAAAA,MAAM,EAAE,QADW;AAEnBX,IAAAA,OAAO,EAAEV,UAAU;AAFA,GAAvB;AAKA,SAAOqC,KAAK,CAAE,+BAA8BE,EAAG,EAAnC,EAAsCH,cAAtC,CAAL,CAA2DxB,IAA3D,CAAgEe,cAAhE,CAAP;AACH;;AAED,SAASA,cAAT,CAAwBJ,QAAxB,EAAkC;AAC9B,MAAI,CAACA,QAAQ,CAACqB,MAAV,KAAqB,GAAzB,EAA8B;AAC1B,QAAIrB,QAAQ,CAACqB,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACAX,MAAAA,MAAM;AACNY,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACH;;AAED,UAAM/B,KAAK,GAAGO,QAAQ,CAACH,OAAvB;AACA,WAAO4B,OAAO,CAACC,MAAR,CAAejC,KAAf,CAAP;AACH;;AACD,SAAOO,QAAP;AACH","sourcesContent":["import { authHeader } from '../helpers/auth-header';\r\nimport axios from 'axios';\r\nexport const commentService = {\r\n    getAllCommentPost,\r\n    getAllCommentReply,\r\n    createComment,\r\n    createCommentReply\r\n};\r\nfunction getAllCommentPost(idPost) {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.get(`http://localhost:8000/api/comments/commentPost/${idPost}`, config)\r\n        .then(res =>\r\n            res.data.data.data\r\n        )\r\n        .catch(error => console.log(error));\r\n\r\n}\r\nfunction getAllCommentReply(idComment) {\r\n    let header = authHeader();\r\n    let config = {\r\n        headers: header\r\n    }\r\n    return axios.get(`http://localhost:8000/api/commentReplies/commentCommentReply/${idComment}`, config)\r\n        .then(res =>\r\n            res.data.data.data\r\n        )\r\n        .catch(error => console.log(error));\r\n\r\n}\r\nfunction createComment(idPost, message) {\r\n    return axios({\r\n        method: 'post',\r\n        url: 'http://localhost:8000/api/comments',\r\n        data: {\r\n            \"text\": message,\r\n            \"postId\": idPost\r\n        },\r\n        headers: authHeader()\r\n    })\r\n        .then((response) => {\r\n            console.log(response);\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n}\r\nfunction createCommentReply(idComment, message) {\r\n    return axios({\r\n        method: 'post',\r\n        url: 'http://localhost:8000/api/commentReplies',\r\n        data: {\r\n            \"text\": message,\r\n            \"commentId\": idComment\r\n        },\r\n        headers: authHeader()\r\n    })\r\n        .then((response) => {\r\n            console.log(response);\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n}\r\nfunction login(username, password) {\r\n    return axios({\r\n        method: 'post',\r\n        url: '/users/signin',\r\n        data: {\r\n            \"email\": username,\r\n            \"password\": password\r\n        }\r\n    })\r\n        .then(handleResponse)\r\n        .then((user) => {\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return JSON.stringify(user);\r\n        })\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction getAll() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getById(id) {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction register(user) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user)\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/signup`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction update(user) {\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user)\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/${user.id}`, requestOptions).then(handleResponse);;\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nfunction _delete(id) {\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    if (!response.status === 200) {\r\n        if (response.status === 401) {\r\n            // auto logout if 401 response returned from api\r\n            logout();\r\n            window.location.reload(true);\r\n        }\r\n\r\n        const error = response.message;\r\n        return Promise.reject(error);\r\n    }\r\n    return response;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}