{"ast":null,"code":"import { authHeader } from '../helpers/auth-header';\nimport axios from 'axios';\nexport const userService = {\n  login,\n  logout,\n  register,\n  getAll,\n  getById,\n  update,\n  delete: _delete\n};\n\nfunction login(username, password) {\n  return axios({\n    method: 'post',\n    url: 'http://localhost:8000/api/users/login',\n    data: {\n      \"email\": username,\n      \"password\": password\n    }\n  }).then(handleResponse).then(user => {\n    localStorage.setItem('user', JSON.stringify(user));\n    return JSON.stringify(user);\n  });\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem('user');\n}\n\nfunction getAll() {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`http://localhost:8000/users`, requestOptions).then(handleResponse);\n}\n\nfunction getById(id) {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction register(user) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`http://localhost:8000/users/signup`, requestOptions).then(handleResponse);\n}\n\nfunction update(user) {\n  const requestOptions = {\n    method: 'PUT',\n    headers: { ...authHeader(),\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`http://localhost:8000/users/${user.id}`, requestOptions).then(handleResponse);\n  ;\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: authHeader()\n  };\n  return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n  if (!response.status === 200) {\n    if (response.status === 401) {\n      // auto logout if 401 response returned from api\n      logout();\n      window.location.reload(true);\n    }\n\n    const error = response.message;\n    return Promise.reject(error);\n  }\n\n  return response;\n}","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/services/user.service.js"],"names":["authHeader","axios","userService","login","logout","register","getAll","getById","update","delete","_delete","username","password","method","url","data","then","handleResponse","user","localStorage","setItem","JSON","stringify","removeItem","requestOptions","headers","fetch","id","body","response","status","window","location","reload","error","message","Promise","reject"],"mappings":"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","sourcesContent":["import { authHeader } from '../helpers/auth-header';\r\nimport axios from 'axios';\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getAll,\r\n    getById,\r\n    update,\r\n    delete: _delete\r\n};\r\n\r\nfunction  login(username, password) {\r\n    return  axios({\r\n            method: 'post',\r\n            url: 'http://localhost:8000/api/users/login',\r\n            data: { \r\n                \"email\": username,\r\n                \"password\": password\r\n            }\r\n        })\r\n        .then(handleResponse)\r\n        .then((user) => {\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return JSON.stringify(user);\r\n        })\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction getAll() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getById(id) {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction register(user) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user)\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/signup`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction update(user) {\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user)\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/${user.id}`, requestOptions).then(handleResponse);;\r\n}\r\n\r\n// prefixed function name with underscore because delete is a reserved word in javascript\r\nfunction _delete(id) {\r\n    const requestOptions = {\r\n        method: 'DELETE',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`http://localhost:8000/users/${id}`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    if (!response.status===200) {\r\n        if (response.status === 401) {\r\n            // auto logout if 401 response returned from api\r\n            logout();\r\n            window.location.reload(true);\r\n        }\r\n\r\n        const error = response.message;\r\n        return Promise.reject(error);\r\n    }\r\n    return response;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}