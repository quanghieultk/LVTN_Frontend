{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\LVTN\\\\cuisine-net\\\\src\\\\components\\\\whatdoyouthing\\\\WhatDoYouThing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport { red } from '@material-ui/core/colors';\nimport Tabs from './Tabs';\nimport { Chip, Divider } from '@material-ui/core';\nimport { Modal, Button } from 'antd';\nimport styles from './styles.module.css';\nimport { Form, Input } from 'antd';\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Upload, notification } from 'antd';\nimport axios from 'axios';\nimport { authHeader } from './../../helpers/auth-header';\nimport { PlusOutlined } from '@ant-design/icons';\nimport LocationOn from '@material-ui/icons/LocationOn';\nimport Location from './Location';\nimport getBase64 from './../../utils/getBase64';\nimport { postActions } from './../../actions/post.action';\nimport { postService } from '../../services/post.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"100%\",\n    marginTop: \"100px\",\n    marginBottom: \"1%\"\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: ''\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: \"white\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  itemIcon: {\n    width: \"20%\",\n    float: \"left\"\n  },\n  formItem: {\n    marginBottom: '0px'\n  }\n}));\nexport function WhatDoYouThing() {\n  _s();\n\n  const classes = useStyles();\n  const layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const location = useSelector(state => state.location);\n  const user = useSelector(state => state.authentication.user);\n  const postList = useSelector(state => state.post); // test message success\n\n  const openNotificationWithIcon = (type, mess) => {\n    notification[type]({\n      message: mess,\n      style: {\n        marginTop: 60\n      }\n    });\n  }; // end test message success\n\n\n  const dispatch = useDispatch();\n  const [isVisible, setIsVisible] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('false');\n\n  const onFinish = async values => {\n    let header = authHeader();\n    let config = {\n      headers: header\n    };\n    const data = new FormData();\n    data.append('description', values.user.introduction);\n\n    for (const file of fileList) {\n      let fileData = await getBase64(file.originFileObj);\n      let blod = new Blob([fileData], {\n        type: 'image/png'\n      });\n      data.append('files', blod, file.name);\n    }\n\n    data.append('hashtags', []);\n    data.append('location', JSON.stringify({\n      type: 'point',\n      coordinates: location.location,\n      address: location.address\n    }));\n    console.log(data.get('location'));\n    data.append('tags', []);\n    axios.post(`http://localhost:8000/api/posts`, data, config).then(res => {\n      setIsModalVisible(false);\n      postService.getAllPost().then(items => {\n        dispatch(postActions.getAllPost(items.data.data.data));\n        openNotificationWithIcon('success', 'Đăng bài thành công!');\n        form.resetFields();\n        setFileList([]);\n      }).catch(err => {\n        console.log(err);\n        openNotificationWithIcon('error', 'Đăng bài thất bại!');\n      });\n    }).catch(error => console.log(error));\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancelPreview = () => setPreviewVisible(false);\n\n  const onPreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n  };\n\n  const [fileList, setFileList] = useState([]);\n\n  const onChange = ({\n    fileList\n  }) => {\n    setFileList(fileList);\n  };\n\n  const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n\n  const [form] = Form.useForm();\n  const date = new Date().toLocaleString();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        \"aria-label\": \"recipe\",\n        className: classes.avatar,\n        src: user.data.user.photo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this),\n      subheader: /*#__PURE__*/_jsxDEV(Chip, {\n        variant: \"outlined\",\n        label: user.data.user.firstname + \" ơi, hôm nay bạn ăn gì thế?\",\n        style: {\n          width: \"100%\",\n          justifyContent: \"left\"\n        },\n        clickable: true,\n        onClick: showModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      style: {\n        width: \"96%\",\n        margin: 'auto'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      disableSpacing: true,\n      className: styles.post,\n      style: {\n        height: \"40%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"T\\u1EA1o b\\xE0i vi\\u1EBFt\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      footer: [null],\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          \"aria-label\": \"recipe\",\n          src: user.data.user.photo,\n          className: classes.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this),\n        title: user.data.user.firstname,\n        subheader: date + ' ' + location.address,\n        style: {\n          padding: '0'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        style: {\n          marginTop: '20px'\n        },\n        onFinish: onFinish,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          className: classes.formItem,\n          name: ['user', 'introduction'],\n          children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Upload, {\n          listType: \"picture-card\",\n          fileList: fileList,\n          onPreview: onPreview,\n          onChange: onChange,\n          beforeUpload: file => {\n            return false;\n          },\n          multiple: true,\n          children: fileList.length >= 8 ? null : uploadButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          visible: previewVisible,\n          title: previewTitle,\n          footer: null,\n          onCancel: handleCancelPreview,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"example\",\n            style: {\n              width: '100%'\n            },\n            src: previewImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          className: classes.formItem,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            block: true,\n            size: \"large\",\n            htmlType: \"submit\",\n            children: \"\\u0110\\u0103ng b\\xE0i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Location, {\n        isVisible: isVisible,\n        setIsVisible: setIsVisible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WhatDoYouThing, \"Vq92Y5VtEFfPAsoOlLDMKRKZA8w=\", false, function () {\n  return [useStyles, useSelector, useSelector, useSelector, useDispatch, Form.useForm];\n});\n\n_c = WhatDoYouThing;\n\nvar _c;\n\n$RefreshReg$(_c, \"WhatDoYouThing\");","map":{"version":3,"sources":["D:/LVTN/LVTN/cuisine-net/src/components/whatdoyouthing/WhatDoYouThing.js"],"names":["React","useState","useDispatch","useSelector","makeStyles","Card","CardHeader","CardActions","Avatar","red","Tabs","Chip","Divider","Modal","Button","styles","Form","Input","WorkIcon","BeachAccessIcon","VideocamIcon","List","ListItem","ListItemAvatar","PhotoCamera","IconButton","Upload","notification","axios","authHeader","PlusOutlined","LocationOn","Location","getBase64","postActions","postService","useStyles","theme","root","maxWidth","marginTop","marginBottom","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","modal","display","alignItems","justifyContent","paper","boxShadow","shadows","padding","spacing","itemIcon","width","float","formItem","WhatDoYouThing","classes","layout","labelCol","span","wrapperCol","expanded","setExpanded","handleExpandClick","location","state","user","authentication","postList","post","openNotificationWithIcon","type","mess","message","style","dispatch","isVisible","setIsVisible","isModalVisible","setIsModalVisible","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","onFinish","values","header","config","headers","data","FormData","append","introduction","file","fileList","fileData","originFileObj","blod","Blob","name","JSON","stringify","coordinates","address","console","log","get","then","res","getAllPost","items","form","resetFields","setFileList","catch","err","error","showModal","handleOk","handleCancel","handleCancelPreview","onPreview","url","preview","substring","lastIndexOf","onChange","uploadButton","useForm","date","Date","toLocaleString","photo","firstname","margin","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,mBAA9B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,MAA5B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,MAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,WAAT,QAA4B,6BAA5B;;AAEA,MAAMC,SAAS,GAAGhC,UAAU,CAAEiC,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,MADR;AAEFC,IAAAA,SAAS,EAAE,OAFT;AAGFC,IAAAA,YAAY,EAAE;AAHZ,GAD+B;AAMrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,CADL;AAEHC,IAAAA,UAAU,EAAE,QAFT,CAEmB;;AAFnB,GAN8B;AAUrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,SAAS,EAAE,cADP;AAEJC,IAAAA,UAAU,EAAE,MAFR;AAGJC,IAAAA,UAAU,EAAEX,KAAK,CAACY,WAAN,CAAkBC,MAAlB,CAAyB,WAAzB,EAAsC;AAC9CC,MAAAA,QAAQ,EAAEd,KAAK,CAACY,WAAN,CAAkBE,QAAlB,CAA2BC;AADS,KAAtC;AAHR,GAV6B;AAiBrCC,EAAAA,UAAU,EAAE;AACRP,IAAAA,SAAS,EAAE;AADH,GAjByB;AAoBrCQ,EAAAA,MAAM,EAAE;AACJC,IAAAA,eAAe,EAAE;AADb,GApB6B;AAuBrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,UAAU,EAAE,QAFT;AAGHC,IAAAA,cAAc,EAAE;AAHb,GAvB8B;AA4BrCC,EAAAA,KAAK,EAAE;AACHL,IAAAA,eAAe,EAAE,OADd;AAEHM,IAAAA,SAAS,EAAExB,KAAK,CAACyB,OAAN,CAAc,CAAd,CAFR;AAGHC,IAAAA,OAAO,EAAE1B,KAAK,CAAC2B,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AAHN,GA5B8B;AAiCrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,KADD;AAENC,IAAAA,KAAK,EAAE;AAFD,GAjC2B;AAqCrCC,EAAAA,QAAQ,EAAE;AACN3B,IAAAA,YAAY,EAAE;AADR;AArC2B,CAAZ,CAAD,CAA5B;AA2CA,OAAO,SAAS4B,cAAT,GAA0B;AAAA;;AAE7B,QAAMC,OAAO,GAAGlC,SAAS,EAAzB;AACA,QAAMmC,MAAM,GAAG;AACXC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADC;AAEXC,IAAAA,UAAU,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFD,GAAf;AAIA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0B5E,KAAK,CAACC,QAAN,CAAe,KAAf,CAAhC;;AACA,QAAM4E,iBAAiB,GAAG,MAAM;AAC5BD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACH,GAFD;;AAIA,QAAMG,QAAQ,GAAG3E,WAAW,CAAC4E,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAME,IAAI,GAAG7E,WAAW,CAAC4E,KAAK,IAAIA,KAAK,CAACE,cAAN,CAAqBD,IAA/B,CAAxB;AACA,QAAME,QAAQ,GAAG/E,WAAW,CAAC4E,KAAK,IAAIA,KAAK,CAACI,IAAhB,CAA5B,CAd6B,CAgB7B;;AACA,QAAMC,wBAAwB,GAAG,CAACC,IAAD,EAAMC,IAAN,KAAe;AAC5C3D,IAAAA,YAAY,CAAC0D,IAAD,CAAZ,CAAmB;AACfE,MAAAA,OAAO,EAAED,IADM;AAEfE,MAAAA,KAAK,EAAE;AACHhD,QAAAA,SAAS,EAAE;AADR;AAFQ,KAAnB;AAMH,GAPD,CAjB6B,CAyB7B;;;AACA,QAAMiD,QAAQ,GAAGvF,WAAW,EAA5B;AAEA,QAAM,CAACwF,SAAD,EAAYC,YAAZ,IAA4B1F,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC2F,cAAD,EAAiBC,iBAAjB,IAAsC5F,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAAC6F,cAAD,EAAiBC,iBAAjB,IAAsC9F,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAAC+F,YAAD,EAAeC,eAAf,IAAkChG,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACiG,YAAD,EAAeC,eAAf,IAAkClG,QAAQ,CAAC,OAAD,CAAhD;;AAEA,QAAMmG,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AAC/B,QAAIC,MAAM,GAAGzE,UAAU,EAAvB;AACA,QAAI0E,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAEF;AADA,KAAb;AAGA,UAAMG,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,EAA2BN,MAAM,CAACrB,IAAP,CAAY4B,YAAvC;;AACA,SAAK,MAAMC,IAAX,IAAmBC,QAAnB,EAA6B;AACzB,UAAIC,QAAQ,GAAG,MAAM9E,SAAS,CAAC4E,IAAI,CAACG,aAAN,CAA9B;AACA,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACH,QAAD,CAAT,EAAqB;AAAE1B,QAAAA,IAAI,EAAE;AAAR,OAArB,CAAX;AACAoB,MAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBM,IAArB,EAA2BJ,IAAI,CAACM,IAAhC;AACH;;AACDV,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwB,EAAxB;AACAF,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBS,IAAI,CAACC,SAAL,CAAe;AACnChC,MAAAA,IAAI,EAAE,OAD6B;AAEnCiC,MAAAA,WAAW,EAAExC,QAAQ,CAACA,QAFa;AAGnCyC,MAAAA,OAAO,EAAEzC,QAAQ,CAACyC;AAHiB,KAAf,CAAxB;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAI,CAACiB,GAAL,CAAS,UAAT,CAAZ;AACAjB,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB,EAApB;AACA/E,IAAAA,KAAK,CAACuD,IAAN,CAAY,iCAAZ,EAA8CsB,IAA9C,EAAoDF,MAApD,EACKoB,IADL,CACUC,GAAG,IAAI;AACT/B,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AAEA1D,MAAAA,WAAW,CAAC0F,UAAZ,GACKF,IADL,CACUG,KAAK,IAAI;AACXrC,QAAAA,QAAQ,CAACvD,WAAW,CAAC2F,UAAZ,CAAuBC,KAAK,CAACrB,IAAN,CAAWA,IAAX,CAAgBA,IAAvC,CAAD,CAAR;AACArB,QAAAA,wBAAwB,CAAC,SAAD,EAAW,sBAAX,CAAxB;AACA2C,QAAAA,IAAI,CAACC,WAAL;AACAC,QAAAA,WAAW,CAAC,EAAD,CAAX;AAEH,OAPL,EAQMC,KARN,CAQYC,GAAG,IAAI;AACXX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACA/C,QAAAA,wBAAwB,CAAC,OAAD,EAAS,oBAAT,CAAxB;AACH,OAXL;AAaH,KAjBL,EAkBM8C,KAlBN,CAkBYE,KAAK,IAAIZ,OAAO,CAACC,GAAR,CAAYW,KAAZ,CAlBrB;AAmBH,GAvCD;;AAwCA,QAAMC,SAAS,GAAG,MAAM;AACpBxC,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFD;;AAIA,QAAMyC,QAAQ,GAAG,MAAM;AACnBzC,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAIA,QAAM0C,YAAY,GAAG,MAAM;AACvB1C,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAGA,QAAM2C,mBAAmB,GAAG,MAAMzC,iBAAiB,CAAC,KAAD,CAAnD;;AACA,QAAM0C,SAAS,GAAG,MAAM5B,IAAN,IAAc;AAC5B,QAAI,CAACA,IAAI,CAAC6B,GAAN,IAAa,CAAC7B,IAAI,CAAC8B,OAAvB,EAAgC;AAC5B9B,MAAAA,IAAI,CAAC8B,OAAL,GAAe,MAAM1G,SAAS,CAAC4E,IAAI,CAACG,aAAN,CAA9B;AACH;;AAEDf,IAAAA,eAAe,CAACY,IAAI,CAAC6B,GAAL,IAAY7B,IAAI,CAAC8B,OAAlB,CAAf;AACA5C,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAI,IAAAA,eAAe,CAACU,IAAI,CAACM,IAAL,IAAaN,IAAI,CAAC6B,GAAL,CAASE,SAAT,CAAmB/B,IAAI,CAAC6B,GAAL,CAASG,WAAT,CAAqB,GAArB,IAA4B,CAA/C,CAAd,CAAf;AACH,GARD;;AASA,QAAM,CAAC/B,QAAD,EAAWmB,WAAX,IAA0BhI,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAM6I,QAAQ,GAAG,CAAC;AAAEhC,IAAAA;AAAF,GAAD,KAAkB;AAC/BmB,IAAAA,WAAW,CAACnB,QAAD,CAAX;AACH,GAFD;;AAGA,QAAMiC,YAAY,gBACd;AAAA,4BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAE;AAAEvG,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAMA,QAAM,CAACuF,IAAD,IAAS/G,IAAI,CAACgI,OAAL,EAAf;AACA,QAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,cAAX,EAAb;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEpI,MAAM,CAACuB,IAAxB;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,MAAM,eACF,QAAC,MAAD;AAAQ,sBAAW,QAAnB;AAA4B,QAAA,SAAS,EAAEgC,OAAO,CAAChB,MAA/C;AAAuD,QAAA,GAAG,EAAE0B,IAAI,CAACyB,IAAL,CAAUzB,IAAV,CAAeoE;AAA3E;AAAA;AAAA;AAAA;AAAA,cAFR;AAKI,MAAA,SAAS,eACL,QAAC,IAAD;AACI,QAAA,OAAO,EAAC,UADZ;AAEI,QAAA,KAAK,EAAEpE,IAAI,CAACyB,IAAL,CAAUzB,IAAV,CAAeqE,SAAf,GAA2B,6BAFtC;AAGI,QAAA,KAAK,EAAE;AACHnF,UAAAA,KAAK,EAAE,MADJ;AAEHP,UAAAA,cAAc,EAAE;AAFb,SAHX;AAOI,QAAA,SAAS,MAPb;AAQI,QAAA,OAAO,EAAE0E;AARb;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,YADJ,eAsBI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEnE,QAAAA,KAAK,EAAE,KAAT;AAAgBoF,QAAAA,MAAM,EAAE;AAAxB;AAAhB;AAAA;AAAA;AAAA;AAAA,YAtBJ,eAuBI,QAAC,WAAD;AAAa,MAAA,cAAc,MAA3B;AAA4B,MAAA,SAAS,EAAEvI,MAAM,CAACoE,IAA9C;AAAoD,MAAA,KAAK,EAAE;AAAExC,QAAAA,MAAM,EAAE;AAAV,OAA3D;AAAA,6BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAvBJ,eA0BI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,2BAAb;AACI,MAAA,OAAO,EAAEiD,cADb;AAEI,MAAA,IAAI,EAAE0C,QAFV;AAGI,MAAA,QAAQ,EAAEC,YAHd;AAII,MAAA,MAAM,EAAE,CAAC,IAAD,CAJZ;AAAA,8BAMI,QAAC,UAAD;AACI,QAAA,MAAM,eACF,QAAC,MAAD;AAAQ,wBAAW,QAAnB;AAA4B,UAAA,GAAG,EAAEvD,IAAI,CAACyB,IAAL,CAAUzB,IAAV,CAAeoE,KAAhD;AAAuD,UAAA,SAAS,EAAE9E,OAAO,CAAChB;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAFR;AAKI,QAAA,KAAK,EAAE0B,IAAI,CAACyB,IAAL,CAAUzB,IAAV,CAAeqE,SAL1B;AAMI,QAAA,SAAS,EAAEJ,IAAI,GAAG,GAAP,GAAanE,QAAQ,CAACyC,OANrC;AAOI,QAAA,KAAK,EAAE;AAAExD,UAAAA,OAAO,EAAE;AAAX;AAPX;AAAA;AAAA;AAAA;AAAA,cANJ,eAeI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEgE,IAAZ;AAAkB,QAAA,KAAK,EAAE;AAAEvF,UAAAA,SAAS,EAAE;AAAb,SAAzB;AAAgD,QAAA,QAAQ,EAAE4D,QAA1D;AAAA,gCACI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,SAAS,EAAE9B,OAAO,CAACF,QAA9B;AAAwC,UAAA,IAAI,EAAE,CAAC,MAAD,EAAS,cAAT,CAA9C;AAAA,iCACI,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AACI,UAAA,QAAQ,EAAC,cADb;AAEI,UAAA,QAAQ,EAAE0C,QAFd;AAGI,UAAA,SAAS,EAAE2B,SAHf;AAII,UAAA,QAAQ,EAAEK,QAJd;AAKI,UAAA,YAAY,EAAEjC,IAAI,IAAI;AAClB,mBAAO,KAAP;AACH,WAPL;AAQI,UAAA,QAAQ,MARZ;AAAA,oBAUKC,QAAQ,CAACyC,MAAT,IAAmB,CAAnB,GAAuB,IAAvB,GAA8BR;AAVnC;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAgBI,QAAC,KAAD;AACI,UAAA,OAAO,EAAEjD,cADb;AAEI,UAAA,KAAK,EAAEI,YAFX;AAGI,UAAA,MAAM,EAAE,IAHZ;AAII,UAAA,QAAQ,EAAEsC,mBAJd;AAAA,iCAMI;AAAK,YAAA,GAAG,EAAC,SAAT;AAAmB,YAAA,KAAK,EAAE;AAAEtE,cAAAA,KAAK,EAAE;AAAT,aAA1B;AAA6C,YAAA,GAAG,EAAE8B;AAAlD;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAgDI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,SAAS,EAAE1B,OAAO,CAACF,QAA9B;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,SAAb;AAAuB,YAAA,KAAK,MAA5B;AAA6B,YAAA,IAAI,EAAC,OAAlC;AAA0C,YAAA,QAAQ,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAhDJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAqEI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cArEJ,eAuEI,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEsB,SAArB;AAAgC,QAAA,YAAY,EAAEC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAvEJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwGH;;GApNetB,c;UAEIjC,S,EAUCjC,W,EACJA,W,EACIA,W,EAYAD,W,EAgFFc,IAAI,CAACgI,O;;;KA1GR3E,c","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Tabs from './Tabs';\r\nimport { Chip, Divider } from '@material-ui/core';\r\nimport { Modal, Button } from 'antd';\r\nimport styles from './styles.module.css';\r\nimport { Form, Input } from 'antd';\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport BeachAccessIcon from \"@material-ui/icons/BeachAccess\";\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Upload, notification } from 'antd';\r\nimport axios from 'axios';\r\nimport { authHeader } from './../../helpers/auth-header';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport Location from './Location';\r\nimport getBase64 from './../../utils/getBase64';\r\nimport { postActions } from './../../actions/post.action';\r\nimport { postService } from '../../services/post.service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        marginTop: \"100px\",\r\n        marginBottom: \"1%\"\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: '',\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: \"white\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    itemIcon: {\r\n        width: \"20%\",\r\n        float: \"left\",\r\n    },\r\n    formItem: {\r\n        marginBottom: '0px'\r\n    }\r\n}));\r\n\r\n\r\nexport function WhatDoYouThing() {\r\n\r\n    const classes = useStyles();\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 },\r\n    };\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const location = useSelector(state => state.location);\r\n    const user = useSelector(state => state.authentication.user);\r\n    const postList = useSelector(state => state.post);\r\n\r\n    // test message success\r\n    const openNotificationWithIcon = (type,mess) => {\r\n        notification[type]({\r\n            message: mess,\r\n            style: {\r\n                marginTop: 60\r\n            },\r\n        });\r\n    };\r\n    // end test message success\r\n    const dispatch = useDispatch();\r\n\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('false');\r\n\r\n    const onFinish = async (values) => {\r\n        let header = authHeader();\r\n        let config = {\r\n            headers: header\r\n        }\r\n        const data = new FormData();\r\n        data.append('description', values.user.introduction);\r\n        for (const file of fileList) {\r\n            let fileData = await getBase64(file.originFileObj);\r\n            let blod = new Blob([fileData], { type: 'image/png' });\r\n            data.append('files', blod, file.name);\r\n        }\r\n        data.append('hashtags', []);\r\n        data.append('location', JSON.stringify({\r\n            type: 'point',\r\n            coordinates: location.location,\r\n            address: location.address\r\n        }));\r\n        console.log(data.get('location'));\r\n        data.append('tags', []);\r\n        axios.post(`http://localhost:8000/api/posts`, data, config)\r\n            .then(res => {\r\n                setIsModalVisible(false);\r\n\r\n                postService.getAllPost()\r\n                    .then(items => {\r\n                        dispatch(postActions.getAllPost(items.data.data.data));\r\n                        openNotificationWithIcon('success','Đăng bài thành công!');\r\n                        form.resetFields();\r\n                        setFileList([]);\r\n\r\n                    }\r\n                    ).catch(err => {\r\n                        console.log(err)\r\n                        openNotificationWithIcon('error','Đăng bài thất bại!')\r\n                    }\r\n                    );\r\n            }\r\n            ).catch(error => console.log(error));\r\n    };\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const handleCancelPreview = () => setPreviewVisible(false);\r\n    const onPreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewVisible(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\r\n    };\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const onChange = ({ fileList }) => {\r\n        setFileList(fileList);\r\n    };\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n    const [form] = Form.useForm();\r\n    const date = new Date().toLocaleString();\r\n    return (\r\n        <Card className={styles.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar} src={user.data.user.photo}>\r\n                    </Avatar>\r\n                }\r\n                subheader={\r\n                    <Chip\r\n                        variant=\"outlined\"\r\n                        label={user.data.user.firstname + \" ơi, hôm nay bạn ăn gì thế?\"}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            justifyContent: \"left\"\r\n                        }}\r\n                        clickable\r\n                        onClick={showModal}\r\n                    >\r\n\r\n                    </Chip>\r\n                }\r\n            />\r\n\r\n            <Divider style={{ width: \"96%\", margin: 'auto' }}></Divider>\r\n            <CardActions disableSpacing className={styles.post} style={{ height: \"40%\" }}>\r\n                <Tabs></Tabs>\r\n            </CardActions>\r\n            <Modal title=\"Tạo bài viết\"\r\n                visible={isModalVisible}\r\n                onOk={handleOk}\r\n                onCancel={handleCancel}\r\n                footer={[null]}\r\n            >\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar aria-label=\"recipe\" src={user.data.user.photo} className={classes.avatar}>\r\n                        </Avatar>\r\n                    }\r\n                    title={user.data.user.firstname}\r\n                    subheader={date + ' ' + location.address}\r\n                    style={{ padding: '0' }}\r\n                />\r\n                <Form form={form} style={{ marginTop: '20px' }} onFinish={onFinish}>\r\n                    <Form.Item className={classes.formItem} name={['user', 'introduction']}>\r\n                        <Input.TextArea />\r\n                    </Form.Item>\r\n                    <Upload\r\n                        listType=\"picture-card\"\r\n                        fileList={fileList}\r\n                        onPreview={onPreview}\r\n                        onChange={onChange}\r\n                        beforeUpload={file => {\r\n                            return false;\r\n                        }}\r\n                        multiple\r\n                    >\r\n                        {fileList.length >= 8 ? null : uploadButton}\r\n                    </Upload>\r\n                    <Modal\r\n                        visible={previewVisible}\r\n                        title={previewTitle}\r\n                        footer={null}\r\n                        onCancel={handleCancelPreview}\r\n                    >\r\n                        <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                    </Modal>\r\n                    {/* <Form.Item className={classes.formItem}  >\r\n                        <List >\r\n                            <ListItem button className={classes.itemIcon}>\r\n                                <ListItemAvatar>\r\n                                    <VideocamIcon color=\"inherit\"></VideocamIcon>\r\n                                </ListItemAvatar>\r\n                            </ListItem>\r\n                            <ListItem button className={classes.itemIcon}>\r\n                                <ListItemAvatar>\r\n                                    <WorkIcon />\r\n                                </ListItemAvatar>\r\n                            </ListItem>\r\n                            <ListItem button className={classes.itemIcon}>\r\n                                <ListItemAvatar>\r\n                                    <BeachAccessIcon />\r\n                                </ListItemAvatar>\r\n                            </ListItem>\r\n                            <ListItem button className={classes.itemIcon} onClick={(e) => { setIsVisible(true) }}>\r\n                                <ListItemAvatar>\r\n                                    <LocationOn />\r\n                                </ListItemAvatar>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Form.Item > */}\r\n                    <Form.Item className={classes.formItem}  >\r\n                        <Button type=\"primary\" block size='large' htmlType=\"submit\">\r\n                            Đăng bài\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                <Card>\r\n                </Card>\r\n                <Location isVisible={isVisible} setIsVisible={setIsVisible}>\r\n                </Location>\r\n            </Modal>\r\n        </Card>\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}