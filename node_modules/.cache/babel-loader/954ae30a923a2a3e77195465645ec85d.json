{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport ComponentState from '../lifecycle/component-state';\n\nvar LayerState = function (_ComponentState) {\n  _inherits(LayerState, _ComponentState);\n\n  var _super = _createSuper(LayerState);\n\n  function LayerState(_ref) {\n    var _this;\n\n    var attributeManager = _ref.attributeManager,\n        layer = _ref.layer;\n\n    _classCallCheck(this, LayerState);\n\n    _this = _super.call(this, layer);\n    _this.attributeManager = attributeManager;\n    _this.model = null;\n    _this.needsRedraw = true;\n    _this.subLayers = null;\n    _this.usesPickingColorCache = false;\n    return _this;\n  }\n\n  _createClass(LayerState, [{\n    key: \"layer\",\n    get: function get() {\n      return this.component;\n    },\n    set: function set(layer) {\n      this.component = layer;\n    }\n  }]);\n\n  return LayerState;\n}(ComponentState);\n\nexport { LayerState as default };","map":{"version":3,"sources":["../../../src/lib/layer-state.js"],"names":["LayerState","ComponentState","attributeManager","layer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,cAAA,MAAA,8BAAA;;IAEqBA,U;;;;;AACnB,WAAA,UAAA,CAAA,IAAA,EAAuC;AAAA,QAAA,KAAA;;AAAA,QAA1BE,gBAA0B,GAAA,IAAA,CAA1BA,gBAA0B;AAAA,QAARC,KAAQ,GAAA,IAAA,CAARA,KAAQ;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,CAAA;;AACrC,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA;AACA,IAAA,KAAA,CAAA,gBAAA,GAAA,gBAAA;AACA,IAAA,KAAA,CAAA,KAAA,GAAA,IAAA;AACA,IAAA,KAAA,CAAA,WAAA,GAAA,IAAA;AACA,IAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,IAAA,KAAA,CAAA,qBAAA,GAAA,KAAA;AANqC,WAAA,KAAA;AAOtC;;;;wBAEW;AACV,aAAO,KAAP,SAAA;;sBAGQA,K,EAAO;AACf,WAAA,SAAA,GAAA,KAAA;AACD;;;;EAhBqCF,c;;SAAnBD,U","sourcesContent":["import ComponentState from '../lifecycle/component-state';\n\nexport default class LayerState extends ComponentState {\n  constructor({attributeManager, layer}) {\n    super(layer);\n    this.attributeManager = attributeManager;\n    this.model = null;\n    this.needsRedraw = true;\n    this.subLayers = null; // reference to sublayers rendered in a previous cycle\n    this.usesPickingColorCache = false;\n  }\n\n  get layer() {\n    return this.component;\n  }\n\n  set layer(layer) {\n    this.component = layer;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}