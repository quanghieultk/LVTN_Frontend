{"ast":null,"code":"var _jsxFileName = \"D:\\\\LVTN\\\\deploy_frontend\\\\DEPLOYFRONTEND\\\\src\\\\components\\\\restaurantRecommend\\\\RestaurantHot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from 'antd';\nimport { List, Avatar } from 'antd';\nimport axios from 'axios';\nimport { authHeader } from '../../helpers/auth-header';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({}));\nexport default function RestaurantHot() {\n  _s();\n\n  const userInterests = useSelector(state => state.authentication);\n  const [data, setData] = useState([]);\n  const classes = useStyles();\n  let header = authHeader();\n  useEffect(() => {\n    let interests = [];\n\n    if (userInterests.user.data.user.interests !== undefined) {\n      userInterests.user.data.user.interests.map(ele => interests.push(ele._id));\n      axios({\n        method: 'GET',\n        url: 'http://localhost:8000/api/restaurants/getListRestaurantTop',\n        headers: header,\n        params: {\n          interests: interests\n        }\n      }).then(response => {\n        // console.log(res.data.data.listRestaurant)\n        // setData(res.data.data.listRestaurant)\n        let data = response.data.replace(/'/g, '\"').trim();\n        console.log(data);\n        console.log(JSON.parse(data));\n        setData(JSON.parse(data));\n      }, err => {\n        console.log(err);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    size: \"small\",\n    title: \"G\\u1EE3i \\xFD d\\xE0nh cho b\\u1EA1n\",\n    style: {\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(List, {\n      itemLayout: \"horizontal\",\n      dataSource: data,\n      renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 37\n          }, this),\n          title: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: 'http://ec2-3-15-183-180.us-east-2.compute.amazonaws.com:3000/restaurant/' + item._id,\n            children: item.restaurantname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 36\n          }, this),\n          description: item.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RestaurantHot, \"LNeh/oQPx6yOtB0z7POrBRJTHfA=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = RestaurantHot;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantHot\");","map":{"version":3,"sources":["D:/LVTN/deploy_frontend/DEPLOYFRONTEND/src/components/restaurantRecommend/RestaurantHot.js"],"names":["React","useEffect","useState","makeStyles","Card","List","Avatar","axios","authHeader","useSelector","useStyles","theme","RestaurantHot","userInterests","state","authentication","data","setData","classes","header","interests","user","undefined","map","ele","push","_id","method","url","headers","params","then","response","replace","trim","console","log","JSON","parse","err","width","item","restaurantname","address"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card } from 'antd';\r\nimport { List, Avatar } from 'antd';\r\nimport axios from 'axios';\r\nimport { authHeader } from '../../helpers/auth-header';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\n\r\nexport default function RestaurantHot() {\r\n    const userInterests=useSelector(state=>state.authentication)\r\n    const [data, setData] = useState([]);\r\n    const classes = useStyles();\r\n    let header = authHeader();\r\n    useEffect(() => {\r\n        let interests=[];\r\n        if (userInterests.user.data.user.interests !== undefined) {\r\n            userInterests.user.data.user.interests.map(ele=>interests.push(ele._id))\r\n        axios({\r\n            method: 'GET',\r\n            url: 'http://localhost:8000/api/restaurants/getListRestaurantTop',\r\n            headers: header,\r\n            params:{\r\n                interests: interests\r\n            }\r\n        }).then(response => {\r\n            // console.log(res.data.data.listRestaurant)\r\n            // setData(res.data.data.listRestaurant)\r\n            let data = response.data.replace(/'/g, '\"').trim()\r\n            console.log(data)\r\n            console.log(JSON.parse(data))\r\n            setData(JSON.parse(data));\r\n        }, err => {\r\n            console.log(err)\r\n        })\r\n        }\r\n    }, [])\r\n    return (\r\n        <Card size=\"small\" title=\"Gợi ý dành cho bạn\" style={{ width: '100%' }}>\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={data}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            avatar={<Avatar src={''} />}\r\n                            title={<a href={'http://ec2-3-15-183-180.us-east-2.compute.amazonaws.com:3000/restaurant/' + item._id}>{item.restaurantname}</a>}\r\n                            description={item.address}\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </Card>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}